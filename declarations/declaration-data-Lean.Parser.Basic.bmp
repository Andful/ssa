{"name":"Lean.Parser.Basic","instances":[{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instAndThenParser","className":"AndThen"},{"typeNames":["Lean.Parser.OrElseOnAntiquotBehavior"],"name":"Lean.Parser.instBEqOrElseOnAntiquotBehavior","className":"BEq"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instOrElseParser","className":"OrElse"},{"typeNames":["Lean.Parser.TokenMap"],"name":"Lean.Parser.TokenMap.instInhabitedTokenMap","className":"Inhabited"},{"typeNames":["Lean.Parser.TokenMap"],"name":"Lean.Parser.TokenMap.instEmptyCollectionTokenMap","className":"EmptyCollection"},{"typeNames":["Lean.Parser.TokenMap","Prod","Lean.Name","List"],"name":"Lean.Parser.TokenMap.instForInTokenMapProdNameList","className":"ForIn"},{"typeNames":["Lean.Parser.PrattParsingTables"],"name":"Lean.Parser.instInhabitedPrattParsingTables","className":"Inhabited"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instInhabitedLeadingIdentBehavior","className":"Inhabited"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instBEqLeadingIdentBehavior","className":"BEq"},{"typeNames":["Lean.Parser.LeadingIdentBehavior"],"name":"Lean.Parser.instReprLeadingIdentBehavior","className":"Repr"},{"typeNames":["Lean.Parser.ParserCategory"],"name":"Lean.Parser.instInhabitedParserCategory","className":"Inhabited"},{"typeNames":["String","Lean.Parser.Parser"],"name":"Lean.Parser.instCoeStringParser","className":"Coe"}],"imports":["Init","Lean.Parser.Types"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1693-L1694","name":"Lean.Syntax.forArgsM","line":1693,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.forArgsM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Syntax.forArgsM\"><span class=\"name\">Lean</span>.<span class=\"name\">Syntax</span>.<span class=\"name\">forArgsM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1690-L1691","name":"Lean.Syntax.foldArgs","line":1690,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Syntax.foldArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Syntax</span>.<span class=\"name\">foldArgs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1687-L1688","name":"Lean.Syntax.foldArgsM","line":1687,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Syntax.foldArgsM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Syntax.foldArgsM\"><span class=\"name\">Lean</span>.<span class=\"name\">Syntax</span>.<span class=\"name\">foldArgsM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1675-L1678","name":"Lean.Parser.skip","line":1675,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.skip","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.skip\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">skip</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1669-L1673","name":"Lean.Parser.fieldIdx","line":1669,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.fieldIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">fieldIdx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1659-L1667","name":"Lean.Parser.fieldIdxFn","line":1659,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.fieldIdxFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.fieldIdxFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">fieldIdxFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1652-L1657","name":"Lean.Parser.prattParser","line":1652,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.prattParser","doc":"Implements a variant of Pratt's algorithm. In Pratt's algorithms tokens have a right and left binding power.\nIn our implementation, parsers have precedence instead. This method selects a parser (or more, via\n`longestMatchFn`) from `leadingTable` based on the current token. Note that the unindexed `leadingParsers` parsers\nare also tried. We have the unidexed `leadingParsers` because some parsers do not have a \"first token\". Example:\n```\nsyntax term:51 \"≤\" ident \"<\" term \"|\" term : index\n```\nExample, in principle, the set of first tokens for this parser is any token that can start a term, but this set\nis always changing. Thus, this parsing rule is stored as an unindexed leading parser at `leadingParsers`.\nAfter processing the leading parser, we chain with parsers from `trailingTable`/`trailingParsers` that have precedence\nat least `c.prec` where `c` is the `ParsingContext`. Recall that `c.prec` is set by `categoryParser`.\n\nNote that in the original Pratt's algorith, precedences are only checked before calling trailing parsers. In our\nimplementation, leading *and* trailing parsers check the precendece. We claim our algorithm is more flexible,\nmodular and easier to understand.\n\n`antiquotParser` should be a `mkAntiquot` parser (or always fail) and is tried before all other parsers.\nIt should not be added to the regular leading parsers because it would heavily\noverlap with antiquotation parsers nested inside them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.prattParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">prattParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tables : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(antiquotParser : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1611-L1629","name":"Lean.Parser.trailingLoop","line":1611,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.trailingLoop\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">trailingLoop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tables : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1608-L1609","name":"Lean.Parser.trailingLoopStep","line":1608,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingLoopStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.trailingLoopStep\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">trailingLoopStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tables : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(left : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1605-L1606","name":"Lean.Parser.leadingParser","line":1605,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.leadingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">leadingParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tables : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(antiquotParser : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1594-L1603","name":"Lean.Parser.leadingParserAux","line":1594,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingParserAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.leadingParserAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">leadingParserAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tables : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1587-L1588","name":"Lean.Parser.sepBy1","line":1587,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.sepBy1\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepBy1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(psep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.symbol\">Lean.Parser.symbol</a> <span class=\"fn\">sep</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingSep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1584-L1585","name":"Lean.Parser.sepBy","line":1584,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.sepBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepBy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(psep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.symbol\">Lean.Parser.symbol</a> <span class=\"fn\">sep</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingSep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1581-L1582","name":"Lean.Parser.sepByElemParser","line":1581,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByElemParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.sepByElemParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepByElemParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1574-L1575","name":"Lean.Parser.nodeWithAntiquot","line":1574,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeWithAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nodeWithAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nodeWithAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(anonymous : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1570-L1572","name":"Lean.Parser.withAntiquotSpliceAndSuffix","line":1570,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSpliceAndSuffix","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSpliceAndSuffix\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withAntiquotSpliceAndSuffix</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(suffix : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1560-L1568","name":"Lean.Parser.withAntiquotSuffixSplice","line":1560,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSuffixSplice","doc":"Parse `suffix` after an antiquotation, e.g. `$x,*`, and put both into a new node. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotSuffixSplice\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withAntiquotSuffixSplice</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(suffix : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1543-L1549","name":"Lean.Parser.mkAntiquotSplice","line":1543,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquotSplice","doc":"Parse `$[p]suffix`, e.g. `$[p],*`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquotSplice\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkAntiquotSplice</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(suffix : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1538-L1540","name":"Lean.Parser.withoutInfo","line":1538,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withoutInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withoutInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1533-L1536","name":"Lean.Parser.withAntiquot","line":1533,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquot","doc":"Optimized version of `mkAntiquot ... <|> p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(antiquotP : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1521-L1530","name":"Lean.Parser.withAntiquotFn","line":1521,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withAntiquotFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withAntiquotFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(antiquotP : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isCatAntiquot : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1508-L1519","name":"Lean.Parser.mkAntiquot","line":1508,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquot","doc":"Define parser for `$e` (if `anonymous == true`) and `$e:name`.\n`kind` is embedded in the antiquotation's kind, and checked at syntax `match` unless `isPseudoKind` is true.\nAntiquotations can be escaped as in `$$e`, which produces the syntax tree for `$e`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.mkAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(anonymous : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isPseudoKind : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1501-L1502","name":"Lean.Parser.unicodeSymbol","line":1501,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbol","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbol\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">unicodeSymbol</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(asciiSym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1498-L1499","name":"Lean.Parser.nonReservedSymbol","line":1498,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbol","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbol\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nonReservedSymbol</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeIdent : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1495-L1496","name":"Lean.Parser.instCoeStringParser","line":1495,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instCoeStringParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.instCoeStringParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instCoeStringParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1492-L1493","name":"Lean.Parser.symbol","line":1492,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbol","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.symbol\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">symbol</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1484-L1490","name":"Lean.Parser.tokenWithAntiquot","line":1484,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenWithAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.tokenWithAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">tokenWithAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1474-L1482","name":"Lean.Parser.tokenAntiquotFn","line":1474,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenAntiquotFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.tokenAntiquotFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">tokenAntiquotFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1472-L1472","name":"Lean.Parser.antiquotExpr","line":1472,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.antiquotExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">antiquotExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1471-L1471","name":"Lean.Parser.antiquotNestedExpr","line":1471,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.antiquotNestedExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.antiquotNestedExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">antiquotNestedExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1466-L1468","name":"Lean.Parser.pushNone","line":1466,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.pushNone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.pushNone\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">pushNone</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1464-L1464","name":"Lean.Parser.setExpected","line":1464,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.setExpected\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">setExpected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1459-L1462","name":"Lean.Parser.setExpectedFn","line":1459,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setExpectedFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.setExpectedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">setExpectedFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1444-L1457","name":"Lean.Parser.checkNoImmediateColon","line":1444,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoImmediateColon","doc":"Fail if previous token is immediately followed by ':'. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkNoImmediateColon\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkNoImmediateColon</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1436-L1437","name":"Lean.Parser.termParser","line":1436,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.termParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.termParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">termParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1432-L1433","name":"Lean.Parser.categoryParser","line":1432,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.categoryParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">categoryParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1429-L1430","name":"Lean.Parser.categoryParserFn","line":1429,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">categoryParserFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(catName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1427-L1427","name":"Lean.Parser.categoryParserFnExtension","line":1427,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">categoryParserFnExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.CategoryParserFn\">Lean.Parser.CategoryParserFn</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1425-L1425","name":"Lean.Parser.categoryParserFnRef","line":1425,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.categoryParserFnRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">categoryParserFnRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.CategoryParserFn\">Lean.Parser.CategoryParserFn</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1423-L1423","name":"Lean.Parser.CategoryParserFn","line":1423,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.CategoryParserFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.CategoryParserFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CategoryParserFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1394-L1421","name":"Lean.Parser.indexed","line":1394,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.indexed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.indexed\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">indexed</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1392-L1392","name":"Lean.Parser.ParserCategories","line":1392,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategories\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCategories</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1390-L1390","name":"Lean.Parser.instInhabitedParserCategory","line":1390,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParserCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">Lean.Parser.ParserCategory</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1389-L1389","name":"Lean.Parser.ParserCategory.behavior","line":1389,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.behavior","doc":"The `LeadingIdentBehavior`, which specifies how the parsing table\nlookup function behaves for the first identifier to be parsed.\nThis is used by the `tactic` parser to avoid creating a reserved\nsymbol for each builtin tactic (e.g., `apply`, `assumption`, etc.). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.behavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCategory</span>.<span class=\"name\">behavior</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">Lean.Parser.ParserCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1384-L1384","name":"Lean.Parser.ParserCategory.tables","line":1384,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.tables","doc":"The parsing tables, which consist of a dynamic set of parser\nfunctions based on the syntaxes that have been declared so far. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.tables\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCategory</span>.<span class=\"name\">tables</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">Lean.Parser.ParserCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1381-L1381","name":"Lean.Parser.ParserCategory.kinds","line":1381,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.kinds","doc":"The list of syntax nodes that can parse into this category.\nThis can be used to list all syntaxes in the category. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.kinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCategory</span>.<span class=\"name\">kinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">Lean.Parser.ParserCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1378-L1378","name":"Lean.Parser.ParserCategory.declName","line":1378,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.declName","doc":"The name of a declaration which will be used as the target of\ngo-to-definition queries and from which doc strings will be extracted.\nThis is a dummy declaration of type `Lean.Parser.Category`\ncreated by `declare_syntax_cat`, but for builtin categories the declaration\nis made manually and passed to `registerBuiltinParserAttribute`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.declName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCategory</span>.<span class=\"name\">declName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">Lean.Parser.ParserCategory</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1372-L1390","name":"Lean.Parser.ParserCategory","line":1372,"kind":"structure","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory","doc":"Each parser category is implemented using a Pratt's parser.\nThe system comes equipped with the following categories: `level`, `term`, `tactic`, and `command`.\nUsers and plugins may define extra categories.\n\nThe method\n```\ncategoryParser `term prec\n```\nexecutes the Pratt's parser for category `term` with precedence `prec`.\nThat is, only parsers with precedence at least `prec` are considered.\nThe method `termParser prec` is equivalent to the method above.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCategory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1357-L1357","name":"Lean.Parser.instReprLeadingIdentBehavior","line":1357,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instReprLeadingIdentBehavior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.instReprLeadingIdentBehavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instReprLeadingIdentBehavior</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1357-L1357","name":"Lean.Parser.instBEqLeadingIdentBehavior","line":1357,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqLeadingIdentBehavior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.instBEqLeadingIdentBehavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqLeadingIdentBehavior</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1357-L1357","name":"Lean.Parser.instInhabitedLeadingIdentBehavior","line":1357,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedLeadingIdentBehavior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedLeadingIdentBehavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedLeadingIdentBehavior</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1352-L1356","name":"Lean.Parser.LeadingIdentBehavior.both","line":1352,"kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.both","doc":"`LeadingIdentBehavior.both`: if the leading token\nan identifier `<foo>`, the it executes the parsers associated\nwith token `<foo>` and parsers associated with the auxiliary\ntoken \"ident\". "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.both\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">LeadingIdentBehavior</span>.<span class=\"name\">both</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1347-L1351","name":"Lean.Parser.LeadingIdentBehavior.symbol","line":1347,"kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.symbol","doc":"`LeadingIdentBehavior.symbol`: if the leading token is\nan identifier `<foo>`, and there are parsers `P` associated with\nthe toek `<foo>`, then it executes `P`. Otherwise, it executes\nonly the parsers associated with the auxiliary token \"ident\". "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.symbol\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">LeadingIdentBehavior</span>.<span class=\"name\">symbol</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1343-L1346","name":"Lean.Parser.LeadingIdentBehavior.default","line":1343,"kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.default","doc":"`LeadingIdentBehavior.default`: if the leading token\nis an identifier, then `prattParser` just executes the parsers\nassociated with the auxiliary token \"ident\". "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">LeadingIdentBehavior</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1342-L1357","name":"Lean.Parser.LeadingIdentBehavior","line":1342,"kind":"inductive","docLink":"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior","doc":"The type `LeadingIdentBehavior` specifies how the parsing table\nlookup function behaves for identifiers.  The function `prattParser`\nuses two tables `leadingTable` and `trailingTable`. They map tokens\nto parsers.\n\nWe use `LeadingIdentBehavior.symbol` and `LeadingIdentBehavior.both`\nand `nonReservedSymbol` parser to implement the `tactic` parsers.\nThe idea is to avoid creating a reserved symbol for each\nbuiltin tactic (e.g., `apply`, `assumption`, etc.).  That is, users\nmay still use these symbols as identifiers (e.g., naming a\nfunction).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">LeadingIdentBehavior</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1326-L1327","name":"Lean.Parser.instInhabitedPrattParsingTables","line":1326,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedPrattParsingTables","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.instInhabitedPrattParsingTables\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedPrattParsingTables</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1324-L1324","name":"Lean.Parser.PrattParsingTables.trailingParsers","line":1324,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.trailingParsers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.trailingParsers\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">PrattParsingTables</span>.<span class=\"name\">trailingParsers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1323-L1323","name":"Lean.Parser.PrattParsingTables.trailingTable","line":1323,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.trailingTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.trailingTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">PrattParsingTables</span>.<span class=\"name\">trailingTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1322-L1322","name":"Lean.Parser.PrattParsingTables.leadingParsers","line":1322,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.leadingParsers","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.leadingParsers\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">PrattParsingTables</span>.<span class=\"name\">leadingParsers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1321-L1321","name":"Lean.Parser.PrattParsingTables.leadingTable","line":1321,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.leadingTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.leadingTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">PrattParsingTables</span>.<span class=\"name\">leadingTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1320-L1324","name":"Lean.Parser.PrattParsingTables","line":1320,"kind":"structure","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">PrattParsingTables</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1316-L1316","name":"Lean.Parser.TokenMap.instForInTokenMapProdNameList","line":1316,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instForInTokenMapProdNameList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instForInTokenMapProdNameList\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenMap</span>.<span class=\"name\">instForInTokenMapProdNameList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <span class=\"fn\">m</span> (<span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1314-L1314","name":"Lean.Parser.TokenMap.instEmptyCollectionTokenMap","line":1314,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instEmptyCollectionTokenMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instEmptyCollectionTokenMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenMap</span>.<span class=\"name\">instEmptyCollectionTokenMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1311-L1312","name":"Lean.Parser.TokenMap.instInhabitedTokenMap","line":1311,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instInhabitedTokenMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.instInhabitedTokenMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenMap</span>.<span class=\"name\">instInhabitedTokenMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1306-L1309","name":"Lean.Parser.TokenMap.insert","line":1306,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenMap</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1302-L1302","name":"Lean.Parser.TokenMap","line":1302,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.TokenMap","doc":"A multimap indexed by tokens. Used for indexing parsers by their leading token. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1297-L1299","name":"Lean.Parser.eoi","line":1297,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.eoi\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">eoi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1292-L1295","name":"Lean.Parser.eoiFn","line":1292,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.eoiFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.eoiFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">eoiFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1289-L1290","name":"Lean.Parser.withoutForbidden","line":1289,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutForbidden","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withoutForbidden\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withoutForbidden</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1286-L1287","name":"Lean.Parser.withForbidden","line":1286,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withForbidden","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withForbidden\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withForbidden</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tk : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1283-L1284","name":"Lean.Parser.withoutPosition","line":1283,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withoutPosition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withoutPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withoutPosition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1279-L1281","name":"Lean.Parser.withPositionAfterLinebreak","line":1279,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPositionAfterLinebreak","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withPositionAfterLinebreak\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withPositionAfterLinebreak</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1276-L1277","name":"Lean.Parser.withPosition","line":1276,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withPosition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withPosition\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withPosition</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1273-L1274","name":"Lean.Parser.checkLineEq","line":1273,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkLineEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkLineEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quotcheckLineEq&quot</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1264-L1271","name":"Lean.Parser.checkLineEqFn","line":1264,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLineEqFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkLineEqFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkLineEqFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1261-L1262","name":"Lean.Parser.checkColGt","line":1261,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkColGt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkColGt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quotcheckColGt&quot</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1252-L1259","name":"Lean.Parser.checkColGtFn","line":1252,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGtFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkColGtFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkColGtFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1249-L1250","name":"Lean.Parser.checkColGe","line":1249,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkColGe\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkColGe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quotcheckColGe&quot</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1240-L1247","name":"Lean.Parser.checkColGeFn","line":1240,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColGeFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkColGeFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkColGeFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1237-L1238","name":"Lean.Parser.checkColEq","line":1237,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkColEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkColEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quotcheckColEq&quot</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1228-L1235","name":"Lean.Parser.checkColEqFn","line":1228,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkColEqFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkColEqFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkColEqFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1223-L1226","name":"Lean.Parser.anyOfFn","line":1223,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.anyOfFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.anyOfFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">anyOfFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1213-L1221","name":"Lean.Parser.longestMatchFn","line":1213,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">longestMatchFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(left? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1205-L1210","name":"Lean.Parser.longestMatchFnAux.parse","line":1205,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux.parse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux.parse\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">longestMatchFnAux</span>.<span class=\"name\">parse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(left? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startLhsPrec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prevPrio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1204-L1211","name":"Lean.Parser.longestMatchFnAux","line":1204,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.longestMatchFnAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">longestMatchFnAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(left? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startLhsPrec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prevPrio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1201-L1202","name":"Lean.Parser.longestMatchMkResult","line":1201,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchMkResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.longestMatchMkResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">longestMatchMkResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1180-L1199","name":"Lean.Parser.longestMatchStep","line":1180,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.longestMatchStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.longestMatchStep\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">longestMatchStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(left? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startLhsPrec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prevPrio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1154-L1178","name":"Lean.Parser.runLongestMatchParser","line":1154,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.runLongestMatchParser","doc":"Auxiliary function used to execute parsers provided to `longestMatchFn`.\nPush `left?` into the stack if it is not `none`, and execute `p`.\n\nRemark: `p` must produce exactly one syntax node.\nRemark: the `left?` is not none when we are processing trailing parsers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.runLongestMatchParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">runLongestMatchParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(left? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startLhsPrec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1145-L1146","name":"Lean.Parser.invalidLongestMatchParser","line":1145,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.invalidLongestMatchParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.invalidLongestMatchParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">invalidLongestMatchParser</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1140-L1141","name":"Lean.Parser.ParserState.replaceLongest","line":1140,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.replaceLongest","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserState.replaceLongest\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">replaceLongest</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startStackSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1136-L1138","name":"Lean.Parser.ParserState.keepLatest","line":1136,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepLatest","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepLatest\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">keepLatest</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startStackSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1130-L1134","name":"Lean.Parser.ParserState.mergeErrors","line":1130,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mergeErrors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserState.mergeErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mergeErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldStackSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldError : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1126-L1128","name":"Lean.Parser.ParserState.keepPrevError","line":1126,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepPrevError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepPrevError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">keepPrevError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldStackSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldStopPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldError : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldLhsPrec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1122-L1124","name":"Lean.Parser.ParserState.keepNewError","line":1122,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepNewError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepNewError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">keepNewError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(oldStackSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1118-L1120","name":"Lean.Parser.ParserState.keepTop","line":1118,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserState.keepTop\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">keepTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startStackSize : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1111-L1114","name":"Lean.Parser.hygieneInfoNoAntiquot","line":1111,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hygieneInfoNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.hygieneInfoNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">hygieneInfoNoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1086-L1109","name":"Lean.Parser.hygieneInfoFn","line":1086,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hygieneInfoFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.hygieneInfoFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">hygieneInfoFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1081-L1084","name":"Lean.Parser.identEq","line":1081,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.identEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">identEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1071-L1079","name":"Lean.Parser.identEqFn","line":1071,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identEqFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.identEqFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">identEqFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1067-L1069","name":"Lean.Parser.rawIdentNoAntiquot","line":1067,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.rawIdentNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">rawIdentNoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1062-L1065","name":"Lean.Parser.identNoAntiquot","line":1062,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.identNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">identNoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1056-L1060","name":"Lean.Parser.identFn","line":1056,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.identFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">identFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1051-L1054","name":"Lean.Parser.nameLitNoAntiquot","line":1051,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nameLitNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nameLitNoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1045-L1049","name":"Lean.Parser.nameLitFn","line":1045,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nameLitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nameLitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nameLitFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1040-L1043","name":"Lean.Parser.charLitNoAntiquot","line":1040,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.charLitNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">charLitNoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1034-L1038","name":"Lean.Parser.charLitFn","line":1034,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.charLitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">charLitFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1029-L1032","name":"Lean.Parser.strLitNoAntiquot","line":1029,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.strLitNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">strLitNoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1023-L1027","name":"Lean.Parser.strLitFn","line":1023,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.strLitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">strLitFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1018-L1021","name":"Lean.Parser.scientificLitNoAntiquot","line":1018,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.scientificLitNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">scientificLitNoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1012-L1016","name":"Lean.Parser.scientificLitFn","line":1012,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.scientificLitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.scientificLitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">scientificLitFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1007-L1010","name":"Lean.Parser.numLitNoAntiquot","line":1007,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.numLitNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">numLitNoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1001-L1005","name":"Lean.Parser.numLitFn","line":1001,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numLitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.numLitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">numLitFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L998-L999","name":"Lean.Parser.mkAtomicInfo","line":998,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkAtomicInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.mkAtomicInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkAtomicInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L992-L996","name":"Lean.Parser.unicodeSymbolNoAntiquot","line":992,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">unicodeSymbolNoAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(asciiSym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L989-L990","name":"Lean.Parser.unicodeSymbolFn","line":989,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">unicodeSymbolFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(asciiSym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L984-L987","name":"Lean.Parser.unicodeSymbolInfo","line":984,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">unicodeSymbolInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(asciiSym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L981-L982","name":"Lean.Parser.unicodeSymbolFnAux","line":981,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFnAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.unicodeSymbolFnAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">unicodeSymbolFnAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(asciiSym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L976-L979","name":"Lean.Parser.checkNoWsBefore","line":976,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBefore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBefore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkNoWsBefore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quotno space before&quot</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L972-L974","name":"Lean.Parser.checkNoWsBeforeFn","line":972,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBeforeFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkNoWsBeforeFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkNoWsBeforeFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L962-L965","name":"Lean.Parser.checkLinebreakBefore","line":962,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBefore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBefore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkLinebreakBefore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quotline break&quot</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L958-L960","name":"Lean.Parser.checkLinebreakBeforeFn","line":958,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBeforeFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkLinebreakBeforeFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkLinebreakBeforeFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L953-L956","name":"Lean.Parser.checkTailLinebreak","line":953,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailLinebreak","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkTailLinebreak\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkTailLinebreak</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prev : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L948-L951","name":"Lean.Parser.checkWsBefore","line":948,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBefore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkWsBefore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkWsBefore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quotspace before&quot</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L944-L946","name":"Lean.Parser.checkWsBeforeFn","line":944,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkWsBeforeFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkWsBeforeFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkWsBeforeFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L939-L942","name":"Lean.Parser.checkTailWs","line":939,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailWs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkTailWs\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkTailWs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prev : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L929-L936","name":"Lean.Parser.strAux.parse","line":929,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux.parse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.strAux.parse\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">strAux</span>.<span class=\"name\">parse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L928-L937","name":"Lean.Parser.strAux","line":928,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.strAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">strAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L923-L926","name":"Lean.Parser.nonReservedSymbolNoAntiquot","line":923,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nonReservedSymbolNoAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeIdent : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L915-L921","name":"Lean.Parser.nonReservedSymbolInfo","line":915,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nonReservedSymbolInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeIdent : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L912-L913","name":"Lean.Parser.nonReservedSymbolFn","line":912,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nonReservedSymbolFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L895-L910","name":"Lean.Parser.nonReservedSymbolFnAux","line":895,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFnAux","doc":"Check if the following token is the symbol _or_ identifier `sym`. Useful for\nparsing local tokens that have not been added to the token table (but may have\nbeen so by some unrelated code).\n\nFor example, the universe `max` Function is parsed using this combinator so that\nit can still be used as an identifier outside of universe (but registering it\nas a token in a Term Syntax would not break the universe Parser). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nonReservedSymbolFnAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nonReservedSymbolFnAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L883-L886","name":"Lean.Parser.checkTailNoWs","line":883,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkTailNoWs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkTailNoWs\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkTailNoWs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prev : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L878-L881","name":"Lean.Parser.symbolNoAntiquot","line":878,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.symbolNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">symbolNoAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L875-L876","name":"Lean.Parser.symbolFn","line":875,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.symbolFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">symbolFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L870-L873","name":"Lean.Parser.symbolInfo","line":870,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.symbolInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">symbolInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L867-L868","name":"Lean.Parser.symbolFnAux","line":867,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.symbolFnAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.symbolFnAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">symbolFnAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sym : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L856-L865","name":"Lean.Parser.satisfySymbolFn","line":856,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfySymbolFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.satisfySymbolFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">satisfySymbolFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L850-L854","name":"Lean.Parser.rawIdentFn","line":850,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawIdentFn","doc":"Treat keywords as identifiers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.rawIdentFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">rawIdentFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L842-L847","name":"Lean.Parser.peekToken","line":842,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekToken","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.peekToken\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">peekToken</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L833-L840","name":"Lean.Parser.peekTokenAux","line":833,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.peekTokenAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.peekTokenAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">peekTokenAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L820-L831","name":"Lean.Parser.tokenFn","line":820,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.tokenFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.tokenFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">tokenFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">[]</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L743-L775","name":"Lean.Parser.identFnAux.parse","line":743,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux.parse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.identFnAux.parse\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">identFnAux</span>.<span class=\"name\">parse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tk : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L742-L776","name":"Lean.Parser.identFnAux","line":742,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.identFnAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.identFnAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">identFnAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tk : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L727-L740","name":"Lean.Parser.mkIdResult","line":727,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkIdResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.mkIdResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkIdResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tk : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L710-L725","name":"Lean.Parser.mkTokenAndFixPos","line":710,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkTokenAndFixPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.mkTokenAndFixPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkTokenAndFixPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tk : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L688-L699","name":"Lean.Parser.isIdCont","line":688,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isIdCont","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.isIdCont\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isIdCont</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L666-L686","name":"Lean.Parser.numberFnAux","line":666,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.numberFnAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.numberFnAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">numberFnAux</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L662-L664","name":"Lean.Parser.hexNumberFn","line":662,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexNumberFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.hexNumberFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">hexNumberFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L658-L660","name":"Lean.Parser.octalNumberFn","line":658,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.octalNumberFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.octalNumberFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">octalNumberFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L654-L656","name":"Lean.Parser.binNumberFn","line":654,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.binNumberFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.binNumberFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">binNumberFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L639-L652","name":"Lean.Parser.decimalNumberFn.parseOptExp","line":639,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptExp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptExp\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">decimalNumberFn</span>.<span class=\"name\">parseOptExp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L625-L637","name":"Lean.Parser.decimalNumberFn.parseOptDot","line":625,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptDot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn.parseOptDot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">decimalNumberFn</span>.<span class=\"name\">parseOptDot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L613-L652","name":"Lean.Parser.decimalNumberFn","line":613,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.decimalNumberFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">decimalNumberFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L601-L611","name":"Lean.Parser.strLitFnAux","line":601,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.strLitFnAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.strLitFnAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">strLitFnAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L585-L599","name":"Lean.Parser.charLitFnAux","line":585,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.charLitFnAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.charLitFnAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">charLitFnAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L572-L583","name":"Lean.Parser.mkNodeToken","line":572,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkNodeToken","doc":"Push `(Syntax.node tk <new-atom>)` onto syntax stack if parse was successful. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.mkNodeToken\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkNodeToken</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L568-L569","name":"Lean.Parser.quotedCharFn","line":568,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.quotedCharFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">quotedCharFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L565-L566","name":"Lean.Parser.isQuotableCharDefault","line":565,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.isQuotableCharDefault","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.isQuotableCharDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">isQuotableCharDefault</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L550-L563","name":"Lean.Parser.quotedCharCoreFn","line":550,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.quotedCharCoreFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.quotedCharCoreFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">quotedCharCoreFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(isQuotable : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L540-L548","name":"Lean.Parser.hexDigitFn","line":540,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.hexDigitFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.hexDigitFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">hexDigitFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L536-L538","name":"Lean.Parser.rawCh","line":536,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawCh","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.rawCh\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">rawCh</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingWs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L533-L534","name":"Lean.Parser.chFn","line":533,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.chFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.chFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">chFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingWs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L528-L531","name":"Lean.Parser.rawFn","line":528,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.rawFn","doc":"Match an arbitrary Parser and return the consumed String in a `Syntax.atom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.rawFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">rawFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingWs : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L507-L509","name":"Lean.Parser.mkEmptySubstringAt","line":507,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mkEmptySubstringAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.mkEmptySubstringAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkEmptySubstringAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Substring\">Substring</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L482-L505","name":"Lean.Parser.whitespace","line":482,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.whitespace","doc":"Consume whitespace and comments "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.whitespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">whitespace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L479-L479","name":"Lean.Parser.finishCommentBlock.eoi","line":479,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock.eoi","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock.eoi\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">finishCommentBlock</span>.<span class=\"name\">eoi</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pushMissingOnError : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L455-L479","name":"Lean.Parser.finishCommentBlock","line":455,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.finishCommentBlock\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">finishCommentBlock</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(pushMissingOnError : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nesting : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L451-L452","name":"Lean.Parser.takeWhile1Fn","line":451,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhile1Fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.takeWhile1Fn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">takeWhile1Fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L448-L449","name":"Lean.Parser.takeWhileFn","line":448,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeWhileFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.takeWhileFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">takeWhileFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L442-L446","name":"Lean.Parser.takeUntilFn","line":442,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.takeUntilFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.takeUntilFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">takeUntilFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L436-L440","name":"Lean.Parser.satisfyFn","line":436,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.satisfyFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.satisfyFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">satisfyFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">&quotunexpected character&quot</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L433-L434","name":"Lean.Parser.many1Unbox","line":433,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Unbox","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.many1Unbox\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">many1Unbox</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L428-L431","name":"Lean.Parser.withResultOf","line":428,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withResultOf\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withResultOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L423-L426","name":"Lean.Parser.withResultOfInfo","line":423,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withResultOfInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withResultOfInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L416-L421","name":"Lean.Parser.withResultOfFn","line":416,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.withResultOfFn","doc":"Apply `f` to the syntax object produced by `p` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.withResultOfFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withResultOfFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L410-L413","name":"Lean.Parser.sepBy1NoAntiquot","line":410,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1NoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.sepBy1NoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepBy1NoAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingSep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L405-L408","name":"Lean.Parser.sepByNoAntiquot","line":405,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.sepByNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepByNoAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingSep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L399-L403","name":"Lean.Parser.sepBy1Info","line":399,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Info","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Info\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepBy1Info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L394-L397","name":"Lean.Parser.sepByInfo","line":394,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.sepByInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepByInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L390-L392","name":"Lean.Parser.sepBy1Fn","line":390,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.sepBy1Fn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepBy1Fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingSep : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L386-L388","name":"Lean.Parser.sepByFn","line":386,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.sepByFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.sepByFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepByFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingSep : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L356-L356","name":"Lean.Parser.many1NoAntiquot","line":356,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1NoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.many1NoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">many1NoAntiquot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L351-L354","name":"Lean.Parser.many1Fn","line":351,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.many1Fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.many1Fn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">many1Fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L346-L349","name":"Lean.Parser.manyNoAntiquot","line":346,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.manyNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">manyNoAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L341-L344","name":"Lean.Parser.manyFn","line":341,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.manyFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">manyFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L329-L339","name":"Lean.Parser.manyAux","line":329,"kind":"opaque","docLink":"./Lean/Parser/Basic.html#Lean.Parser.manyAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.manyAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">manyAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L325-L327","name":"Lean.Parser.notFollowedBy","line":325,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.notFollowedBy\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">notFollowedBy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L315-L323","name":"Lean.Parser.notFollowedByFn","line":315,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.notFollowedByFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.notFollowedByFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">notFollowedByFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L313-L313","name":"Lean.Parser.lookahead","line":313,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookahead","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.lookahead\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">lookahead</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L307-L311","name":"Lean.Parser.lookaheadFn","line":307,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.lookaheadFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.lookaheadFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">lookaheadFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L302-L305","name":"Lean.Parser.optionalNoAntiquot","line":302,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalNoAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.optionalNoAntiquot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">optionalNoAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L296-L300","name":"Lean.Parser.optionaInfo","line":296,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionaInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.optionaInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">optionaInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L289-L294","name":"Lean.Parser.optionalFn","line":289,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.optionalFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.optionalFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">optionalFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L287-L287","name":"Lean.Parser.atomic","line":287,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.atomic\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">atomic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L281-L285","name":"Lean.Parser.atomicFn","line":281,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.atomicFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.atomicFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">atomicFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L276-L279","name":"Lean.Parser.noFirstTokenInfo","line":276,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.noFirstTokenInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.noFirstTokenInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">noFirstTokenInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(info : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L273-L274","name":"Lean.Parser.instOrElseParser","line":273,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instOrElseParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.instOrElseParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instOrElseParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrElse\">OrElse</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L268-L271","name":"Lean.Parser.orelse","line":268,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelse","doc":"Run `p`, falling back to `q` if `p` failed without consuming any input.\n\nNOTE: In order for the pretty printer to retrace an `orelse`, `p` must be a call to `node` or some other parser\nproducing a single node kind. Nested `orelse` calls are flattened for this, i.e. `(node k1 p1 <|> node k2 p2) <|> ...`\nis fine as well. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.orelse\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">orelse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L256-L260","name":"Lean.Parser.orelseInfo","line":256,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.orelseInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">orelseInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L253-L254","name":"Lean.Parser.orelseFn","line":253,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.orelseFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">orelseFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L213-L251","name":"Lean.Parser.orelseFnCore","line":213,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.orelseFnCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.orelseFnCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">orelseFnCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(antiquotBehavior : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior\">Lean.Parser.OrElseOnAntiquotBehavior</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.merge\">Lean.Parser.OrElseOnAntiquotBehavior.merge</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L211-L211","name":"Lean.Parser.instBEqOrElseOnAntiquotBehavior","line":211,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instBEqOrElseOnAntiquotBehavior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.instBEqOrElseOnAntiquotBehavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqOrElseOnAntiquotBehavior</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior\">Lean.Parser.OrElseOnAntiquotBehavior</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L210-L210","name":"Lean.Parser.OrElseOnAntiquotBehavior.merge","line":210,"kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.merge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">OrElseOnAntiquotBehavior</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior\">Lean.Parser.OrElseOnAntiquotBehavior</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L209-L209","name":"Lean.Parser.OrElseOnAntiquotBehavior.takeLongest","line":209,"kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.takeLongest","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.takeLongest\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">OrElseOnAntiquotBehavior</span>.<span class=\"name\">takeLongest</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior\">Lean.Parser.OrElseOnAntiquotBehavior</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L208-L208","name":"Lean.Parser.OrElseOnAntiquotBehavior.acceptLhs","line":208,"kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.acceptLhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior.acceptLhs\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">OrElseOnAntiquotBehavior</span>.<span class=\"name\">acceptLhs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior\">Lean.Parser.OrElseOnAntiquotBehavior</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L207-L211","name":"Lean.Parser.OrElseOnAntiquotBehavior","line":207,"kind":"inductive","docLink":"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.OrElseOnAntiquotBehavior\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">OrElseOnAntiquotBehavior</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L199-L204","name":"Lean.Parser.mergeOrElseErrors","line":199,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.mergeOrElseErrors","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.mergeOrElseErrors\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mergeOrElseErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(error1 : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iniPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mergeErrors : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L196-L197","name":"Lean.Parser.trailingNode","line":196,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.trailingNode\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">trailingNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhsPrec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\">Lean.Parser.TrailingParser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L191-L194","name":"Lean.Parser.trailingNodeAux","line":191,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">trailingNodeAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\">Lean.Parser.TrailingParser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L188-L189","name":"Lean.Parser.leadingNode","line":188,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.leadingNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.leadingNode\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">leadingNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L183-L186","name":"Lean.Parser.suppressInsideQuot","line":183,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.suppressInsideQuot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.suppressInsideQuot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">suppressInsideQuot</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L181-L181","name":"Lean.Parser.decQuotDepth","line":181,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.decQuotDepth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.decQuotDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">decQuotDepth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L179-L179","name":"Lean.Parser.incQuotDepth","line":179,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.incQuotDepth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.incQuotDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">incQuotDepth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L171-L174","name":"Lean.Parser.setLhsPrec","line":171,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">setLhsPrec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L167-L169","name":"Lean.Parser.setLhsPrecFn","line":167,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrecFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.setLhsPrecFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">setLhsPrecFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L162-L165","name":"Lean.Parser.checkLhsPrec","line":162,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkLhsPrec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L158-L160","name":"Lean.Parser.checkLhsPrecFn","line":158,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrecFn","doc":"Succeeds if `c.lhsPrec >= prec` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkLhsPrecFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkLhsPrecFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L152-L155","name":"Lean.Parser.checkPrec","line":152,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkPrec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L148-L150","name":"Lean.Parser.checkPrecFn","line":148,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkPrecFn","doc":"Succeeds if `c.prec <= prec` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkPrecFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkPrecFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L143-L145","name":"Lean.Parser.errorAtSavedPos","line":143,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPos","doc":"Generate an error at the position saved with the `withPosition` combinator.\nIf `delta == true`, then it reports at saved position+1.\nThis useful to make sure a parser consumed at least one character.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">errorAtSavedPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(delta : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L132-L138","name":"Lean.Parser.errorAtSavedPosFn","line":132,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPosFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.errorAtSavedPosFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">errorAtSavedPosFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(delta : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L127-L130","name":"Lean.Parser.error","line":127,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.error","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.error\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">error</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L124-L125","name":"Lean.Parser.errorFn","line":124,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.errorFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.errorFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">errorFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L119-L122","name":"Lean.Parser.node","line":119,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.node","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.node\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">node</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L113-L117","name":"Lean.Parser.nodeInfo","line":113,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nodeInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nodeInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L108-L111","name":"Lean.Parser.trailingNodeFn","line":108,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.trailingNodeFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">trailingNodeFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L103-L106","name":"Lean.Parser.nodeFn","line":103,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.nodeFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.nodeFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nodeFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L100-L101","name":"Lean.Parser.instAndThenParser","line":100,"kind":"instance","docLink":"./Lean/Parser/Basic.html#Lean.Parser.instAndThenParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.instAndThenParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instAndThenParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndThen\">AndThen</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L95-L98","name":"Lean.Parser.andthen","line":95,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.andthen\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">andthen</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L89-L93","name":"Lean.Parser.andthenInfo","line":89,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.andthenInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">andthenInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L85-L87","name":"Lean.Parser.andthenFn","line":85,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.andthenFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.andthenFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">andthenFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L80-L83","name":"Lean.Parser.checkStackTop","line":80,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkStackTop\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkStackTop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L76-L78","name":"Lean.Parser.checkStackTopFn","line":76,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.checkStackTopFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.checkStackTopFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">checkStackTopFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L73-L74","name":"Lean.Parser.epsilonInfo","line":73,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.epsilonInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.epsilonInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">epsilonInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L71-L71","name":"Lean.Parser.dbgTraceState","line":71,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">dbgTraceState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(label : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L61-L69","name":"Lean.Parser.dbgTraceStateFn","line":61,"kind":"def","docLink":"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceStateFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.dbgTraceStateFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">dbgTraceStateFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(label : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1-L1","name":"Lean.Parser.PrattParsingTables.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">PrattParsingTables</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(leadingTable : <span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(leadingParsers : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingTable : <span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.TokenMap\">Lean.Parser.TokenMap</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingParsers : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Basic.lean#L1-L1","name":"Lean.Parser.ParserCategory.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCategory</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kinds : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tables : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.PrattParsingTables\">Lean.Parser.PrattParsingTables</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(behavior : <a href=\"./Lean/Parser/Basic.html#Lean.Parser.LeadingIdentBehavior\">Lean.Parser.LeadingIdentBehavior</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.ParserCategory\">Lean.Parser.ParserCategory</a></div></div>"}]}
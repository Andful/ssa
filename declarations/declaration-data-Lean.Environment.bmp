{"name":"Lean.Environment","instances":[{"typeNames":["Lean.EnvExtensionState"],"name":"Lean.instInhabitedEnvExtensionState","className":"Inhabited"},{"typeNames":["Lean.ModuleIdx"],"name":"Lean.instInhabitedModuleIdx","className":"Inhabited"},{"typeNames":["Lean.Import"],"name":"Lean.instReprImport","className":"Repr"},{"typeNames":["Lean.Import"],"name":"Lean.instInhabitedImport","className":"Inhabited"},{"typeNames":["Lean.Import"],"name":"Lean.instToStringImport","className":"ToString"},{"typeNames":["Lean.EnvExtensionEntry"],"name":"Lean.instNonemptyEnvExtensionEntry","className":"Nonempty"},{"typeNames":["Lean.ModuleData"],"name":"Lean.instInhabitedModuleData","className":"Inhabited"},{"typeNames":["Lean.EnvironmentHeader"],"name":"Lean.instNonemptyEnvironmentHeader","className":"Nonempty"},{"typeNames":["Lean.Environment"],"name":"Lean.instNonemptyEnvironment","className":"Nonempty"},{"typeNames":["Lean.EnvExtensionInterface"],"name":"Lean.instInhabitedEnvExtensionInterface","className":"Inhabited"},{"typeNames":["Lean.EnvExtensionInterfaceUnsafe.Ext"],"name":"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","className":"Inhabited"},{"typeNames":["Lean.EnvExtension"],"name":"Lean.EnvExtension.instInhabitedEnvExtension","className":"Inhabited"},{"typeNames":["Lean.PersistentEnvExtensionState"],"name":"Lean.instInhabitedPersistentEnvExtensionState","className":"Inhabited"},{"typeNames":["Lean.PersistentEnvExtension"],"name":"Lean.instInhabitedPersistentEnvExtension","className":"Inhabited"},{"typeNames":["Lean.SimplePersistentEnvExtension"],"name":"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","className":"Inhabited"},{"typeNames":["Lean.TagDeclarationExtension"],"name":"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","className":"Inhabited"},{"typeNames":["Lean.MapDeclarationExtension"],"name":"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","className":"Inhabited"},{"typeNames":[],"name":"Lean.instMonadEnv","className":"Lean.MonadEnv"}],"imports":["Init","Lean.Data.HashMap","Lean.ImportingFlag","Lean.Data.SMap","Lean.Declaration","Lean.LocalContext","Lean.Util.Path","Lean.Util.FindExpr","Lean.Util.Profile","Lean.Util.InstantiateLevelParams"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L931-L933","name":"Lean.instMonadEnv","line":931,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instMonadEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instMonadEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">instMonadEnv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L926-L926","name":"Lean.MonadEnv.modifyEnv","line":926,"kind":"def","docLink":"./Lean/Environment.html#Lean.MonadEnv.modifyEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MonadEnv.modifyEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadEnv</span>.<span class=\"name\">modifyEnv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span>) → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L925-L925","name":"Lean.MonadEnv.getEnv","line":925,"kind":"def","docLink":"./Lean/Environment.html#Lean.MonadEnv.getEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MonadEnv.getEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadEnv</span>.<span class=\"name\">getEnv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L924-L924","name":"Lean.MonadEnv.mk","line":924,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.MonadEnv.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MonadEnv.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadEnv</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(getEnv : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modifyEnv : <span class=\"fn\">(<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span>) → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MonadEnv\">Lean.MonadEnv</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L924-L926","name":"Lean.MonadEnv","line":924,"kind":"class","docLink":"./Lean/Environment.html#Lean.MonadEnv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MonadEnv\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadEnv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L920-L920","name":"Lean.Kernel.whnf","line":920,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.Kernel.whnf","doc":"Kernel WHNF function. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Kernel.whnf\"><span class=\"name\">Lean</span>.<span class=\"name\">Kernel</span>.<span class=\"name\">whnf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L912-L913","name":"Lean.Kernel.isDefEqGuarded","line":912,"kind":"def","docLink":"./Lean/Environment.html#Lean.Kernel.isDefEqGuarded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Kernel.isDefEqGuarded\"><span class=\"name\">Lean</span>.<span class=\"name\">Kernel</span>.<span class=\"name\">isDefEqGuarded</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L910-L910","name":"Lean.Kernel.isDefEq","line":910,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.Kernel.isDefEq","doc":"Kernel isDefEq predicate. We use it mainly for debugging purposes.\nRecall that the Kernel type checker does not support metavariables.\nWhen implementing automation, consider using the `MetaM` methods. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Kernel.isDefEq\"><span class=\"name\">Lean</span>.<span class=\"name\">Kernel</span>.<span class=\"name\">isDefEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L891-L898","name":"Lean.Environment.hasUnsafe","line":891,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.hasUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.hasUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">hasUnsafe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L881-L889","name":"Lean.Environment.evalConstCheck","line":881,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.evalConstCheck","doc":"Like `evalConst`, but first check that `constName` indeed is a declaration of type `typeName`.\nNote that this function cannot guarantee that `typeName` is in fact the name of the type `α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.evalConstCheck\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">evalConstCheck</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(typeName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Except.html#ExceptT\">ExceptT</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L874-L874","name":"Lean.Environment.evalConst","line":874,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.Environment.evalConst","doc":"Evaluate the given declaration under the given environment to a value of the given type.\nThis function is only safe to use if the type matches the declaration's type in the environment\nand if `enableInitializersExecution` has been used before importing any modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.evalConst\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">evalConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L851-L867","name":"Lean.Environment.displayStats","line":851,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.displayStats","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.displayStats\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">displayStats</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L846-L848","name":"Lean.Environment.add","line":846,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.add\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cinfo : <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L833-L834","name":"Lean.Environment.getNamespaceSet","line":833,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.getNamespaceSet","doc":"Return a set containing all namespaces in `env`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.getNamespaceSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">getNamespaceSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">Lean.NameSSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L829-L830","name":"Lean.Environment.isNamespace","line":829,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.isNamespace","doc":"Return `true` if `n` is the name of a namespace in `env`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.isNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">isNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L825-L826","name":"Lean.Environment.registerNamespace","line":825,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.registerNamespace","doc":"Register a new namespace in the environment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.registerNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">registerNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L804-L820","name":"Lean.namespacesExt","line":804,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.namespacesExt","doc":"Environment extension for tracking all `namespace` declared by users.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.namespacesExt\"><span class=\"name\">Lean</span>.<span class=\"name\">namespacesExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Data/NameMap.html#Lean.NameSSet\">Lean.NameSSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L800-L802","name":"Lean.withImportModules","line":800,"kind":"def","docLink":"./Lean/Environment.html#Lean.withImportModules","doc":"Create environment object from imports and free compacted regions after calling `act`. No live references to the\nenvironment object or imported objects may exist after `act` finishes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.withImportModules\"><span class=\"name\">Lean</span>.<span class=\"name\">withImportModules</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L778-L795","name":"Lean.importModules.importMods","line":778,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.importModules.importMods","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.importModules.importMods\"><span class=\"name\">Lean</span>.<span class=\"name\">importModules</span>.<span class=\"name\">importMods</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span> → <span class=\"fn\"><a href=\"./Init/Control/StateRef.html#StateRefT'\">StateRefT'</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a> <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a> <a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L735-L795","name":"Lean.importModules","line":735,"kind":"def","docLink":"./Lean/Environment.html#Lean.importModules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.importModules\"><span class=\"name\">Lean</span>.<span class=\"name\">importModules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L729-L732","name":"Lean.throwAlreadyImported","line":729,"kind":"def","docLink":"./Lean/Environment.html#Lean.throwAlreadyImported","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.throwAlreadyImported\"><span class=\"name\">Lean</span>.<span class=\"name\">throwAlreadyImported</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(const2ModIdx : <span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cname : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L727-L727","name":"Lean.ImportState.regions","line":727,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.regions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.regions\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">regions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L726-L726","name":"Lean.ImportState.moduleData","line":726,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.moduleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.moduleData\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">moduleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L725-L725","name":"Lean.ImportState.moduleNames","line":725,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.moduleNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.moduleNames\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">moduleNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L724-L724","name":"Lean.ImportState.moduleNameSet","line":724,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportState.moduleNameSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.moduleNameSet\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">moduleNameSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">Lean.NameHashSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L723-L727","name":"Lean.ImportState","line":723,"kind":"structure","docLink":"./Lean/Environment.html#Lean.ImportState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L696-L696","name":"Lean.getNumBuiltinAttributes","line":696,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.getNumBuiltinAttributes","doc":"\"Forward declaration\" for retrieving the number of builtin attributes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.getNumBuiltinAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">getNumBuiltinAttributes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L694-L694","name":"Lean.updateEnvAttributes","line":694,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.updateEnvAttributes","doc":"\"Forward declaration\" needed for updating the attribute table with user-defined attributes.\nUser-defined attributes are declared using the `initialize` command. The `initialize` command is just syntax sugar for the `init` attribute.\nThe `init` attribute is initialized after the `attributeExtension` is initialized. We cannot change the order since the `init` attribute is an attribute,\nand requires this extension.\nThe `attributeExtension` initializer uses `attributeMapRef` to initialize the attribute mapping.\nWhen we a new user-defined attribute declaration is imported, `attributeMapRef` is updated.\nLater, we set this method with code that adds the user-defined attributes that were imported after we initialized `attributeExtension`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.updateEnvAttributes\"><span class=\"name\">Lean</span>.<span class=\"name\">updateEnvAttributes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L653-L654","name":"Lean.writeModule","line":653,"kind":"def","docLink":"./Lean/Environment.html#Lean.writeModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.writeModule\"><span class=\"name\">Lean</span>.<span class=\"name\">writeModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L639-L650","name":"Lean.mkModuleData","line":639,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkModuleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">mkModuleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L621-L637","name":"Lean.Environment.freeRegions","line":621,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.freeRegions","doc":"Free compacted regions of imports. No live references to imported objects may exist at the time of invocation; in\nparticular, `env` should be the last reference to any `Environment` derived from these imports. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.freeRegions\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">freeRegions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L615-L615","name":"Lean.readModuleData","line":615,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.readModuleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.readModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">readModuleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L613-L613","name":"Lean.saveModuleData","line":613,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.saveModuleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.saveModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">saveModuleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fname : <a href=\"./Init/System/FilePath.html#System.FilePath\">Lake.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mod : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(data : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L605-L608","name":"Lean.MapDeclarationExtension.contains","line":605,"kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span>.<span class=\"name\">contains</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L597-L603","name":"Lean.MapDeclarationExtension.find?","line":597,"kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.find?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension.find?\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span>.<span class=\"name\">find?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L592-L595","name":"Lean.MapDeclarationExtension.insert","line":592,"kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span>.<span class=\"name\">insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(val : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L589-L590","name":"Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","line":589,"kind":"instance","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension.instInhabitedMapDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span>.<span class=\"name\">instInhabitedMapDeclarationExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L579-L585","name":"Lean.mkMapDeclarationExtension","line":579,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkMapDeclarationExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkMapDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">mkMapDeclarationExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#_auto._@.Lean.Environment._hyg.3968\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\">Lean.MapDeclarationExtension</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L577-L577","name":"Lean.MapDeclarationExtension","line":577,"kind":"def","docLink":"./Lean/Environment.html#Lean.MapDeclarationExtension","doc":"Environment extension for mapping declarations to values.\nDeclarations must only be inserted into the mapping in the module where they were declared. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.MapDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">MapDeclarationExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L567-L570","name":"Lean.TagDeclarationExtension.isTagged","line":567,"kind":"def","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.isTagged","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.TagDeclarationExtension.isTagged\"><span class=\"name\">Lean</span>.<span class=\"name\">TagDeclarationExtension</span>.<span class=\"name\">isTagged</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\">Lean.TagDeclarationExtension</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L562-L565","name":"Lean.TagDeclarationExtension.tag","line":562,"kind":"def","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.tag","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.TagDeclarationExtension.tag\"><span class=\"name\">Lean</span>.<span class=\"name\">TagDeclarationExtension</span>.<span class=\"name\">tag</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <a href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\">Lean.TagDeclarationExtension</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L559-L560","name":"Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","line":559,"kind":"instance","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.TagDeclarationExtension.instInhabitedTagDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">TagDeclarationExtension</span>.<span class=\"name\">instInhabitedTagDeclarationExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\">Lean.TagDeclarationExtension</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L549-L555","name":"Lean.mkTagDeclarationExtension","line":549,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkTagDeclarationExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkTagDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">mkTagDeclarationExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#_auto._@.Lean.Environment._hyg.3728\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\">Lean.TagDeclarationExtension</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L547-L547","name":"Lean.TagDeclarationExtension","line":547,"kind":"def","docLink":"./Lean/Environment.html#Lean.TagDeclarationExtension","doc":"Environment extension for tagging declarations.\nDeclarations must only be tagged in the module where they were declared. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.TagDeclarationExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">TagDeclarationExtension</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L540-L541","name":"Lean.SimplePersistentEnvExtension.modifyState","line":540,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.modifyState","doc":"Modify the state of the given extension in the given environment by applying the given function. This change is *not* persisted across files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L536-L537","name":"Lean.SimplePersistentEnvExtension.setState","line":536,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.setState","doc":"Set the current state of the given `SimplePersistentEnvExtension`. This change is *not* persisted across files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">setState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L532-L533","name":"Lean.SimplePersistentEnvExtension.getState","line":532,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getState","doc":"Get the current state of the given `SimplePersistentEnvExtension`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L528-L529","name":"Lean.SimplePersistentEnvExtension.getEntries","line":528,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getEntries","doc":"Get the list of values used to update the state of the given\n`SimplePersistentEnvExtension` in the current file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.getEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">getEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L523-L524","name":"Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","line":523,"kind":"instance","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension.instInhabitedSimplePersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span>.<span class=\"name\">instInhabitedSimplePersistentEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L510-L519","name":"Lean.registerSimplePersistentEnvExtension","line":510,"kind":"def","docLink":"./Lean/Environment.html#Lean.registerSimplePersistentEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.registerSimplePersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerSimplePersistentEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\">Lean.SimplePersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L508-L508","name":"Lean.SimplePersistentEnvExtensionDescr.toArrayFn","line":508,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.toArrayFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.toArrayFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">toArrayFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L507-L507","name":"Lean.SimplePersistentEnvExtensionDescr.addImportedFn","line":507,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addImportedFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addImportedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">addImportedFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L506-L506","name":"Lean.SimplePersistentEnvExtensionDescr.addEntryFn","line":506,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addEntryFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.addEntryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">addEntryFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L505-L505","name":"Lean.SimplePersistentEnvExtensionDescr.name","line":505,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.name\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L504-L504","name":"Lean.SimplePersistentEnvExtensionDescr.mk","line":504,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#_auto._@.Lean.Environment._hyg.3366\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addEntryFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addImportedFn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toArrayFn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\">Lean.SimplePersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L504-L508","name":"Lean.SimplePersistentEnvExtensionDescr","line":504,"kind":"structure","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtensionDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtensionDescr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L501-L502","name":"Lean.mkStateFromImportedEntries","line":501,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkStateFromImportedEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkStateFromImportedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">mkStateFromImportedEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(addEntryFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(initState : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(as : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L499-L499","name":"Lean.SimplePersistentEnvExtension","line":499,"kind":"def","docLink":"./Lean/Environment.html#Lean.SimplePersistentEnvExtension","doc":"Simple `PersistentEnvExtension` that implements `exportEntriesFn` using a list of entries. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.SimplePersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">SimplePersistentEnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L496-L496","name":"Lean.registerPersistentEnvExtension","line":496,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.registerPersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerPersistentEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L474-L493","name":"Lean.registerPersistentEnvExtensionUnsafe","line":474,"kind":"def","docLink":"./Lean/Environment.html#Lean.registerPersistentEnvExtensionUnsafe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.registerPersistentEnvExtensionUnsafe\"><span class=\"name\">Lean</span>.<span class=\"name\">registerPersistentEnvExtensionUnsafe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(descr : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L472-L472","name":"Lean.PersistentEnvExtensionDescr.statsFn","line":472,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.statsFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.statsFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">statsFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L471-L471","name":"Lean.PersistentEnvExtensionDescr.exportEntriesFn","line":471,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.exportEntriesFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.exportEntriesFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">exportEntriesFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L470-L470","name":"Lean.PersistentEnvExtensionDescr.addEntryFn","line":470,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addEntryFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addEntryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">addEntryFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L469-L469","name":"Lean.PersistentEnvExtensionDescr.addImportedFn","line":469,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addImportedFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.addImportedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">addImportedFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L468-L468","name":"Lean.PersistentEnvExtensionDescr.mkInitial","line":468,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mkInitial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mkInitial\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">mkInitial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L467-L467","name":"Lean.PersistentEnvExtensionDescr.name","line":467,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.name\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L466-L466","name":"Lean.PersistentEnvExtensionDescr.mk","line":466,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(name : <span class=\"fn\"><a href=\"./Init/Meta.html#autoParam\">autoParam</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#_auto._@.Lean.Environment._hyg.2891\">_auto✝</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addImportedFn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addEntryFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exportEntriesFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(statsFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\">Lean.PersistentEnvExtensionDescr</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L466-L472","name":"Lean.PersistentEnvExtensionDescr","line":466,"kind":"structure","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionDescr\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionDescr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L464-L464","name":"Lean.persistentEnvExtensionsRef","line":464,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.persistentEnvExtensionsRef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.persistentEnvExtensionsRef\"><span class=\"name\">Lean</span>.<span class=\"name\">persistentEnvExtensionsRef</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L459-L460","name":"Lean.PersistentEnvExtension.modifyState","line":459,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.modifyState","doc":"Modify the state of the given extension in the given environment by applying the given function. This change is *not* persisted across files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L455-L456","name":"Lean.PersistentEnvExtension.setState","line":455,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.setState","doc":"Set the current state of the given extension in the given environment. This change is *not* persisted across files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">setState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L451-L452","name":"Lean.PersistentEnvExtension.getState","line":451,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getState","doc":"Get the current state of the given extension in the given environment. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L445-L448","name":"Lean.PersistentEnvExtension.addEntry","line":445,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">addEntry</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L442-L443","name":"Lean.PersistentEnvExtension.getModuleEntries","line":442,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.getModuleEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.getModuleEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">getModuleEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L430-L438","name":"Lean.instInhabitedPersistentEnvExtension","line":430,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedPersistentEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L427-L428","name":"Lean.instInhabitedPersistentEnvExtensionState","line":427,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedPersistentEnvExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedPersistentEnvExtensionState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L425-L425","name":"Lean.PersistentEnvExtension.statsFn","line":425,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.statsFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.statsFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">statsFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L424-L424","name":"Lean.PersistentEnvExtension.exportEntriesFn","line":424,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.exportEntriesFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.exportEntriesFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">exportEntriesFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L423-L423","name":"Lean.PersistentEnvExtension.addEntryFn","line":423,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntryFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.addEntryFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">addEntryFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L422-L422","name":"Lean.PersistentEnvExtension.addImportedFn","line":422,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.addImportedFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.addImportedFn\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">addImportedFn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">σ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L421-L421","name":"Lean.PersistentEnvExtension.name","line":421,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.name\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L420-L420","name":"Lean.PersistentEnvExtension.toEnvExtension","line":420,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.toEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.toEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">toEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L419-L419","name":"Lean.PersistentEnvExtension.mk","line":419,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toEnvExtension : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addImportedFn : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.ImportM\">Lean.ImportM</a> <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(addEntryFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">σ</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exportEntriesFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(statsFn : <span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\">Lean.PersistentEnvExtension</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L419-L425","name":"Lean.PersistentEnvExtension","line":419,"kind":"structure","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtension","doc":"An environment extension with support for storing/retrieving entries from a .olean file.\n- α is the type of the entries that are stored in .olean files.\n- β is the type of values used to update the state.\n- σ is the actual state.\n\nRemark: for most extensions α and β coincide.\n\nNote that `addEntryFn` is not in `IO`. This is intentional, and allows us to write simple functions such as\n```\ndef addAlias (env : Environment) (a : Name) (e : Name) : Environment :=\naliasExtension.addEntry env (a, e)\n```\nwithout using `IO`. We have many functions like `addAlias`.\n\n`α` and ‵β` do not coincide for extensions where the data used to update the state contains, for example,\nclosures which we currently cannot store in files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(β : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L401-L401","name":"Lean.ImportM","line":401,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L399-L399","name":"Lean.ImportM.Context.opts","line":399,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportM.Context.opts","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM.Context.opts\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span>.<span class=\"name\">Context</span>.<span class=\"name\">opts</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportM.Context\">Lean.ImportM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L398-L398","name":"Lean.ImportM.Context.env","line":398,"kind":"def","docLink":"./Lean/Environment.html#Lean.ImportM.Context.env","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM.Context.env\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span>.<span class=\"name\">Context</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ImportM.Context\">Lean.ImportM.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L397-L399","name":"Lean.ImportM.Context","line":397,"kind":"structure","docLink":"./Lean/Environment.html#Lean.ImportM.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L395-L395","name":"Lean.PersistentEnvExtensionState.state","line":395,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState.state","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState.state\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionState</span>.<span class=\"name\">state</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L394-L394","name":"Lean.PersistentEnvExtensionState.importedEntries","line":394,"kind":"def","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState.importedEntries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState.importedEntries\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionState</span>.<span class=\"name\">importedEntries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L393-L393","name":"Lean.PersistentEnvExtensionState.mk","line":393,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionState</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(importedEntries : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(state : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\">Lean.PersistentEnvExtensionState</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L393-L395","name":"Lean.PersistentEnvExtensionState","line":393,"kind":"structure","docLink":"./Lean/Environment.html#Lean.PersistentEnvExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.PersistentEnvExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">PersistentEnvExtensionState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L381-L391","name":"Lean.mkEmptyEnvironment","line":381,"kind":"def","docLink":"./Lean/Environment.html#Lean.mkEmptyEnvironment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.mkEmptyEnvironment\"><span class=\"name\">Lean</span>.<span class=\"name\">mkEmptyEnvironment</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L377-L377","name":"Lean.registerEnvExtension","line":377,"kind":"def","docLink":"./Lean/Environment.html#Lean.registerEnvExtension","doc":"Environment extensions can only be registered during initialization.\nReasons:\n1- Our implementation assumes the number of extensions does not change after an environment object is created.\n2- We do not use any synchronization primitive to access `envExtensionsRef`.\n\nNote that by default, extension state is *not* stored in .olean files and will not propagate across `import`s.\nFor that, you need to register a persistent environment extension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.registerEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">registerEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L367-L367","name":"Lean.EnvExtension.getState","line":367,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension.getState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L366-L366","name":"Lean.EnvExtension.modifyState","line":366,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension.modifyState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L365-L365","name":"Lean.EnvExtension.setState","line":365,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension.setState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span>.<span class=\"name\">setState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L364-L364","name":"Lean.EnvExtension.instInhabitedEnvExtension","line":364,"kind":"instance","docLink":"./Lean/Environment.html#Lean.EnvExtension.instInhabitedEnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension.instInhabitedEnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span>.<span class=\"name\">instInhabitedEnvExtension</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtension\">Lean.EnvExtension</a> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L358-L358","name":"Lean.EnvExtension","line":358,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtension","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtension\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtension</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L356-L356","name":"Lean.EnvExtensionInterfaceImp","line":356,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceImp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceImp\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceImp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L342-L351","name":"Lean.EnvExtensionInterfaceUnsafe.imp","line":342,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.imp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.imp\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">imp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L338-L340","name":"Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","line":338,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.mkInitialExtStates\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">mkInitialExtStates</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L326-L336","name":"Lean.EnvExtensionInterfaceUnsafe.registerExt","line":326,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.registerExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.registerExt\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">registerExt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L319-L324","name":"Lean.EnvExtensionInterfaceUnsafe.getState","line":319,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.getState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">getState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L308-L317","name":"Lean.EnvExtensionInterfaceUnsafe.modifyState","line":308,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.modifyState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">modifyState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L301-L306","name":"Lean.EnvExtensionInterfaceUnsafe.setState","line":301,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.setState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">setState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L290-L297","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","line":290,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">ensureExtensionsArraySize</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L287-L297","name":"Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","line":287,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize","doc":"User-defined environment extensions are declared using the `initialize` command.\nThis command is just syntax sugar for the `init` attribute.\nWhen we `import` lean modules, the vector stored at `envExtensionsRef` may increase in size because of\nuser-defined environment extensions. When this happens, we must adjust the size of the `env.extensions`.\nThis method is invoked when processing `import`s.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.ensureExtensionsArraySize\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">ensureExtensionsArraySize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L276-L276","name":"Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","line":276,"kind":"instance","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.instInhabitedExt\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">instInhabitedExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">a</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L275-L275","name":"Lean.EnvExtensionInterfaceUnsafe.Ext.mkInitial","line":275,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mkInitial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mkInitial\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">Ext</span>.<span class=\"name\">mkInitial</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L274-L274","name":"Lean.EnvExtensionInterfaceUnsafe.Ext.idx","line":274,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.idx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.idx\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">Ext</span>.<span class=\"name\">idx</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L273-L273","name":"Lean.EnvExtensionInterfaceUnsafe.Ext.mk","line":273,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">Ext</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(idx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\">Lean.EnvExtensionInterfaceUnsafe.Ext</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L273-L276","name":"Lean.EnvExtensionInterfaceUnsafe.Ext","line":273,"kind":"structure","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterfaceUnsafe.Ext\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterfaceUnsafe</span>.<span class=\"name\">Ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L258-L268","name":"Lean.instInhabitedEnvExtensionInterface","line":258,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionInterface","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedEnvExtensionInterface\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedEnvExtensionInterface</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L256-L256","name":"Lean.EnvExtensionInterface.ensureExtensionsSize","line":256,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.ensureExtensionsSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ensureExtensionsSize\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">ensureExtensionsSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L255-L255","name":"Lean.EnvExtensionInterface.mkInitialExtStates","line":255,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.mkInitialExtStates","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.mkInitialExtStates\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">mkInitialExtStates</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L254-L254","name":"Lean.EnvExtensionInterface.getState","line":254,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.getState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.getState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">getState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">σ</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L253-L253","name":"Lean.EnvExtensionInterface.modifyState","line":253,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.modifyState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.modifyState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">modifyState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>) → <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L252-L252","name":"Lean.EnvExtensionInterface.setState","line":252,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.setState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.setState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">setState</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L251-L251","name":"Lean.EnvExtensionInterface.registerExt","line":251,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.registerExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.registerExt\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">registerExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(mkInitial : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L250-L250","name":"Lean.EnvExtensionInterface.inhabitedExt","line":250,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.inhabitedExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.inhabitedExt\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">inhabitedExt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\">Lean.EnvExtensionInterface.ext</a> <span class=\"fn\">self</span> <span class=\"fn\">σ</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L249-L249","name":"Lean.EnvExtensionInterface.ext","line":249,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.ext\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">ext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L248-L256","name":"Lean.EnvExtensionInterface","line":248,"kind":"structure","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface","doc":"Interface for managing environment extensions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> 1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L242-L243","name":"Lean.ConstantInfo.instantiateValueLevelParams!","line":242,"kind":"def","docLink":"./Lean/Environment.html#Lean.ConstantInfo.instantiateValueLevelParams!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ConstantInfo.instantiateValueLevelParams!\"><span class=\"name\">Lean</span>.<span class=\"name\">ConstantInfo</span>.<span class=\"name\">instantiateValueLevelParams!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ls : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L239-L240","name":"Lean.ConstantInfo.instantiateTypeLevelParams","line":239,"kind":"def","docLink":"./Lean/Environment.html#Lean.ConstantInfo.instantiateTypeLevelParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ConstantInfo.instantiateTypeLevelParams\"><span class=\"name\">Lean</span>.<span class=\"name\">ConstantInfo</span>.<span class=\"name\">instantiateTypeLevelParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ls : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L233-L233","name":"Lean.Environment.addDecl","line":233,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.Environment.addDecl","doc":"Type check given declaration and add it to the environment "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.addDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">addDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Declaration.html#Lean.Declaration\">Lean.Declaration</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L227-L227","name":"Lean.KernelException.deepRecursion","line":227,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.deepRecursion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.deepRecursion\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">deepRecursion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L226-L226","name":"Lean.KernelException.excessiveMemory","line":226,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.excessiveMemory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.excessiveMemory\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">excessiveMemory</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L225-L225","name":"Lean.KernelException.deterministicTimeout","line":225,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.deterministicTimeout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.deterministicTimeout\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">deterministicTimeout</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L224-L224","name":"Lean.KernelException.other","line":224,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.other","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.other\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">other</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L223-L223","name":"Lean.KernelException.invalidProj","line":223,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.invalidProj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.invalidProj\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">invalidProj</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(proj : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L222-L222","name":"Lean.KernelException.appTypeMismatch","line":222,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.appTypeMismatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.appTypeMismatch\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">appTypeMismatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(app : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(funType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(argType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L221-L221","name":"Lean.KernelException.exprTypeMismatch","line":221,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.exprTypeMismatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.exprTypeMismatch\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">exprTypeMismatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expectedType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L220-L220","name":"Lean.KernelException.letTypeMismatch","line":220,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.letTypeMismatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.letTypeMismatch\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">letTypeMismatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(givenType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expectedType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L219-L219","name":"Lean.KernelException.typeExpected","line":219,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.typeExpected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.typeExpected\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">typeExpected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L218-L218","name":"Lean.KernelException.funExpected","line":218,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.funExpected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.funExpected\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">funExpected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L217-L217","name":"Lean.KernelException.declHasFVars","line":217,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.declHasFVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.declHasFVars\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">declHasFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L216-L216","name":"Lean.KernelException.declHasMVars","line":216,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.declHasMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.declHasMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">declHasMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L215-L215","name":"Lean.KernelException.declTypeMismatch","line":215,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.declTypeMismatch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.declTypeMismatch\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">declTypeMismatch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Declaration.html#Lean.Declaration\">Lean.Declaration</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(givenType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L214-L214","name":"Lean.KernelException.alreadyDeclared","line":214,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.alreadyDeclared","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.alreadyDeclared\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">alreadyDeclared</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L213-L213","name":"Lean.KernelException.unknownConstant","line":213,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.KernelException.unknownConstant","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException.unknownConstant\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span>.<span class=\"name\">unknownConstant</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.KernelException\">Lean.KernelException</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L212-L227","name":"Lean.KernelException","line":212,"kind":"inductive","docLink":"./Lean/Environment.html#Lean.KernelException","doc":"Exceptions that can be raised by the Kernel when type checking new declarations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.KernelException\"><span class=\"name\">Lean</span>.<span class=\"name\">KernelException</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L206-L207","name":"Lean.Environment.getModuleIdx?","line":206,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdx?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.getModuleIdx?\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">getModuleIdx?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L201-L204","name":"Lean.Environment.isConstructor","line":201,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.isConstructor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.isConstructor\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">isConstructor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L198-L199","name":"Lean.Environment.getModuleIdxFor?","line":198,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.getModuleIdxFor?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.getModuleIdxFor?\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">getModuleIdxFor?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L183-L184","name":"Lean.Environment.mainModule","line":183,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.mainModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.mainModule\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">mainModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L179-L180","name":"Lean.Environment.setMainModule","line":179,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.setMainModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.setMainModule\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">setMainModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L175-L176","name":"Lean.Environment.allImportedModuleNames","line":175,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.allImportedModuleNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.allImportedModuleNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">allImportedModuleNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L172-L173","name":"Lean.Environment.imports","line":172,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.imports","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.imports\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">imports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L169-L170","name":"Lean.Environment.contains","line":169,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L165-L167","name":"Lean.Environment.find?","line":165,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.find?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.find?\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">find?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L158-L162","name":"Lean.Environment.addExtraName","line":158,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.addExtraName","doc":"Save an extra constant name that is used to populate `const2ModIdx` when we import\n.olean files. We use this feature to save in which module an auxiliary declaration\ncreated by the code generator has been created.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.addExtraName\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">addExtraName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L150-L151","name":"Lean.Environment.addAux","line":150,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.addAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.addAux\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">addAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cinfo : <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L146-L146","name":"Lean.instNonemptyEnvironment","line":146,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvironment","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instNonemptyEnvironment\"><span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyEnvironment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L145-L145","name":"Lean.Environment.header","line":145,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.header","doc":"The header contains additional information that is not updated often. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.header\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">header</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L143-L143","name":"Lean.Environment.extraConstNames","line":143,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.extraConstNames","doc":"Constant names to be saved in the field `extraConstNames` at `ModuleData`.\nIt contains auxiliary declaration names created by the code generator which are not in `constants`.\nWhen importing modules, we want to insert them at `const2ModIdx`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.extraConstNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">extraConstNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L137-L137","name":"Lean.Environment.extensions","line":137,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.extensions","doc":"Environment extensions. It also includes user-defined extensions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.extensions\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">extensions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L133-L133","name":"Lean.Environment.constants","line":133,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.constants","doc":"Mapping from constant name to `ConstantInfo`. It contains all constants (definitions, theorems, axioms, etc)\nthat have been already type checked by the kernel.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.constants\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">constants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.ConstMap\">Lean.ConstMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L128-L128","name":"Lean.Environment.const2ModIdx","line":128,"kind":"def","docLink":"./Lean/Environment.html#Lean.Environment.const2ModIdx","doc":"Mapping from constant name to module (index) where constant has been declared.\nRecall that a Lean file has a header where previously compiled modules can be imported.\nEach imported module has a unique `ModuleIdx`.\nMany extensions use the `ModuleIdx` to efficiently retrieve information stored in imported modules.\n\nRemark: this mapping also contains auxiliary constants, created by the code generator, that are **not** in\nthe field `constants`. These auxiliary constants are invisible to the Lean kernel and elaborator.\nOnly the code generator uses them.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.const2ModIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">const2ModIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L117-L146","name":"Lean.Environment","line":117,"kind":"structure","docLink":"./Lean/Environment.html#Lean.Environment","doc":"An environment stores declarations provided by the user. The kernel\ncurrently supports different kinds of declarations such as definitions, theorems,\nand inductive families. Each has a unique identifier (i.e., `Name`), and can be\nparameterized by a sequence of universe parameters.\nA constant in Lean is just a reference to a `ConstantInfo` object. The main task of\nthe kernel is to type check these declarations and refuse type incorrect ones. The\nkernel does not allow declarations containing metavariables and/or free variables\nto be added to an environment. Environments are never destructively updated.\n\nThe environment also contains a collection of extensions. For example, the `simp` theorems\ndeclared by users are stored in an environment extension. Users can declare new extensions\nusing meta-programming.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L101-L101","name":"Lean.instNonemptyEnvironmentHeader","line":101,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvironmentHeader","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instNonemptyEnvironmentHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyEnvironmentHeader</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L100-L100","name":"Lean.EnvironmentHeader.moduleData","line":100,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.moduleData","doc":"Module data for all imported modules. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.moduleData\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">moduleData</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L98-L98","name":"Lean.EnvironmentHeader.moduleNames","line":98,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.moduleNames","doc":"Name of all imported modules (directly and indirectly). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.moduleNames\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">moduleNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L96-L96","name":"Lean.EnvironmentHeader.regions","line":96,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.regions","doc":"Compacted regions for all imported modules. Objects in compacted memory regions do no require any memory management. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.regions\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">regions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L94-L94","name":"Lean.EnvironmentHeader.imports","line":94,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.imports","doc":"Direct imports "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.imports\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">imports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L92-L92","name":"Lean.EnvironmentHeader.mainModule","line":92,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.mainModule","doc":"Name of the module being compiled.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.mainModule\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">mainModule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L88-L88","name":"Lean.EnvironmentHeader.quotInit","line":88,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.quotInit","doc":"`quotInit = true` if the command `init_quot` has already been executed for the environment, and\n`Quot` declarations have been added to the environment.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.quotInit\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">quotInit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L83-L83","name":"Lean.EnvironmentHeader.trustLevel","line":83,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.trustLevel","doc":"The trust level used by the kernel. For example,\nthe kernel assumes imported constants are type correct when the trust level is greater than zero.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.trustLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">trustLevel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#UInt32\">UInt32</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L78-L101","name":"Lean.EnvironmentHeader","line":78,"kind":"structure","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader","doc":"Environment fields that are not used often. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L75-L75","name":"Lean.instInhabitedModuleData","line":75,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleData","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedModuleData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L74-L74","name":"Lean.ModuleData.entries","line":74,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.entries","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.entries\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">entries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L73-L73","name":"Lean.ModuleData.extraConstNames","line":73,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.extraConstNames","doc":"Extra entries for the `const2ModIdx` map in the `Environment` object.\nThe code generator creates auxiliary declarations that are not in the\nmapping `constants`, but we want to know in which module they were generated.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.extraConstNames\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">extraConstNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L67-L67","name":"Lean.ModuleData.constants","line":67,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.constants","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.constants\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">constants</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L66-L66","name":"Lean.ModuleData.constNames","line":66,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.constNames","doc":"`constNames` contains all constant names in `constants`.\nThis information is redundant. It is equal to `constants.map fun c => c.name`,\nbut it improves the performance of `importModules`. `perf` reports that 12% of the\nruntime was being spent on `ConstantInfo.name` when importing a file containing only `import Lean`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.constNames\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">constNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L59-L59","name":"Lean.ModuleData.imports","line":59,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleData.imports","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.imports\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">imports</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L58-L75","name":"Lean.ModuleData","line":58,"kind":"structure","docLink":"./Lean/Environment.html#Lean.ModuleData","doc":"Content of a .olean file.\nWe use `compact.cpp` to generate the image of this object in disk. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L54-L54","name":"Lean.instNonemptyEnvExtensionEntry","line":54,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instNonemptyEnvExtensionEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instNonemptyEnvExtensionEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">instNonemptyEnvExtensionEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L53-L53","name":"Lean.EnvExtensionEntry","line":53,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L52-L52","name":"Lean.EnvExtensionEntrySpec","line":52,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionEntrySpec","doc":"Opaque persistent environment extension entry. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionEntrySpec\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionEntrySpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#NonemptyType\">NonemptyType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L49-L49","name":"Lean.CompactedRegion.free","line":49,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.CompactedRegion.free","doc":"Free a compacted region and its contents. No live references to the contents may exist at the time of invocation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">unsafe opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.CompactedRegion.free\"><span class=\"name\">Lean</span>.<span class=\"name\">CompactedRegion</span>.<span class=\"name\">free</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L45-L45","name":"Lean.CompactedRegion.isMemoryMapped","line":45,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.CompactedRegion.isMemoryMapped","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.CompactedRegion.isMemoryMapped\"><span class=\"name\">Lean</span>.<span class=\"name\">CompactedRegion</span>.<span class=\"name\">isMemoryMapped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L42-L42","name":"Lean.CompactedRegion","line":42,"kind":"def","docLink":"./Lean/Environment.html#Lean.CompactedRegion","doc":"A compacted region holds multiple Lean objects in a contiguous memory region, which can be read/written to/from disk.\nObjects inside the region do not have reference counters and cannot be freed individually. The contents of .olean\nfiles are compacted regions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.CompactedRegion\"><span class=\"name\">Lean</span>.<span class=\"name\">CompactedRegion</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L36-L36","name":"Lean.instToStringImport","line":36,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instToStringImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instToStringImport\"><span class=\"name\">Lean</span>.<span class=\"name\">instToStringImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L34-L34","name":"Lean.instInhabitedImport","line":34,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedImport\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L34-L34","name":"Lean.instReprImport","line":34,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instReprImport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instReprImport\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprImport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L33-L33","name":"Lean.Import.runtimeOnly","line":33,"kind":"def","docLink":"./Lean/Environment.html#Lean.Import.runtimeOnly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Import.runtimeOnly\"><span class=\"name\">Lean</span>.<span class=\"name\">Import</span>.<span class=\"name\">runtimeOnly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L32-L32","name":"Lean.Import.module","line":32,"kind":"def","docLink":"./Lean/Environment.html#Lean.Import.module","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Import.module\"><span class=\"name\">Lean</span>.<span class=\"name\">Import</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L31-L34","name":"Lean.Import","line":31,"kind":"structure","docLink":"./Lean/Environment.html#Lean.Import","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Import\"><span class=\"name\">Lean</span>.<span class=\"name\">Import</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L29-L29","name":"Lean.ConstMap","line":29,"kind":"def","docLink":"./Lean/Environment.html#Lean.ConstMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ConstMap\"><span class=\"name\">Lean</span>.<span class=\"name\">ConstMap</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L27-L27","name":"Lean.instInhabitedModuleIdx","line":27,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedModuleIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedModuleIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedModuleIdx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L25-L25","name":"Lean.ModuleIdx.toNat","line":25,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleIdx.toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleIdx.toNat\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleIdx</span>.<span class=\"name\">toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(midx : <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L22-L23","name":"Lean.ModuleIdx","line":22,"kind":"def","docLink":"./Lean/Environment.html#Lean.ModuleIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleIdx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L20-L20","name":"Lean.instInhabitedEnvExtensionState","line":20,"kind":"instance","docLink":"./Lean/Environment.html#Lean.instInhabitedEnvExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.instInhabitedEnvExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedEnvExtensionState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L19-L19","name":"Lean.EnvExtensionState","line":19,"kind":"def","docLink":"./Lean/Environment.html#Lean.EnvExtensionState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionState\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L18-L18","name":"Lean.EnvExtensionStateSpec","line":18,"kind":"opaque","docLink":"./Lean/Environment.html#Lean.EnvExtensionStateSpec","doc":"Opaque environment extension state. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionStateSpec\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionStateSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>) × <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L1-L1","name":"Lean.Environment.mk","line":1,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.Environment.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Environment.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Environment</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(const2ModIdx : <span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Lean/Environment.html#Lean.ModuleIdx\">Lean.ModuleIdx</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constants : <a href=\"./Lean/Environment.html#Lean.ConstMap\">Lean.ConstMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extensions : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraConstNames : <a href=\"./Lean/Data/NameMap.html#Lean.NameSet\">Lean.NameSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(header : <a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L1-L1","name":"Lean.EnvExtensionInterface.mk","line":1,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.EnvExtensionInterface.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvExtensionInterface.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvExtensionInterface</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ext : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inhabitedExt : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(registerExt : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(setState : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <span class=\"fn\"><span class=\"fn\">σ</span> → <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(modifyState : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">σ</span> → <span class=\"fn\">σ</span></span>) → <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(getState : <span class=\"fn\">{<span class=\"fn\">σ</span> : <a href=\"./foundational_types.html\">Type</a>} → <span class=\"fn\">[<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">σ</span></span>] → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ext</span> <span class=\"fn\">σ</span></span> → <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <span class=\"fn\">σ</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mkInitialExtStates : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionState\">Lean.EnvExtensionState</a></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ensureExtensionsSize : <span class=\"fn\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a> → <span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvExtensionInterface\">Lean.EnvExtensionInterface</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L1-L1","name":"Lean.EnvironmentHeader.mk","line":1,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.EnvironmentHeader.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.EnvironmentHeader.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">EnvironmentHeader</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(trustLevel : <a href=\"./Init/Prelude.html#UInt32\">UInt32</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(quotInit : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainModule : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(regions : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleData : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.EnvironmentHeader\">Lean.EnvironmentHeader</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L1-L1","name":"Lean.ImportState.mk","line":1,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.ImportState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(moduleNameSet : <a href=\"./Lean/Data/NameMap.html#Lean.NameHashSet\">Lean.NameHashSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(moduleData : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(regions : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.CompactedRegion\">Lean.CompactedRegion</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.ImportState\">Lean.ImportState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L1-L1","name":"Lean.ModuleData.mk","line":1,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.ModuleData.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ModuleData.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ModuleData</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(imports : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(constants : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extraConstNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(entries : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Environment.html#Lean.EnvExtensionEntry\">Lean.EnvExtensionEntry</a></span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.ModuleData\">Lean.ModuleData</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L1-L1","name":"Lean.ImportM.Context.mk","line":1,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.ImportM.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.ImportM.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ImportM</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.ImportM.Context\">Lean.ImportM.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/ec941735c80dc54c53948e30c428905b6600f95a/src/Lean/Environment.lean#L1-L1","name":"Lean.Import.mk","line":1,"kind":"ctor","docLink":"./Lean/Environment.html#Lean.Import.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Environment.html#Lean.Import.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Import</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(module : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(runtimeOnly : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Import\">Lean.Import</a></div></div>"}]}
{"name":"Lean.Parser.Types","instances":[{"typeNames":["Lean.Parser.InputContext"],"name":"Lean.Parser.instInhabitedInputContext","className":"Inhabited"},{"typeNames":["Lean.Parser.CacheableParserContext"],"name":"Lean.Parser.instBEqCacheableParserContext","className":"BEq"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.instInhabitedError","className":"Inhabited"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.instBEqError","className":"BEq"},{"typeNames":["Lean.Parser.Error"],"name":"Lean.Parser.Error.instToStringError","className":"ToString"},{"typeNames":["Lean.Parser.ParserCacheKey"],"name":"Lean.Parser.instBEqParserCacheKey","className":"BEq"},{"typeNames":["Lean.Parser.ParserCacheKey"],"name":"Lean.Parser.instHashableParserCacheKey","className":"Hashable"},{"typeNames":["Lean.Parser.SyntaxStack","Array","Lean.Syntax","Lean.Parser.SyntaxStack"],"name":"Lean.Parser.SyntaxStack.instHAppendSyntaxStackArraySyntax","className":"HAppend"},{"typeNames":["Lean.Parser.ParserFn"],"name":"Lean.Parser.instInhabitedParserFn","className":"Inhabited"},{"typeNames":["Lean.Parser.FirstTokens"],"name":"Lean.Parser.instInhabitedFirstTokens","className":"Inhabited"},{"typeNames":["Lean.Parser.FirstTokens"],"name":"Lean.Parser.FirstTokens.instToStringFirstTokens","className":"ToString"},{"typeNames":["Lean.Parser.ParserInfo"],"name":"Lean.Parser.instInhabitedParserInfo","className":"Inhabited"},{"typeNames":["Lean.Parser.Parser"],"name":"Lean.Parser.instInhabitedParser","className":"Inhabited"}],"imports":["Init","Lean.Data.Trie","Lean.Syntax","Lean.Message"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L403-L408","name":"Lean.Parser.ParserFn.run","line":403,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserFn.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserFn</span>.<span class=\"name\">run</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ictx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pmctx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tokens : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L401-L401","name":"Lean.Parser.withCache","line":401,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withCache","doc":"Run `p` and record result in parser cache for any further invocation with this `parserName`, parser context, and parser state.\n`p` cannot access syntax stack elements pushed before the invocation in order to make caching independent of parser history.\nAs this excludes trailing parsers from being cached, we also reset `lhsPrec`, which is not read but set by leading parsers, to 0\nin order to increase cache hits. Finally, `errorMsg` is also reset to `none` as a leading parser should not be called in the first\nplace if there was an error.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(parserName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L388-L398","name":"Lean.Parser.withCacheFn","line":388,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withCacheFn","doc":"Run `p` and record result in parser cache for any further invocation with this `parserName`, parser context, and parser state.\n`p` cannot access syntax stack elements pushed before the invocation in order to make caching independent of parser history.\nAs this excludes trailing parsers from being cached, we also reset `lhsPrec`, which is not read but set by leading parsers, to 0\nin order to increase cache hits. Finally, `errorMsg` is also reset to `none` as a leading parser should not be called in the first\nplace if there was an error.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withCacheFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withCacheFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(parserName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L378-L379","name":"Lean.Parser.adaptUncacheableContextFn","line":378,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.adaptUncacheableContextFn","doc":"Run `p` under the given context transformation with a fresh cache (see also `withResetCacheFn`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.adaptUncacheableContextFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">adaptUncacheableContextFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">Lean.Parser.ParserContextCore</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">Lean.Parser.ParserContextCore</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L375-L375","name":"Lean.Parser.withResetCache","line":375,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withResetCache","doc":"Run `p` with a fresh cache, restore outer cache afterwards.\n`p` may access the entire syntax stack.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withResetCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withResetCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L369-L372","name":"Lean.Parser.withResetCacheFn","line":369,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withResetCacheFn","doc":"Run `p` with a fresh cache, restore outer cache afterwards.\n`p` may access the entire syntax stack.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withResetCacheFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withResetCacheFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L357-L358","name":"Lean.Parser.adaptCacheableContext","line":357,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">adaptCacheableContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L354-L355","name":"Lean.Parser.adaptCacheableContextFn","line":354,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContextFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.adaptCacheableContextFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">adaptCacheableContextFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L352-L352","name":"Lean.Parser.withFn","line":352,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.withFn","doc":"Create a simple parser combinator that inherits the `info` of the nested parser. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.withFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">withFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L348-L348","name":"Lean.Parser.TrailingParser","line":348,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TrailingParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TrailingParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TrailingParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L346-L346","name":"Lean.Parser.instInhabitedParser","line":346,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L345-L345","name":"Lean.Parser.Parser.fn","line":345,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser.fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser.fn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span>.<span class=\"name\">fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L344-L344","name":"Lean.Parser.Parser.info","line":344,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser.info","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser.info\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span>.<span class=\"name\">info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L343-L346","name":"Lean.Parser.Parser","line":343,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L341-L341","name":"Lean.Parser.instInhabitedParserInfo","line":341,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParserInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L340-L340","name":"Lean.Parser.ParserInfo.firstTokens","line":340,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.firstTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.firstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">firstTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L339-L339","name":"Lean.Parser.ParserInfo.collectKinds","line":339,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectKinds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectKinds\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">collectKinds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L338-L338","name":"Lean.Parser.ParserInfo.collectTokens","line":338,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.collectTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">collectTokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L337-L341","name":"Lean.Parser.ParserInfo","line":337,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L332-L333","name":"Lean.Parser.FirstTokens.instToStringFirstTokens","line":332,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.instToStringFirstTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.instToStringFirstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">instToStringFirstTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L326-L330","name":"Lean.Parser.FirstTokens.toStr","line":326,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toStr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toStr\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">toStr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L317-L324","name":"Lean.Parser.FirstTokens.merge","line":317,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.merge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L313-L315","name":"Lean.Parser.FirstTokens.toOptional","line":313,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toOptional","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.toOptional\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">toOptional</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L307-L311","name":"Lean.Parser.FirstTokens.seq","line":307,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.seq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.seq\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">seq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L303-L303","name":"Lean.Parser.instInhabitedFirstTokens","line":303,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedFirstTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedFirstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedFirstTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L302-L302","name":"Lean.Parser.FirstTokens.optTokens","line":302,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.optTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.optTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">optTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L301-L301","name":"Lean.Parser.FirstTokens.tokens","line":301,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.tokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.tokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">tokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L300-L300","name":"Lean.Parser.FirstTokens.unknown","line":300,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.unknown","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.unknown\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">unknown</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L299-L299","name":"Lean.Parser.FirstTokens.epsilon","line":299,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.epsilon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens.epsilon\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span>.<span class=\"name\">epsilon</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L298-L303","name":"Lean.Parser.FirstTokens","line":298,"kind":"inductive","docLink":"./Lean/Parser/Types.html#Lean.Parser.FirstTokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">FirstTokens</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L295-L296","name":"Lean.Parser.instInhabitedParserFn","line":295,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedParserFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedParserFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L293-L293","name":"Lean.Parser.ParserFn","line":293,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L287-L289","name":"Lean.Parser.ParserState.mkUnexpectedErrorAt","line":287,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedErrorAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedErrorAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedErrorAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L282-L285","name":"Lean.Parser.ParserState.mkErrorsAt","line":282,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorsAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorsAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkErrorsAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ex : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(initStackSz? : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>) <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L277-L280","name":"Lean.Parser.ParserState.mkErrorAt","line":277,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkErrorAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkErrorAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(initStackSz? : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>) <span class=\"fn\">none</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L274-L275","name":"Lean.Parser.ParserState.mkEOIError","line":274,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkEOIError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkEOIError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkEOIError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">[]</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L270-L272","name":"Lean.Parser.ParserState.mkUnexpectedError","line":270,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkUnexpectedError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkUnexpectedError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>) <span class=\"fn\">[]</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pushMissing : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L266-L268","name":"Lean.Parser.ParserState.mkError","line":266,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L262-L264","name":"Lean.Parser.ParserState.setError","line":262,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.setError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.setError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">setError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msg : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L254-L260","name":"Lean.Parser.ParserState.mkTrailingNode","line":254,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkTrailingNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkTrailingNode\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkTrailingNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iniStackSz : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L235-L252","name":"Lean.Parser.ParserState.mkNode","line":235,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mkNode\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mkNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iniStackSz : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L228-L233","name":"Lean.Parser.ParserState.toErrorMsg","line":228,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.toErrorMsg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.toErrorMsg\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">toErrorMsg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L225-L226","name":"Lean.Parser.ParserState.next'","line":225,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.next'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.next'\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">next'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/String/Basic.html#String.atEnd\">String.atEnd</a> <span class=\"fn\">input</span> <span class=\"fn\">pos</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L222-L223","name":"Lean.Parser.ParserState.next","line":222,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.next","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.next\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">next</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L219-L220","name":"Lean.Parser.ParserState.shrinkStack","line":219,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.shrinkStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.shrinkStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">shrinkStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iniStackSz : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L216-L217","name":"Lean.Parser.ParserState.popSyntax","line":216,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.popSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.popSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">popSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L213-L214","name":"Lean.Parser.ParserState.pushSyntax","line":213,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.pushSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.pushSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">pushSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L210-L211","name":"Lean.Parser.ParserState.setCache","line":210,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.setCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.setCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">setCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cache : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">Lean.Parser.ParserCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L207-L208","name":"Lean.Parser.ParserState.setPos","line":207,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.setPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.setPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">setPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L204-L205","name":"Lean.Parser.ParserState.restore","line":204,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.restore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.restore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">restore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iniStackSz : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iniPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L201-L202","name":"Lean.Parser.ParserState.stackSize","line":201,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.stackSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.stackSize\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">stackSize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L198-L199","name":"Lean.Parser.ParserState.hasError","line":198,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.hasError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.hasError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">hasError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L194-L194","name":"Lean.Parser.ParserState.errorMsg","line":194,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.errorMsg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.errorMsg\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">errorMsg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L193-L193","name":"Lean.Parser.ParserState.cache","line":193,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.cache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.cache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">cache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">Lean.Parser.ParserCache</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L192-L192","name":"Lean.Parser.ParserState.pos","line":192,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L191-L191","name":"Lean.Parser.ParserState.lhsPrec","line":191,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.lhsPrec","doc":"Set to the precedence of the preceding (not surrounding) parser by `runLongestMatchParser`\nfor the use of `checkLhsPrec` in trailing parsers.\nNote that with chaining, the preceding parser can be another trailing parser:\nin `1 * 2 + 3`, the preceding parser is '*' when '+' is executed. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.lhsPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">lhsPrec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L185-L185","name":"Lean.Parser.ParserState.stxStack","line":185,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.stxStack","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.stxStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">stxStack</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L184-L194","name":"Lean.Parser.ParserState","line":184,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L179-L180","name":"Lean.Parser.SyntaxStack.instHAppendSyntaxStackArraySyntax","line":179,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.instHAppendSyntaxStackArraySyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.instHAppendSyntaxStackArraySyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">instHAppendSyntaxStackArraySyntax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#HAppend\">HAppend</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>) <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L176-L177","name":"Lean.Parser.SyntaxStack.extract","line":176,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.extract","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.extract\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">extract</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(start : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stop : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L170-L174","name":"Lean.Parser.SyntaxStack.get!","line":170,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.get!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.get!\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">get!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L164-L168","name":"Lean.Parser.SyntaxStack.back","line":164,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.back","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.back\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">back</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L159-L162","name":"Lean.Parser.SyntaxStack.pop","line":159,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.pop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.pop\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">pop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L156-L157","name":"Lean.Parser.SyntaxStack.push","line":156,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.push","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.push\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">push</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L153-L154","name":"Lean.Parser.SyntaxStack.shrink","line":153,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.shrink","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.shrink\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">shrink</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L150-L151","name":"Lean.Parser.SyntaxStack.isEmpty","line":150,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L147-L148","name":"Lean.Parser.SyntaxStack.size","line":147,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.size\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L143-L145","name":"Lean.Parser.SyntaxStack.empty","line":143,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L140-L141","name":"Lean.Parser.SyntaxStack.toSubarray","line":140,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.toSubarray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.toSubarray\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">toSubarray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Array/Subarray.html#Subarray\">Subarray</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L134-L136","name":"Lean.Parser.SyntaxStack","line":134,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack","doc":"A syntax array with an inaccessible prefix, used for sound caching. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L129-L131","name":"Lean.Parser.initCacheForInput","line":129,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.initCacheForInput","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.initCacheForInput\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">initCacheForInput</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">Lean.Parser.ParserCache</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L127-L127","name":"Lean.Parser.ParserCache.parserCache","line":127,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache.parserCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache.parserCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span>.<span class=\"name\">parserCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">Lean.Parser.ParserCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">Lean.Parser.ParserCacheKey</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">Lean.Parser.ParserCacheEntry</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L126-L126","name":"Lean.Parser.ParserCache.tokenCache","line":126,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache.tokenCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache.tokenCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span>.<span class=\"name\">tokenCache</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">Lean.Parser.ParserCache</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">Lean.Parser.TokenCacheEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L125-L127","name":"Lean.Parser.ParserCache","line":125,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L123-L123","name":"Lean.Parser.ParserCacheEntry.errorMsg","line":123,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.errorMsg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.errorMsg\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">errorMsg</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">Lean.Parser.ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L122-L122","name":"Lean.Parser.ParserCacheEntry.newPos","line":122,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.newPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.newPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">newPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">Lean.Parser.ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L121-L121","name":"Lean.Parser.ParserCacheEntry.lhsPrec","line":121,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.lhsPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.lhsPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">lhsPrec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">Lean.Parser.ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L120-L120","name":"Lean.Parser.ParserCacheEntry.stx","line":120,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.stx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">Lean.Parser.ParserCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L119-L123","name":"Lean.Parser.ParserCacheEntry","line":119,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L115-L117","name":"Lean.Parser.instHashableParserCacheKey","line":115,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instHashableParserCacheKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instHashableParserCacheKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instHashableParserCacheKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">Lean.Parser.ParserCacheKey</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L113-L113","name":"Lean.Parser.instBEqParserCacheKey","line":113,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqParserCacheKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqParserCacheKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqParserCacheKey</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">Lean.Parser.ParserCacheKey</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L112-L112","name":"Lean.Parser.ParserCacheKey.pos","line":112,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.pos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">Lean.Parser.ParserCacheKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L111-L111","name":"Lean.Parser.ParserCacheKey.parserName","line":111,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.parserName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.parserName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">parserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">Lean.Parser.ParserCacheKey</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L110-L113","name":"Lean.Parser.ParserCacheKey","line":110,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L108-L108","name":"Lean.Parser.TokenCacheEntry.token","line":108,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.token","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">token</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">Lean.Parser.TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L107-L107","name":"Lean.Parser.TokenCacheEntry.stopPos","line":107,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.stopPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.stopPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">stopPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">Lean.Parser.TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L106-L106","name":"Lean.Parser.TokenCacheEntry.startPos","line":106,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.startPos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.startPos\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">startPos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">Lean.Parser.TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L105-L108","name":"Lean.Parser.TokenCacheEntry","line":105,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L99-L101","name":"Lean.Parser.Error.merge","line":99,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.merge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e₁ : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₂ : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L96-L97","name":"Lean.Parser.Error.instToStringError","line":96,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.instToStringError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.instToStringError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">instToStringError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L88-L94","name":"Lean.Parser.Error.toString","line":88,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.toString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.toString\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">toString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L78-L78","name":"Lean.Parser.instBEqError","line":78,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L78-L78","name":"Lean.Parser.instInhabitedError","line":78,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedError\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L77-L77","name":"Lean.Parser.Error.expected","line":77,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.expected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.expected\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">expected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L76-L76","name":"Lean.Parser.Error.unexpected","line":76,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.unexpected","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.unexpected\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">unexpected</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L75-L78","name":"Lean.Parser.Error","line":75,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L73-L73","name":"Lean.Parser.ParserContext","line":73,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContext","doc":"Opaque parser context updateable using `adaptCacheableContextFn` and `adaptUncacheableContextFn`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContext</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L70-L70","name":"Lean.Parser.ParserContextCore.tokens","line":70,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.tokens","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.tokens\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">tokens</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">Lean.Parser.ParserContextCore</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L69-L70","name":"Lean.Parser.ParserContextCore","line":69,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore","doc":"Parser context updateable in `adaptUncacheableContextFn`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span></a></span></span>\n, <span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L66-L66","name":"Lean.Parser.instBEqCacheableParserContext","line":66,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instBEqCacheableParserContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instBEqCacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instBEqCacheableParserContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L65-L65","name":"Lean.Parser.CacheableParserContext.forbiddenTk?","line":65,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.forbiddenTk?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.forbiddenTk?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">forbiddenTk?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L64-L64","name":"Lean.Parser.CacheableParserContext.savedPos?","line":64,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.savedPos?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.savedPos?\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">savedPos?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L63-L63","name":"Lean.Parser.CacheableParserContext.suppressInsideQuot","line":63,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.suppressInsideQuot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.suppressInsideQuot\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">suppressInsideQuot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L62-L62","name":"Lean.Parser.CacheableParserContext.quotDepth","line":62,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.quotDepth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.quotDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">quotDepth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L60-L60","name":"Lean.Parser.CacheableParserContext.prec","line":60,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.prec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.prec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">prec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L59-L66","name":"Lean.Parser.CacheableParserContext","line":59,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext","doc":"Parser context parts that can be updated without invalidating the parser cache. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L56-L56","name":"Lean.Parser.ParserModuleContext.openDecls","line":56,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.openDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.openDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">openDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">Lean.OpenDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L55-L55","name":"Lean.Parser.ParserModuleContext.currNamespace","line":55,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.currNamespace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.currNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">currNamespace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L53-L53","name":"Lean.Parser.ParserModuleContext.options","line":53,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.options","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.options\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">options</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L52-L52","name":"Lean.Parser.ParserModuleContext.env","line":52,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.env","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.env\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">env</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L51-L56","name":"Lean.Parser.ParserModuleContext","line":51,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext","doc":"Input context derived from elaboration of previous commands. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L48-L48","name":"Lean.Parser.instInhabitedInputContext","line":48,"kind":"instance","docLink":"./Lean/Parser/Types.html#Lean.Parser.instInhabitedInputContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.instInhabitedInputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">instInhabitedInputContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L47-L47","name":"Lean.Parser.InputContext.fileMap","line":47,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">fileMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L46-L46","name":"Lean.Parser.InputContext.fileName","line":46,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.fileName\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">fileName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L45-L45","name":"Lean.Parser.InputContext.input","line":45,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.input","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.input\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">input</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L44-L48","name":"Lean.Parser.InputContext","line":44,"kind":"structure","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext","doc":"Input string and related data. Recall that the `FileMap` is a helper structure for mapping\n`String.Pos` in the input string to line/column information.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L38-L39","name":"Lean.Parser.SyntaxNodeKindSet.insert","line":38,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet.insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet.insert\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxNodeKindSet</span>.<span class=\"name\">insert</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L36-L36","name":"Lean.Parser.SyntaxNodeKindSet","line":36,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxNodeKindSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L34-L34","name":"Lean.Parser.TokenTable","line":34,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenTable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L32-L32","name":"Lean.Parser.Token","line":32,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.Token","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Token\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Token</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L30-L30","name":"Lean.Parser.minPrec","line":30,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.minPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.minPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">minPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L29-L29","name":"Lean.Parser.leadPrec","line":29,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.leadPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.leadPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">leadPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L28-L28","name":"Lean.Parser.argPrec","line":28,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.argPrec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.argPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">argPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L27-L27","name":"Lean.Parser.maxPrec","line":27,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.maxPrec","doc":"Maximal (and function application) precedence.\nIn the standard lean language, no parser has precedence higher than `maxPrec`.\n\nNote that nothing prevents users from using a higher precedence, but we strongly\ndiscourage them from doing it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.maxPrec\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">maxPrec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L19-L20","name":"Lean.Parser.getNext","line":19,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.getNext","doc":"Return character after position `pos` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.getNext\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">getNext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Char\">Char</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L15-L16","name":"Lean.Parser.mkIdent","line":15,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.mkIdent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.mkIdent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkIdent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(info : <a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rawVal : <a href=\"./Init/Prelude.html#Substring\">Substring</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L12-L13","name":"Lean.Parser.mkAtom","line":12,"kind":"def","docLink":"./Lean/Parser/Types.html#Lean.Parser.mkAtom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.mkAtom\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mkAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(info : <a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.Error.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.Error.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Error.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Error</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(unexpected : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.Parser.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.Parser.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.Parser.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">Parser</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(info : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.SyntaxStack.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">SyntaxStack</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(raw : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(drop : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.ParserState.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserState.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserState</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stxStack : <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxStack\">Lean.Parser.SyntaxStack</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhsPrec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cache : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">Lean.Parser.ParserCache</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.ParserContextCore.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserContextCore</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toInputContext : <a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toParserModuleContext : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toCacheableParserContext : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tokens : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenTable\">Lean.Parser.TokenTable</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContextCore\">Lean.Parser.ParserContextCore</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.InputContext.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.InputContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">InputContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(input : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fileName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fileMap : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.InputContext\">Lean.Parser.InputContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.ParserCacheKey.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheKey</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toCacheableParserContext : <a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserName : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">Lean.Parser.ParserCacheKey</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.ParserCacheEntry.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCacheEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhsPrec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(errorMsg : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Error\">Lean.Parser.Error</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">Lean.Parser.ParserCacheEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.ParserCache.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserCache.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserCache</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(tokenCache : <a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">Lean.Parser.TokenCacheEntry</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parserCache : <span class=\"fn\"><a href=\"./Lean/Data/HashMap.html#Lean.HashMap\">Lean.HashMap</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheKey\">Lean.Parser.ParserCacheKey</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCacheEntry\">Lean.Parser.ParserCacheEntry</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserCache\">Lean.Parser.ParserCache</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.ParserInfo.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(collectTokens : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(collectKinds : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.SyntaxNodeKindSet\">Lean.Parser.SyntaxNodeKindSet</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(firstTokens : <a href=\"./Lean/Parser/Types.html#Lean.Parser.FirstTokens\">Lean.Parser.FirstTokens</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserInfo\">Lean.Parser.ParserInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.CacheableParserContext.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">CacheableParserContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(quotDepth : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(suppressInsideQuot : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(savedPos? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(forbiddenTk? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Token\">Lean.Parser.Token</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.CacheableParserContext\">Lean.Parser.CacheableParserContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.TokenCacheEntry.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">TokenCacheEntry</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stopPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(token : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.TokenCacheEntry\">Lean.Parser.TokenCacheEntry</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Types.lean#L1-L1","name":"Lean.Parser.ParserModuleContext.mk","line":1,"kind":"ctor","docLink":"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ParserModuleContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Lean/Data/Options.html#Lean.Options\">Lean.Options</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(currNamespace : <a href=\"./Init/Prelude.html#Lean.Name\">Lake.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(openDecls : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Data/OpenDecl.html#Lean.OpenDecl\">Lean.OpenDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserModuleContext\">Lean.Parser.ParserModuleContext</a></div></div>"}]}
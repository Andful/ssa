{"name":"SSA.Core.Framework","instances":[{"typeNames":["IExpr"],"name":"instReprIExpr","className":"Repr"},{"typeNames":["ICom"],"name":"instReprICom","className":"Repr"},{"typeNames":["Lets"],"name":"instReprLets","className":"Repr"},{"typeNames":["Ctxt.Var","Ctxt.ofList","Membership.mem","Sigma","Ctxt.VarSet","Finset.instMembershipFinset","Sigma.mk","ICom.vars"],"name":"instDecidableForAllVarOfListMemSigmaVarSetInstMembershipFinsetVars","className":"Decidable"},{"typeNames":["Eq","Examples.ExTy"],"name":"Examples.instDecidableEqExTy","className":"Decidable"},{"typeNames":["Examples.ExTy"],"name":"Examples.instReprExTy","className":"Repr"},{"typeNames":["Examples.ExTy"],"name":"Examples.instGoedelExTy","className":"Goedel"},{"typeNames":["Eq","Examples.ExOp"],"name":"Examples.instDecidableEqExOp","className":"Decidable"},{"typeNames":["Examples.ExOp","Examples.ExTy"],"name":"Examples.instOpSignatureExOpExTy","className":"OpSignature"},{"typeNames":["Examples.ExOp","Examples.ExTy","Examples.instGoedelExTy","Examples.instOpSignatureExOpExTy"],"name":"Examples.instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy","className":"OpDenote"},{"typeNames":["Eq","RegionExamples.ExTy"],"name":"RegionExamples.instDecidableEqExTy","className":"Decidable"},{"typeNames":["RegionExamples.ExTy"],"name":"RegionExamples.instReprExTy","className":"Repr"},{"typeNames":["RegionExamples.ExTy"],"name":"RegionExamples.instGoedelExTy","className":"Goedel"},{"typeNames":["Eq","RegionExamples.ExOp"],"name":"RegionExamples.instDecidableEqExOp","className":"Decidable"},{"typeNames":["RegionExamples.ExOp","RegionExamples.ExTy"],"name":"RegionExamples.instOpSignatureExOpExTy","className":"OpSignature"},{"typeNames":["RegionExamples.ExOp","RegionExamples.ExTy","RegionExamples.instGoedelExTy","RegionExamples.instOpSignatureExOpExTy"],"name":"RegionExamples.instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy","className":"OpDenote"}],"imports":["Init","SSA.Core.ErasedContext","SSA.Core.HVector","Mathlib.Data.List.AList","Mathlib.Data.Finset.Basic","Mathlib.Data.Fintype.Basic","Mathlib.Tactic.Linarith","Mathlib.Tactic.Ring"],"declarations":[{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1491-L1497","name":"RegionExamples.p2","line":1491,"kind":"def","docLink":"./SSA/Core/Framework.html#RegionExamples.p2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.p2\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">p2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1487-L1489","name":"RegionExamples.ex2_rhs","line":1487,"kind":"def","docLink":"./SSA/Core/Framework.html#RegionExamples.ex2_rhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.ex2_rhs\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">ex2_rhs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1480-L1485","name":"RegionExamples.ex2_lhs","line":1480,"kind":"def","docLink":"./SSA/Core/Framework.html#RegionExamples.ex2_lhs","doc":"running `f(x) = x + x` 1 times does return `x + x`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.ex2_lhs\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">ex2_lhs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1471-L1477","name":"RegionExamples.p1","line":1471,"kind":"def","docLink":"./SSA/Core/Framework.html#RegionExamples.p1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.p1\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">p1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1468-L1469","name":"RegionExamples.ex1_rhs","line":1468,"kind":"def","docLink":"./SSA/Core/Framework.html#RegionExamples.ex1_rhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.ex1_rhs\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">ex1_rhs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1461-L1466","name":"RegionExamples.ex1_lhs","line":1461,"kind":"def","docLink":"./SSA/Core/Framework.html#RegionExamples.ex1_lhs","doc":"running `f(x) = x + x` 0 times is the identity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.ex1_lhs\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">ex1_lhs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1451-L1456","name":"RegionExamples.rgn","line":1451,"kind":"def","docLink":"./SSA/Core/Framework.html#RegionExamples.rgn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.rgn\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">rgn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy\">RegionExamples.ExTy</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(input : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(body : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <span class=\"fn\">Γ</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1444-L1449","name":"RegionExamples.add","line":1444,"kind":"def","docLink":"./SSA/Core/Framework.html#RegionExamples.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.add\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy\">RegionExamples.ExTy</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <span class=\"fn\">Γ</span> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\">RegionExamples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1438-L1442","name":"RegionExamples.instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy","line":1438,"kind":"instance","docLink":"./SSA/Core/Framework.html#RegionExamples.instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy\">RegionExamples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1425-L1434","name":"RegionExamples.instOpSignatureExOpExTy","line":1425,"kind":"instance","docLink":"./SSA/Core/Framework.html#RegionExamples.instOpSignatureExOpExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.instOpSignatureExOpExTy\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">instOpSignatureExOpExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy\">RegionExamples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1423-L1423","name":"RegionExamples.instDecidableEqExOp","line":1423,"kind":"instance","docLink":"./SSA/Core/Framework.html#RegionExamples.instDecidableEqExOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.instDecidableEqExOp\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">instDecidableEqExOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1422-L1422","name":"RegionExamples.ExOp.runK","line":1422,"kind":"ctor","docLink":"./SSA/Core/Framework.html#RegionExamples.ExOp.runK","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.ExOp.runK\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">ExOp</span>.<span class=\"name\">runK</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1421-L1421","name":"RegionExamples.ExOp.add","line":1421,"kind":"ctor","docLink":"./SSA/Core/Framework.html#RegionExamples.ExOp.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.ExOp.add\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">ExOp</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\">RegionExamples.ExOp</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1420-L1423","name":"RegionExamples.ExOp","line":1420,"kind":"inductive","docLink":"./SSA/Core/Framework.html#RegionExamples.ExOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.ExOp\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">ExOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1416-L1418","name":"RegionExamples.instGoedelExTy","line":1416,"kind":"instance","docLink":"./SSA/Core/Framework.html#RegionExamples.instGoedelExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.instGoedelExTy\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">instGoedelExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy\">RegionExamples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1413-L1413","name":"RegionExamples.instReprExTy","line":1413,"kind":"instance","docLink":"./SSA/Core/Framework.html#RegionExamples.instReprExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.instReprExTy\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">instReprExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy\">RegionExamples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1413-L1413","name":"RegionExamples.instDecidableEqExTy","line":1413,"kind":"instance","docLink":"./SSA/Core/Framework.html#RegionExamples.instDecidableEqExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.instDecidableEqExTy\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">instDecidableEqExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy\">RegionExamples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1412-L1412","name":"RegionExamples.ExTy.nat","line":1412,"kind":"ctor","docLink":"./SSA/Core/Framework.html#RegionExamples.ExTy.nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.ExTy.nat\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">ExTy</span>.<span class=\"name\">nat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./SSA/Core/Framework.html#RegionExamples.ExTy\">RegionExamples.ExTy</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1411-L1413","name":"RegionExamples.ExTy","line":1411,"kind":"inductive","docLink":"./SSA/Core/Framework.html#RegionExamples.ExTy","doc":"A very simple type universe. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#RegionExamples.ExTy\"><span class=\"name\">RegionExamples</span>.<span class=\"name\">ExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1386-L1393","name":"Examples.p4","line":1386,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.p4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.p4\"><span class=\"name\">Examples</span>.<span class=\"name\">p4</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>, <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1376-L1384","name":"Examples.ex3","line":1376,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.ex3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ex3\"><span class=\"name\">Examples</span>.<span class=\"name\">ex3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1323-L1330","name":"Examples.p3","line":1323,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.p3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.p3\"><span class=\"name\">Examples</span>.<span class=\"name\">p3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>, <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1317-L1321","name":"Examples.r3","line":1317,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.r3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.r3\"><span class=\"name\">Examples</span>.<span class=\"name\">r3</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> (<span class=\"fn\">↑<span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>, <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>]</span></span>) <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1262-L1270","name":"Examples.p2","line":1262,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.p2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.p2\"><span class=\"name\">Examples</span>.<span class=\"name\">p2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>, <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1256-L1260","name":"Examples.r2","line":1256,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.r2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.r2\"><span class=\"name\">Examples</span>.<span class=\"name\">r2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> (<span class=\"fn\">↑<span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>, <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>]</span></span>) <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1247-L1253","name":"Examples.ex2'","line":1247,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.ex2'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ex2'\"><span class=\"name\">Examples</span>.<span class=\"name\">ex2'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1193-L1200","name":"Examples.p1","line":1193,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.p1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.p1\"><span class=\"name\">Examples</span>.<span class=\"name\">p1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>, <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>]</span> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1190-L1191","name":"Examples.r","line":1190,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.r","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.r\"><span class=\"name\">Examples</span>.<span class=\"name\">r</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> (<span class=\"fn\">↑<span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>, <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>]</span></span>) <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1188-L1189","name":"Examples.m","line":1188,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.m","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.m\"><span class=\"name\">Examples</span>.<span class=\"name\">m</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> (<span class=\"fn\">↑<span class=\"fn\">[<a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>, <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a>]</span></span>) <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1179-L1185","name":"Examples.ex2","line":1179,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.ex2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ex2\"><span class=\"name\">Examples</span>.<span class=\"name\">ex2</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1174-L1177","name":"Examples.ex1","line":1174,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.ex1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ex1\"><span class=\"name\">Examples</span>.<span class=\"name\">ex1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1165-L1170","name":"Examples.add","line":1165,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.add\"><span class=\"name\">Examples</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy\">Examples.ExTy</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <span class=\"fn\">Γ</span> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1158-L1163","name":"Examples.cst","line":1158,"kind":"def","docLink":"./SSA/Core/Framework.html#Examples.cst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.cst\"><span class=\"name\">Examples</span>.<span class=\"name\">cst</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy\">Examples.ExTy</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <span class=\"fn\">Γ</span> <a href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\">Examples.ExTy.nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1152-L1156","name":"Examples.instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy","line":1152,"kind":"instance","docLink":"./SSA/Core/Framework.html#Examples.instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy\"><span class=\"name\">Examples</span>.<span class=\"name\">instOpDenoteExOpExTyInstGoedelExTyInstOpSignatureExOpExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy\">Examples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1140-L1149","name":"Examples.instOpSignatureExOpExTy","line":1140,"kind":"instance","docLink":"./SSA/Core/Framework.html#Examples.instOpSignatureExOpExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.instOpSignatureExOpExTy\"><span class=\"name\">Examples</span>.<span class=\"name\">instOpSignatureExOpExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy\">Examples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1138-L1138","name":"Examples.instDecidableEqExOp","line":1138,"kind":"instance","docLink":"./SSA/Core/Framework.html#Examples.instDecidableEqExOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.instDecidableEqExOp\"><span class=\"name\">Examples</span>.<span class=\"name\">instDecidableEqExOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1137-L1137","name":"Examples.ExOp.cst","line":1137,"kind":"ctor","docLink":"./SSA/Core/Framework.html#Examples.ExOp.cst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ExOp.cst\"><span class=\"name\">Examples</span>.<span class=\"name\">ExOp</span>.<span class=\"name\">cst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1136-L1136","name":"Examples.ExOp.beq","line":1136,"kind":"ctor","docLink":"./SSA/Core/Framework.html#Examples.ExOp.beq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ExOp.beq\"><span class=\"name\">Examples</span>.<span class=\"name\">ExOp</span>.<span class=\"name\">beq</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1135-L1135","name":"Examples.ExOp.add","line":1135,"kind":"ctor","docLink":"./SSA/Core/Framework.html#Examples.ExOp.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ExOp.add\"><span class=\"name\">Examples</span>.<span class=\"name\">ExOp</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./SSA/Core/Framework.html#Examples.ExOp\">Examples.ExOp</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1134-L1138","name":"Examples.ExOp","line":1134,"kind":"inductive","docLink":"./SSA/Core/Framework.html#Examples.ExOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ExOp\"><span class=\"name\">Examples</span>.<span class=\"name\">ExOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1129-L1132","name":"Examples.instGoedelExTy","line":1129,"kind":"instance","docLink":"./SSA/Core/Framework.html#Examples.instGoedelExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.instGoedelExTy\"><span class=\"name\">Examples</span>.<span class=\"name\">instGoedelExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy\">Examples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1126-L1126","name":"Examples.instReprExTy","line":1126,"kind":"instance","docLink":"./SSA/Core/Framework.html#Examples.instReprExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.instReprExTy\"><span class=\"name\">Examples</span>.<span class=\"name\">instReprExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy\">Examples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1126-L1126","name":"Examples.instDecidableEqExTy","line":1126,"kind":"instance","docLink":"./SSA/Core/Framework.html#Examples.instDecidableEqExTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.instDecidableEqExTy\"><span class=\"name\">Examples</span>.<span class=\"name\">instDecidableEqExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./SSA/Core/Framework.html#Examples.ExTy\">Examples.ExTy</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1125-L1125","name":"Examples.ExTy.bool","line":1125,"kind":"ctor","docLink":"./SSA/Core/Framework.html#Examples.ExTy.bool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ExTy.bool\"><span class=\"name\">Examples</span>.<span class=\"name\">ExTy</span>.<span class=\"name\">bool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./SSA/Core/Framework.html#Examples.ExTy\">Examples.ExTy</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1124-L1124","name":"Examples.ExTy.nat","line":1124,"kind":"ctor","docLink":"./SSA/Core/Framework.html#Examples.ExTy.nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ExTy.nat\"><span class=\"name\">Examples</span>.<span class=\"name\">ExTy</span>.<span class=\"name\">nat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./SSA/Core/Framework.html#Examples.ExTy\">Examples.ExTy</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1123-L1126","name":"Examples.ExTy","line":1123,"kind":"inductive","docLink":"./SSA/Core/Framework.html#Examples.ExTy","doc":"A very simple type universe. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Examples.ExTy\"><span class=\"name\">Examples</span>.<span class=\"name\">ExTy</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1110-L1110","name":"tacticSimp_peephole","line":1110,"kind":"def","docLink":"./SSA/Core/Framework.html#tacticSimp_peephole","doc":"`simp_peephole` with no extra user defined theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#tacticSimp_peephole\"><span class=\"name\">tacticSimp_peephole</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1079-L1107","name":"«tacticSimp_peephole[_,,]»","line":1079,"kind":"def","docLink":"./SSA/Core/Framework.html#«tacticSimp_peephole[_,,]»","doc":"Simplify evaluation junk, leaving behind Lean level proposition to be proven.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#«tacticSimp_peephole[_,,]»\"><span class=\"name\">«tacticSimp_peephole[_,,]»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1060-L1071","name":"denote_rewritePeepholeAt","line":1060,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_rewritePeepholeAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_rewritePeepholeAt\"><span class=\"name\">denote_rewritePeepholeAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">t</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₂ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(pr : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#rewritePeepholeAt\">rewritePeepholeAt</a> <span class=\"fn\">pr</span> <span class=\"fn\">pos</span> <span class=\"fn\">target</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">target</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1051-L1058","name":"rewritePeepholeAt","line":1051,"kind":"def","docLink":"./SSA/Core/Framework.html#rewritePeepholeAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#rewritePeepholeAt\"><span class=\"name\">rewritePeepholeAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₂ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(pr : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1035-L1049","name":"instDecidableForAllVarOfListMemSigmaVarSetInstMembershipFinsetVars","line":1035,"kind":"instance","docLink":"./SSA/Core/Framework.html#instDecidableForAllVarOfListMemSigmaVarSetInstMembershipFinsetVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#instDecidableForAllVarOfListMemSigmaVarSetInstMembershipFinsetVars\"><span class=\"name\">instDecidableForAllVarOfListMemSigmaVarSetInstMembershipFinsetVars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t' : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lhs : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> (<span class=\"fn\">↑<span class=\"fn\">Γ</span></span>) <span class=\"fn\">t'</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> (<span class=\"fn\">↑<span class=\"fn\">Γ</span></span>) <span class=\"fn\">t</span></span>), <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.vars\">ICom.vars</a> <span class=\"fn\">lhs</span></span></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1033-L1033","name":"PeepholeRewrite.correct","line":1033,"kind":"def","docLink":"./SSA/Core/Framework.html#PeepholeRewrite.correct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#PeepholeRewrite.correct\"><span class=\"name\">PeepholeRewrite</span>.<span class=\"name\">correct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\"><span class=\"fn\">self</span>.lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\"><span class=\"fn\">self</span>.rhs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1032-L1032","name":"PeepholeRewrite.rhs","line":1032,"kind":"def","docLink":"./SSA/Core/Framework.html#PeepholeRewrite.rhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#PeepholeRewrite.rhs\"><span class=\"name\">PeepholeRewrite</span>.<span class=\"name\">rhs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> (<span class=\"fn\">↑<span class=\"fn\">Γ</span></span>) <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1031-L1031","name":"PeepholeRewrite.lhs","line":1031,"kind":"def","docLink":"./SSA/Core/Framework.html#PeepholeRewrite.lhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#PeepholeRewrite.lhs\"><span class=\"name\">PeepholeRewrite</span>.<span class=\"name\">lhs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> (<span class=\"fn\">↑<span class=\"fn\">Γ</span></span>) <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1030-L1030","name":"PeepholeRewrite.mk","line":1030,"kind":"ctor","docLink":"./SSA/Core/Framework.html#PeepholeRewrite.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#PeepholeRewrite.mk\"><span class=\"name\">PeepholeRewrite</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lhs : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> (<span class=\"fn\">↑<span class=\"fn\">Γ</span></span>) <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rhs : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> (<span class=\"fn\">↑<span class=\"fn\">Γ</span></span>) <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(correct : <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">rhs</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#PeepholeRewrite\">PeepholeRewrite</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L1030-L1033","name":"PeepholeRewrite","line":1030,"kind":"structure","docLink":"./SSA/Core/Framework.html#PeepholeRewrite","doc":"Rewrites are indexed with a concrete list of types, rather than an (erased) context, so that\nthe required variable checks become decidable\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#PeepholeRewrite\"><span class=\"name\">PeepholeRewrite</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Op : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Γ : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">Ty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L994-L1023","name":"denote_rewriteAt","line":994,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_rewriteAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_rewriteAt\"><span class=\"name\">denote_rewriteAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">t</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₁ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₂ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lhs : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rhs : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hlhs : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t</span></span>), <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.vars\">ICom.vars</a> <span class=\"fn\">lhs</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">lhs</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">rhs</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rew : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hrew : <span class=\"fn\"><span class=\"fn\">rew</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#rewriteAt\">rewriteAt</a> <span class=\"fn\">lhs</span> <span class=\"fn\">rhs</span> <span class=\"fn\">hlhs</span> <span class=\"fn\">pos</span> <span class=\"fn\">target</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">rew</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">target</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L981-L992","name":"rewriteAt","line":981,"kind":"def","docLink":"./SSA/Core/Framework.html#rewriteAt","doc":"`rewriteAt lhs rhs hlhs pos target`, searches for `lhs` at position `pos` of\n`target`. If it can match the variables, it inserts `rhs` into the program\nwith the correct assignment of variables, and then replaces occurences\nof the variable at position `pos` in `target` with the output of `rhs`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#rewriteAt\"><span class=\"name\">rewriteAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₁ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₂ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lhs : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rhs : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hlhs : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t</span></span>), <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.vars\">ICom.vars</a> <span class=\"fn\">lhs</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L965-L969","name":"denote_splitProgramAt","line":965,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_splitProgramAt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_splitProgramAt\"><span class=\"name\">denote_splitProgramAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{pos : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{prog : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{res : <span class=\"fn\">(Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>) × <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(t' : <span class=\"fn\">Ty</span>) × <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t'</span></span></span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hres : <span class=\"fn\"><span class=\"fn\">res</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#splitProgramAt\">splitProgramAt</a> <span class=\"fn\">pos</span> <span class=\"fn\">prog</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">res</span>.snd</span>.snd</span>.fst</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">res</span>.snd</span>.fst</span> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">prog</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L961-L963","name":"splitProgramAt","line":961,"kind":"def","docLink":"./SSA/Core/Framework.html#splitProgramAt","doc":"`splitProgramAt pos prog`, will return a `Lets` ending\nwith the `pos`th variable in `prog`, and an `ICom` starting with the next variable.\nIt also returns, the type of this variable and the variable itself as an element\nof the output `Ctxt` of the returned `Lets`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#splitProgramAt\"><span class=\"name\">splitProgramAt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prog : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">(Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>) × <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(t' : <span class=\"fn\">Ty</span>) × <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t'</span></span></span></span></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L934-L955","name":"denote_splitProgramAtAux","line":934,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_splitProgramAtAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_splitProgramAtAux\"><span class=\"name\">denote_splitProgramAtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{pos : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{prog : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{res : <span class=\"fn\">(Γ₃ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>) × <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₃</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₃</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(t' : <span class=\"fn\">Ty</span>) × <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₃</span> <span class=\"fn\">t'</span></span></span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hres : <span class=\"fn\"><span class=\"fn\">res</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#splitProgramAtAux\">splitProgramAtAux</a> <span class=\"fn\">pos</span> <span class=\"fn\">lets</span> <span class=\"fn\">prog</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">res</span>.snd</span>.snd</span>.fst</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">res</span>.snd</span>.fst</span> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">prog</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L926-L932","name":"splitProgramAtAux","line":926,"kind":"def","docLink":"./SSA/Core/Framework.html#splitProgramAtAux","doc":"`splitProgramAtAux pos lets prog`, will return a `Lets` ending\nwith the `pos`th variable in `prog`, and an `ICom` starting with the next variable.\nIt also returns, the type of this variable and the variable itself as an element\nof the output `Ctxt` of the returned `Lets`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#splitProgramAtAux\"><span class=\"name\">splitProgramAtAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prog : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">(Γ₃ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>) × <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₃</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₃</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">(t' : <span class=\"fn\">Ty</span>) × <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₃</span> <span class=\"fn\">t'</span></span></span></span></span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L896-L920","name":"denote_matchVarMap","line":896,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_matchVarMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_matchVarMap\"><span class=\"name\">denote_matchVarMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">t</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hvars : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">t</span></span>), <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.vars\">Lets.vars</a> <span class=\"fn\">matchLets</span> <span class=\"fn\">w</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{map : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hmap : <span class=\"fn\"><span class=\"fn\">map</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVarMap\">matchVarMap</a> <span class=\"fn\">lets</span> <span class=\"fn\">v</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">w</span> <span class=\"fn\">hvars</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ_in</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">matchLets</span> (<span class=\"fn\">fun <span class=\"fn\">t'</span> <span class=\"fn\">v'</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s₁</span> (<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">t'</span> <span class=\"fn\">v'</span></span>)</span></span>) <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s₁</span> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L882-L894","name":"matchVarMap","line":882,"kind":"def","docLink":"./SSA/Core/Framework.html#matchVarMap","doc":"A version of `matchVar` that returns a `Hom` of `Ctxt`s instead of the `AList`,\nprovided every variable in the context appears as a free variable in `matchExpr`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#matchVarMap\"><span class=\"name\">matchVarMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hvars : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) (<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">t</span></span>), <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.vars\">Lets.vars</a> <span class=\"fn\">matchLets</span> <span class=\"fn\">w</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L831-L873","name":"mem_matchVar","line":831,"kind":"theorem","docLink":"./SSA/Core/Framework.html#mem_matchVar","doc":"All variables containing in `matchExpr` are assigned by `matchVar`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#mem_matchVar\"><span class=\"name\">mem_matchVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ma : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hvarMap : <span class=\"fn\"><span class=\"fn\">varMap</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar\">matchVar</a> <span class=\"fn\">lets</span> <span class=\"fn\">v</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">w</span> <span class=\"fn\">ma</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t' : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v' : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">t'</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v'</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.vars\">Lets.vars</a> <span class=\"fn\">matchLets</span> <span class=\"fn\">w</span></span></span> → <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v'</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">varMap</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L806-L828","name":"mem_matchVar_matchArg","line":806,"kind":"theorem","docLink":"./SSA/Core/Framework.html#mem_matchVar_matchArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#mem_matchVar_matchArg\"><span class=\"name\">mem_matchVar_matchArg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{argsₗ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span></span>) <span class=\"fn\">l</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{argsᵣ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span></span>) <span class=\"fn\">l</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ma : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hvarMap : <span class=\"fn\"><span class=\"fn\">varMap</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar.matchArg\">matchVar.matchArg</a> <span class=\"fn\">Δ_out</span> (<span class=\"fn\">fun <span class=\"fn\">t</span> <span class=\"fn\">vₗ</span> <span class=\"fn\">vᵣ</span> <span class=\"fn\">ma</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar\">matchVar</a> <span class=\"fn\">lets</span> <span class=\"fn\">vₗ</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">vᵣ</span> <span class=\"fn\">ma</span></span></span>) <span class=\"fn\">argsₗ</span> <span class=\"fn\">argsᵣ</span> <span class=\"fn\">ma</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t' : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v' : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">t'</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v'</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.biUnion\">Finset.biUnion</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#HVector.vars\">HVector.vars</a> <span class=\"fn\">argsᵣ</span></span>) <span class=\"fn\">fun <span class=\"fn\">v</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.vars\">Lets.vars</a> <span class=\"fn\">matchLets</span> <span class=\"fn\"><span class=\"fn\">v</span>.snd</span></span></span></span></span>) →\n  <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v'</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">varMap</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L798-L798","name":"zero_eq_zero","line":798,"kind":"theorem","docLink":"./SSA/Core/Framework.html#zero_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#zero_eq_zero\"><span class=\"name\">zero_eq_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Zero.zero</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L794-L795","name":"lt_one_add_add","line":794,"kind":"theorem","docLink":"./SSA/Core/Framework.html#lt_one_add_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#lt_one_add_add\"><span class=\"name\">lt_one_add_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L780-L792","name":"denote_matchVar","line":780,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_matchVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_matchVar\"><span class=\"name\">denote_matchVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">t</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ_in</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ma : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">varMap</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar\">matchVar</a> <span class=\"fn\">lets</span> <span class=\"fn\">v</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">w</span> <span class=\"fn\">ma</span></span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">matchLets</span>\n      (<span class=\"fn\">fun <span class=\"fn\">t'</span> <span class=\"fn\">v'</span> =&gt\n        <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/List/AList.html#AList.lookup\">AList.lookup</a> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v'</span> }</span> <span class=\"fn\">varMap</span></span> with\n        | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">v'</span></span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s₁</span> <span class=\"fn\">v'</span></span>\n        | <span class=\"fn\">none</span> =&gt <span class=\"fn\">default</span></span></span>)\n      <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s₁</span> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L716-L778","name":"denote_matchVar_of_subset","line":716,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_matchVar_of_subset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_matchVar_of_subset\"><span class=\"name\">denote_matchVar_of_subset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">t</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap₁ : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap₂ : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ_in</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ma : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_sub : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">varMap₁</span>.entries</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">varMap₂</span>.entries</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_matchVar : <span class=\"fn\"><span class=\"fn\">varMap₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar\">matchVar</a> <span class=\"fn\">lets</span> <span class=\"fn\">v</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">w</span> <span class=\"fn\">ma</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">matchLets</span>\n    (<span class=\"fn\">fun <span class=\"fn\">t'</span> <span class=\"fn\">v'</span> =&gt\n      <span class=\"fn\">match <span class=\"fn\"><a href=\"./Mathlib/Data/List/AList.html#AList.lookup\">AList.lookup</a> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t'</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v'</span> }</span> <span class=\"fn\">varMap₂</span></span> with\n      | <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">v'</span></span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s₁</span> <span class=\"fn\">v'</span></span>\n      | <span class=\"fn\">none</span> =&gt <span class=\"fn\">default</span></span></span>)\n    <span class=\"fn\">w</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s₁</span> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L682-L714","name":"denote_matchVar_matchArg","line":682,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_matchVar_matchArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_matchVar_matchArg\"><span class=\"name\">denote_matchVar_matchArg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">t</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{args₁ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span></span>) <span class=\"fn\">l</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{args₂ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span></span>) <span class=\"fn\">l</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ma : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap₁ : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap₂ : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_sub : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">varMap₁</span>.entries</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">varMap₂</span>.entries</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₁ : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">t</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f₂ : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">t</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) (<span class=\"fn\">v₁</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>) (<span class=\"fn\">v₂</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>) (<span class=\"fn\">ma </span>ma' : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ma</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar\">matchVar</a> <span class=\"fn\">lets</span> <span class=\"fn\">v₁</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">v₂</span> <span class=\"fn\">ma'</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ma</span>.entries</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">varMap₂</span>.entries</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f₂</span> <span class=\"fn\">t</span> <span class=\"fn\">v₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f₁</span> <span class=\"fn\">t</span> <span class=\"fn\">v₁</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hmatchVar : <span class=\"fn\">∀ (<span class=\"fn\">vMap</span> : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>) (<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) (<span class=\"fn\">vₗ</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>) (<span class=\"fn\">vᵣ</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>) (<span class=\"fn\">ma</span> : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">vMap</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar\">matchVar</a> <span class=\"fn\">lets</span> <span class=\"fn\">vₗ</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">vᵣ</span> <span class=\"fn\">ma</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ma</span>.entries</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">vMap</span>.entries</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hvarMap : <span class=\"fn\"><span class=\"fn\">varMap₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar.matchArg\">matchVar.matchArg</a> <span class=\"fn\">Δ_out</span> (<span class=\"fn\">fun <span class=\"fn\">t</span> <span class=\"fn\">vₗ</span> <span class=\"fn\">vᵣ</span> <span class=\"fn\">ma</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar\">matchVar</a> <span class=\"fn\">lets</span> <span class=\"fn\">vₗ</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">vᵣ</span> <span class=\"fn\">ma</span></span></span>) <span class=\"fn\">args₁</span> <span class=\"fn\">args₂</span> <span class=\"fn\">ma</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector.map\">HVector.map</a> <span class=\"fn\">f₂</span> <span class=\"fn\">args₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector.map\">HVector.map</a> <span class=\"fn\">f₁</span> <span class=\"fn\">args₁</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L667-L677","name":"subset_entries_matchVar_matchArg","line":667,"kind":"theorem","docLink":"./SSA/Core/Framework.html#subset_entries_matchVar_matchArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#subset_entries_matchVar_matchArg\"><span class=\"name\">subset_entries_matchVar_matchArg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{argsₗ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span></span>) <span class=\"fn\">l</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{argsᵣ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span></span>) <span class=\"fn\">l</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ma : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hvarMap : <span class=\"fn\"><span class=\"fn\">varMap</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar.matchArg\">matchVar.matchArg</a> <span class=\"fn\">Δ_out</span> (<span class=\"fn\">fun <span class=\"fn\">t</span> <span class=\"fn\">vₗ</span> <span class=\"fn\">vᵣ</span> <span class=\"fn\">ma</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar\">matchVar</a> <span class=\"fn\">lets</span> <span class=\"fn\">vₗ</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">vᵣ</span> <span class=\"fn\">ma</span></span></span>) <span class=\"fn\">argsₗ</span> <span class=\"fn\">argsᵣ</span> <span class=\"fn\">ma</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ma</span>.entries</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">varMap</span>.entries</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L629-L665","name":"subset_entries_matchVar","line":629,"kind":"theorem","docLink":"./SSA/Core/Framework.html#subset_entries_matchVar","doc":"The output mapping of `matchVar` extends the input mapping when it succeeds. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#subset_entries_matchVar\"><span class=\"name\">subset_entries_matchVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ma : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hvarMap : <span class=\"fn\"><span class=\"fn\">varMap</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar\">matchVar</a> <span class=\"fn\">lets</span> <span class=\"fn\">v</span> <span class=\"fn\">matchLets</span> <span class=\"fn\">w</span> <span class=\"fn\">ma</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ma</span>.entries</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">varMap</span>.entries</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L606-L626","name":"subset_entries_matchVar_matchArg_aux","line":606,"kind":"theorem","docLink":"./SSA/Core/Framework.html#subset_entries_matchVar_matchArg_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#subset_entries_matchVar_matchArg_aux\"><span class=\"name\">subset_entries_matchVar_matchArg_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{matchVar' : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{argsₗ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span></span>) <span class=\"fn\">l</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{argsᵣ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span></span>) <span class=\"fn\">l</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ma : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{varMap : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hmatchVar : <span class=\"fn\">∀ (<span class=\"fn\">vMap</span> : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>) (<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) (<span class=\"fn\">vₗ</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>) (<span class=\"fn\">vᵣ</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>) (<span class=\"fn\">ma</span> : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">vMap</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">matchVar'</span> <span class=\"fn\">t</span> <span class=\"fn\">vₗ</span> <span class=\"fn\">vᵣ</span> <span class=\"fn\">ma</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ma</span>.entries</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">vMap</span>.entries</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hvarMap : <span class=\"fn\"><span class=\"fn\">varMap</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#matchVar.matchArg\">matchVar.matchArg</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">matchVar'</span> <span class=\"fn\">argsₗ</span> <span class=\"fn\">argsᵣ</span> <span class=\"fn\">ma</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ma</span>.entries</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">varMap</span>.entries</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L589-L604","name":"AList.mem_entries_of_mem","line":589,"kind":"theorem","docLink":"./SSA/Core/Framework.html#AList.mem_entries_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#AList.mem_entries_of_mem\"><span class=\"name\">AList</span>.<span class=\"name\">mem_entries_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/List/AList.html#AList\">AList</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span> → <span class=\"fn\">∃ <span class=\"fn\">v</span>, <span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">k</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.entries</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L578-L587","name":"AList.mem_of_mem_entries","line":578,"kind":"theorem","docLink":"./SSA/Core/Framework.html#AList.mem_of_mem_entries","doc":"For mathlib "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#AList.mem_of_mem_entries\"><span class=\"name\">AList</span>.<span class=\"name\">mem_of_mem_entries</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Data/List/AList.html#AList\">AList</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">k</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">k</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v</span> }</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><span class=\"fn\">s</span>.entries</span></span> → <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L557-L563","name":"matchVar.matchArg","line":557,"kind":"def","docLink":"./SSA/Core/Framework.html#matchVar.matchArg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#matchVar.matchArg\"><span class=\"name\">matchVar</span>.<span class=\"name\">matchArg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(matchVar' : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_Tₗ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span></span>) <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_Tᵣ : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span></span>) <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L541-L573","name":"matchVar","line":541,"kind":"def","docLink":"./SSA/Core/Framework.html#matchVar","doc":"Given two sequences of lets, `lets` and `matchExpr`,\nand variables that indicate an expression, of the same type, in each sequence,\nattempt to assign free variables in `matchExpr` to variables (free or bound) in `lets`, such that\nthe original two variables are semantically equivalent.\nIf this succeeds, return the mapping.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#matchVar\"><span class=\"name\">matchVar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(matchLets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Δ_out</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(w : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Δ_out</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ma : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>) <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Mapping\">Mapping</a> <span class=\"fn\">Δ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L530-L531","name":"ICom.vars","line":530,"kind":"def","docLink":"./SSA/Core/Framework.html#ICom.vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.vars\"><span class=\"name\">ICom</span>.<span class=\"name\">vars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.VarSet\">Ctxt.VarSet</a> <span class=\"fn\">Γ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L503-L528","name":"Lets.denote_eq_of_eq_on_vars","line":503,"kind":"theorem","docLink":"./SSA/Core/Framework.html#Lets.denote_eq_of_eq_on_vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.denote_eq_of_eq_on_vars\"><span class=\"name\">Lets</span>.<span class=\"name\">denote_eq_of_eq_on_vars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ_in</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ_in</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">w</span> : <span class=\"fn\">(t : <span class=\"fn\">Ty</span>) × <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_in</span> <span class=\"fn\">t</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.vars\">Lets.vars</a> <span class=\"fn\">lets</span> <span class=\"fn\">v</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <span class=\"fn\"><span class=\"fn\">w</span>.fst</span> <span class=\"fn\"><span class=\"fn\">w</span>.snd</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s₂</span> <span class=\"fn\"><span class=\"fn\">w</span>.fst</span> <span class=\"fn\"><span class=\"fn\">w</span>.snd</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s₁</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s₂</span> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L487-L501","name":"HVector.map_eq_of_eq_on_vars","line":487,"kind":"theorem","docLink":"./SSA/Core/Framework.html#HVector.map_eq_of_eq_on_vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#HVector.map_eq_of_eq_on_vars\"><span class=\"name\">HVector</span>.<span class=\"name\">map_eq_of_eq_on_vars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><span class=\"fn\">Ty</span> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{T : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span></span>) <span class=\"fn\">l</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">t</span></span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\">(<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\">A</span> <span class=\"fn\">t</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">(t : <span class=\"fn\">Ty</span>) × <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#HVector.vars\">HVector.vars</a> <span class=\"fn\">T</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <span class=\"fn\"><span class=\"fn\">v</span>.fst</span> <span class=\"fn\"><span class=\"fn\">v</span>.snd</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s₂</span> <span class=\"fn\"><span class=\"fn\">v</span>.fst</span> <span class=\"fn\"><span class=\"fn\">v</span>.snd</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector.map\">HVector.map</a> <span class=\"fn\">s₁</span> <span class=\"fn\">T</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector.map\">HVector.map</a> <span class=\"fn\">s₂</span> <span class=\"fn\">T</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L479-L485","name":"Lets.vars","line":479,"kind":"def","docLink":"./SSA/Core/Framework.html#Lets.vars","doc":"The free variables of `lets` that are (transitively) referred to by some variable `v` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.vars\"><span class=\"name\">Lets</span>.<span class=\"name\">vars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.VarSet\">Ctxt.VarSet</a> <span class=\"fn\">Γ_in</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L462-L476","name":"HVector.vars_cons","line":462,"kind":"theorem","docLink":"./SSA/Core/Framework.html#HVector.vars_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#HVector.vars_cons\"><span class=\"name\">HVector</span>.<span class=\"name\">vars_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span></span>) <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#HVector.vars\">HVector.vars</a> (<span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector.cons\">HVector.cons</a> <span class=\"fn\">v</span> <span class=\"fn\">T</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Classes/SetNotation.html#Insert.insert\">insert</a> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">t</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">v</span> }</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#HVector.vars\">HVector.vars</a> <span class=\"fn\">T</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L457-L459","name":"HVector.vars_nil","line":457,"kind":"theorem","docLink":"./SSA/Core/Framework.html#HVector.vars_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#HVector.vars_nil\"><span class=\"name\">HVector</span>.<span class=\"name\">vars_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#HVector.vars\">HVector.vars</a> <span class=\"fn\">HVector.nil</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L452-L454","name":"HVector.vars","line":452,"kind":"def","docLink":"./SSA/Core/Framework.html#HVector.vars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#HVector.vars\"><span class=\"name\">HVector</span>.<span class=\"name\">vars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span></span>) <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.VarSet\">Ctxt.VarSet</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L448-L450","name":"HVector.toVarSet","line":448,"kind":"def","docLink":"./SSA/Core/Framework.html#HVector.toVarSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#HVector.toVarSet\"><span class=\"name\">HVector</span>.<span class=\"name\">toVarSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span></span>) <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.VarSet\">Ctxt.VarSet</a> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L445-L446","name":"Mapping","line":445,"kind":"def","docLink":"./SSA/Core/Framework.html#Mapping","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Mapping\"><span class=\"name\">Mapping</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Δ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L430-L437","name":"Lets.denote_getIExpr","line":430,"kind":"theorem","docLink":"./SSA/Core/Framework.html#Lets.denote_getIExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.denote_getIExpr\"><span class=\"name\">Lets</span>.<span class=\"name\">denote_getIExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(he : <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.getIExpr\">Lets.getIExpr</a> <span class=\"fn\">lets</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">e</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.denote\">IExpr.denote</a> <span class=\"fn\">e</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s</span> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L424-L428","name":"Lets.getIExpr","line":424,"kind":"def","docLink":"./SSA/Core/Framework.html#Lets.getIExpr","doc":"Get the `IExpr` that a var `v` is assigned to in a sequence of `Lets`.\nThe variables are adjusted so that they are variables in the output context of a lets,\nnot the local context where the variable appears. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.getIExpr\"><span class=\"name\">Lets</span>.<span class=\"name\">getIExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L399-L418","name":"Lets.denote_getIExprAux","line":399,"kind":"theorem","docLink":"./SSA/Core/Framework.html#Lets.denote_getIExprAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.denote_getIExprAux\"><span class=\"name\">Lets</span>.<span class=\"name\">denote_getIExprAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(he : <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.getIExprAux\">Lets.getIExprAux</a> <span class=\"fn\">lets</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">Δ</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">e</span> }</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.denote\">IExpr.denote</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.changeVars\">IExpr.changeVars</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Diff.toHom\">Ctxt.Diff.toHom</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.getIExprAuxDiff\">Lets.getIExprAuxDiff</a> <span class=\"fn\">he</span></span>)</span>) <span class=\"fn\">e</span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s</span> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L381-L397","name":"Lets.getIExprAuxDiff","line":381,"kind":"def","docLink":"./SSA/Core/Framework.html#Lets.getIExprAuxDiff","doc":"If `getIExprAux` succeeds,\nthen the orignal context `Γ₁` is a prefix of the local context `Δ`, and\ntheir difference is exactly the value of the requested variable index plus 1\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.getIExprAuxDiff\"><span class=\"name\">Lets</span>.<span class=\"name\">getIExprAuxDiff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.getIExprAux\">Lets.getIExprAux</a> <span class=\"fn\">lets</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">{ <span class=\"fn\">fst</span> := <span class=\"fn\">Δ</span>, <span class=\"fn\">snd</span> := <span class=\"fn\">e</span> }</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Diff\">Ctxt.Diff</a> <span class=\"fn\">Δ</span> <span class=\"fn\">Γ₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L369-L375","name":"Lets.getIExprAux","line":369,"kind":"def","docLink":"./SSA/Core/Framework.html#Lets.getIExprAux","doc":"Get the `IExpr` that a var `v` is assigned to in a sequence of `Lets`,\nwithout adjusting variables\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.getIExprAux\"><span class=\"name\">Lets</span>.<span class=\"name\">getIExprAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\">(Δ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>) × <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ</span> <span class=\"fn\">t</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L362-L364","name":"ICom.denote_toLets","line":362,"kind":"theorem","docLink":"./SSA/Core/Framework.html#ICom.denote_toLets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.denote_toLets\"><span class=\"name\">ICom</span>.<span class=\"name\">denote_toLets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(com : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.toLets\">ICom.toLets</a> <span class=\"fn\">com</span></span>).lets</span> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.toLets\">ICom.toLets</a> <span class=\"fn\">com</span></span>).ret</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">com</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L349-L359","name":"ICom.denote_toLets_go","line":349,"kind":"theorem","docLink":"./SSA/Core/Framework.html#ICom.denote_toLets_go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.denote_toLets_go\"><span class=\"name\">ICom</span>.<span class=\"name\">denote_toLets_go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(com : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ_in</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.toLets.go\">ICom.toLets.go</a> <span class=\"fn\">lets</span> <span class=\"fn\">com</span></span>).lets</span> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.toLets.go\">ICom.toLets.go</a> <span class=\"fn\">lets</span> <span class=\"fn\">com</span></span>).ret</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">com</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L344-L346","name":"ICom.toLets.go","line":344,"kind":"def","docLink":"./SSA/Core/Framework.html#ICom.toLets.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.toLets.go\"><span class=\"name\">ICom</span>.<span class=\"name\">toLets</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ_out</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#FlatICom\">FlatICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L341-L346","name":"ICom.toLets","line":341,"kind":"def","docLink":"./SSA/Core/Framework.html#ICom.toLets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.toLets\"><span class=\"name\">ICom</span>.<span class=\"name\">toLets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#FlatICom\">FlatICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L339-L339","name":"FlatICom.ret","line":339,"kind":"def","docLink":"./SSA/Core/Framework.html#FlatICom.ret","doc":"The return variable "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#FlatICom.ret\"><span class=\"name\">FlatICom</span>.<span class=\"name\">ret</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#FlatICom\">FlatICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\"><span class=\"fn\">self</span>.Γ_out</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L337-L337","name":"FlatICom.lets","line":337,"kind":"def","docLink":"./SSA/Core/Framework.html#FlatICom.lets","doc":"The let bindings of the original program "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#FlatICom.lets\"><span class=\"name\">FlatICom</span>.<span class=\"name\">lets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#FlatICom\">FlatICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\"><span class=\"fn\">self</span>.Γ_out</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L335-L335","name":"FlatICom.Γ_out","line":335,"kind":"def","docLink":"./SSA/Core/Framework.html#FlatICom.Γ_out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#FlatICom.Γ_out\"><span class=\"name\">FlatICom</span>.<span class=\"name\">Γ_out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#FlatICom\">FlatICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L334-L334","name":"FlatICom.mk","line":334,"kind":"ctor","docLink":"./SSA/Core/Framework.html#FlatICom.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#FlatICom.mk\"><span class=\"name\">FlatICom</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ_out</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ret : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#FlatICom\">FlatICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L334-L339","name":"FlatICom","line":334,"kind":"structure","docLink":"./SSA/Core/Framework.html#FlatICom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#FlatICom\"><span class=\"name\">FlatICom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Op : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\">Ty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L306-L332","name":"denote_addProgramInMiddle","line":306,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_addProgramInMiddle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_addProgramInMiddle\"><span class=\"name\">denote_addProgramInMiddle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₁ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₂ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₃ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Γ₃</span> <span class=\"fn\">Γ₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rhs : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₃</span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inputProg : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramInMiddle\">addProgramInMiddle</a> <span class=\"fn\">v</span> <span class=\"fn\">map</span> <span class=\"fn\">lets</span> <span class=\"fn\">rhs</span> <span class=\"fn\">inputProg</span></span>) <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">inputProg</span> <span class=\"fn\">fun <span class=\"fn\">t'</span> <span class=\"fn\">v'</span> =&gt\n    <span class=\"fn\">let s' := <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">s</span></span>;\n    <span class=\"fn\">if h : <span class=\"fn\">∃ <span class=\"fn\">h</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span> ▸ <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v'</span></span></span> then <span class=\"fn\"><span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">t₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">t'</span></span>)</span> ▸ <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">rhs</span> <span class=\"fn\">fun <span class=\"fn\">t'</span> <span class=\"fn\">v'</span> =&gt <span class=\"fn\"><span class=\"fn\">s'</span> <span class=\"fn\">t'</span> (<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">t'</span> <span class=\"fn\">v'</span></span>)</span></span></span></span> else <span class=\"fn\"><span class=\"fn\">s'</span> <span class=\"fn\">t'</span> <span class=\"fn\">v'</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L299-L304","name":"addProgramInMiddle","line":299,"kind":"def","docLink":"./SSA/Core/Framework.html#addProgramInMiddle","doc":"`addProgramInMiddle v map lets rhs inputProg` appends the programs\n`lets`, `rhs` and `inputProg`, while reassigning `v`, a free variable in\n`inputProg`, to the output of `rhs`. It also assigns all free variables\nin `rhs` to variables available at the end of `lets` using `map`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#addProgramInMiddle\"><span class=\"name\">addProgramInMiddle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₁ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₂ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₃ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(map : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Γ₃</span> <span class=\"fn\">Γ₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rhs : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₃</span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inputProg : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L281-L293","name":"denote_addLetsAtTop","line":281,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_addLetsAtTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_addLetsAtTop\"><span class=\"name\">denote_addLetsAtTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₂ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inputProg : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addLetsAtTop\">addLetsAtTop</a> <span class=\"fn\">lets</span> <span class=\"fn\">inputProg</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">inputProg</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L276-L279","name":"addLetsAtTop","line":276,"kind":"def","docLink":"./SSA/Core/Framework.html#addLetsAtTop","doc":"Add some `Lets` to the beginning of a program "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#addLetsAtTop\"><span class=\"name\">addLetsAtTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t₂ : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(inputProg : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">t₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L257-L273","name":"denote_addProgramToLets_var","line":257,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_addProgramToLets_var","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_addProgramToLets_var\"><span class=\"name\">denote_addProgramToLets_var</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{map : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Δ</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{com : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ll : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ_in</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets\">addProgramToLets</a> <span class=\"fn\">lets</span> <span class=\"fn\">map</span> <span class=\"fn\">com</span></span>).lets</span> <span class=\"fn\">ll</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets\">addProgramToLets</a> <span class=\"fn\">lets</span> <span class=\"fn\">map</span> <span class=\"fn\">com</span></span>).var</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">com</span> <span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">v</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">ll</span> (<span class=\"fn\"><span class=\"fn\">map</span> <span class=\"fn\">x</span> <span class=\"fn\">v</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L245-L255","name":"denote_addProgramToLets_lets","line":245,"kind":"theorem","docLink":"./SSA/Core/Framework.html#denote_addProgramToLets_lets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#denote_addProgramToLets_lets\"><span class=\"name\">denote_addProgramToLets_lets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{map : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Δ</span> <span class=\"fn\">Γ_out</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{com : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ</span> <span class=\"fn\">t</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ll : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ_in</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃t : <span class=\"fn\">Ty</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(var : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets\">addProgramToLets</a> <span class=\"fn\">lets</span> <span class=\"fn\">map</span> <span class=\"fn\">com</span></span>).lets</span> <span class=\"fn\">ll</span> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Diff.toHom\">Ctxt.Diff.toHom</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets\">addProgramToLets</a> <span class=\"fn\">lets</span> <span class=\"fn\">map</span> <span class=\"fn\">com</span></span>).diff</span> <span class=\"fn\">var</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets.denote\">Lets.denote</a> <span class=\"fn\">lets</span> <span class=\"fn\">ll</span> <span class=\"fn\">var</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L237-L243","name":"addProgramToLets","line":237,"kind":"def","docLink":"./SSA/Core/Framework.html#addProgramToLets","doc":"Add a program to a list of `Lets`, returning\n* the new lets\n* a map from variables of the out context of the old lets to the out context of the new lets\n* a variable in the new out context, which is semantically equivalent to the return variable of\n  the added program\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#addProgramToLets\"><span class=\"name\">addProgramToLets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Δ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(varsMap : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Δ</span> <span class=\"fn\">Γ_out</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Δ</span> <span class=\"fn\">ty</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets.Result\">addProgramToLets.Result</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span> <span class=\"fn\">ty</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L228-L228","name":"addProgramToLets.Result.var","line":228,"kind":"def","docLink":"./SSA/Core/Framework.html#addProgramToLets.Result.var","doc":"The variable in the new `lets` that represent the return value of the added program "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#addProgramToLets.Result.var\"><span class=\"name\">addProgramToLets</span>.<span class=\"name\">Result</span>.<span class=\"name\">var</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets.Result\">addProgramToLets.Result</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\"><span class=\"fn\">self</span>.Γ_out_new</span> <span class=\"fn\">ty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L226-L226","name":"addProgramToLets.Result.diff","line":226,"kind":"def","docLink":"./SSA/Core/Framework.html#addProgramToLets.Result.diff","doc":"The difference between the old out context and the new out context\nThis induces a context mapping from `Γ_out` to `Γ_out_new` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#addProgramToLets.Result.diff\"><span class=\"name\">addProgramToLets</span>.<span class=\"name\">Result</span>.<span class=\"name\">diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets.Result\">addProgramToLets.Result</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Diff\">Ctxt.Diff</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\"><span class=\"fn\">self</span>.Γ_out_new</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L223-L223","name":"addProgramToLets.Result.lets","line":223,"kind":"def","docLink":"./SSA/Core/Framework.html#addProgramToLets.Result.lets","doc":"The new `lets`, with the program added to it "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#addProgramToLets.Result.lets\"><span class=\"name\">addProgramToLets</span>.<span class=\"name\">Result</span>.<span class=\"name\">lets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets.Result\">addProgramToLets.Result</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\"><span class=\"fn\">self</span>.Γ_out_new</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L221-L221","name":"addProgramToLets.Result.Γ_out_new","line":221,"kind":"def","docLink":"./SSA/Core/Framework.html#addProgramToLets.Result.Γ_out_new","doc":"The new out context "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#addProgramToLets.Result.Γ_out_new\"><span class=\"name\">addProgramToLets</span>.<span class=\"name\">Result</span>.<span class=\"name\">Γ_out_new</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets.Result\">addProgramToLets.Result</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L219-L219","name":"addProgramToLets.Result.mk","line":219,"kind":"ctor","docLink":"./SSA/Core/Framework.html#addProgramToLets.Result.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#addProgramToLets.Result.mk\"><span class=\"name\">addProgramToLets</span>.<span class=\"name\">Result</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ_out_new : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lets : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out_new</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(diff : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Diff\">Ctxt.Diff</a> <span class=\"fn\">Γ_out</span> <span class=\"fn\">Γ_out_new</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(var : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ_out_new</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#addProgramToLets.Result\">addProgramToLets.Result</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ_in</span> <span class=\"fn\">Γ_out</span> <span class=\"fn\">ty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L219-L228","name":"addProgramToLets.Result","line":219,"kind":"structure","docLink":"./SSA/Core/Framework.html#addProgramToLets.Result","doc":"The result returned by `addProgramToLets` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#addProgramToLets.Result\"><span class=\"name\">addProgramToLets</span>.<span class=\"name\">Result</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Op : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Γ_in : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Γ_out : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ty : <span class=\"fn\">Ty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L202-L214","name":"ICom.denote_changeVars","line":202,"kind":"theorem","docLink":"./SSA/Core/Framework.html#ICom.denote_changeVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.denote_changeVars\"><span class=\"name\">ICom</span>.<span class=\"name\">denote_changeVars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ' : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(varsMap : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Γ'v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.changeVars\">ICom.changeVars</a> <span class=\"fn\">varsMap</span> <span class=\"fn\">c</span></span>) <span class=\"fn\">Γ'v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.denote\">ICom.denote</a> <span class=\"fn\">c</span> <span class=\"fn\">fun <span class=\"fn\">t</span> <span class=\"fn\">v</span> =&gt <span class=\"fn\"><span class=\"fn\">Γ'v</span> <span class=\"fn\">t</span> (<span class=\"fn\"><span class=\"fn\">varsMap</span> <span class=\"fn\">t</span> <span class=\"fn\">v</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L194-L199","name":"ICom.changeVars","line":194,"kind":"def","docLink":"./SSA/Core/Framework.html#ICom.changeVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.changeVars\"><span class=\"name\">ICom</span>.<span class=\"name\">changeVars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ' : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(varsMap : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ'</span> <span class=\"fn\">ty</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L185-L192","name":"IExpr.denote_changeVars","line":185,"kind":"theorem","docLink":"./SSA/Core/Framework.html#IExpr.denote_changeVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.denote_changeVars\"><span class=\"name\">IExpr</span>.<span class=\"name\">denote_changeVars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ' : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(varsMap : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Γ'v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.denote\">IExpr.denote</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.changeVars\">IExpr.changeVars</a> <span class=\"fn\">varsMap</span> <span class=\"fn\">e</span></span>) <span class=\"fn\">Γ'v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.denote\">IExpr.denote</a> <span class=\"fn\">e</span> <span class=\"fn\">fun <span class=\"fn\">t</span> <span class=\"fn\">v</span> =&gt <span class=\"fn\"><span class=\"fn\">Γ'v</span> <span class=\"fn\">t</span> (<span class=\"fn\"><span class=\"fn\">varsMap</span> <span class=\"fn\">t</span> <span class=\"fn\">v</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L180-L182","name":"IExpr.changeVars","line":180,"kind":"def","docLink":"./SSA/Core/Framework.html#IExpr.changeVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.changeVars\"><span class=\"name\">IExpr</span>.<span class=\"name\">changeVars</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ' : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(varsMap : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Hom\">Ctxt.Hom</a> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ'</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ'</span> <span class=\"fn\">ty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L169-L178","name":"Lets.denote","line":169,"kind":"def","docLink":"./SSA/Core/Framework.html#Lets.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.denote\"><span class=\"name\">Lets</span>.<span class=\"name\">denote</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ₁</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L142-L144","name":"ICom.denote","line":142,"kind":"def","docLink":"./SSA/Core/Framework.html#ICom.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.denote\"><span class=\"name\">ICom</span>.<span class=\"name\">denote</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">ty</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L138-L140","name":"IExpr.denote","line":138,"kind":"def","docLink":"./SSA/Core/Framework.html#IExpr.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.denote\"><span class=\"name\">IExpr</span>.<span class=\"name\">denote</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Γv : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\">Γ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\">ty</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L133-L136","name":"HVector.denote","line":133,"kind":"def","docLink":"./SSA/Core/Framework.html#HVector.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#HVector.denote\"><span class=\"name\">HVector</span>.<span class=\"name\">denote</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ty</span></span>)</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(T : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\">fun <span class=\"fn\">t</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\"><span class=\"fn\">t</span>.fst</span> <span class=\"fn\"><span class=\"fn\">t</span>.snd</span></span></span>) <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\">fun <span class=\"fn\">t</span> =&gt <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\"><span class=\"fn\">t</span>.fst</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\"><span class=\"fn\">t</span>.snd</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>) <span class=\"fn\">l</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L123-L125","name":"IExpr.regArgs_mk","line":123,"kind":"theorem","docLink":"./SSA/Core/Framework.html#IExpr.regArgs_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.regArgs_mk\"><span class=\"name\">IExpr</span>.<span class=\"name\">regArgs_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(op : <span class=\"fn\">Op</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ty_eq : <span class=\"fn\"><span class=\"fn\">ty</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.outTy\">OpSignature.outTy</a> <span class=\"fn\">op</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.sig\">OpSignature.sig</a> <span class=\"fn\">op</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(regArgs : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\">fun <span class=\"fn\">t</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\"><span class=\"fn\">t</span>.fst</span> <span class=\"fn\"><span class=\"fn\">t</span>.snd</span></span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.regSig\">OpSignature.regSig</a> <span class=\"fn\">op</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.regArgs\">IExpr.regArgs</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.mk\">IExpr.mk</a> <span class=\"fn\">op</span> <span class=\"fn\">ty_eq</span> <span class=\"fn\">args</span> <span class=\"fn\">regArgs</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">regArgs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L118-L120","name":"IExpr.args_mk","line":118,"kind":"theorem","docLink":"./SSA/Core/Framework.html#IExpr.args_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.args_mk\"><span class=\"name\">IExpr</span>.<span class=\"name\">args_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(op : <span class=\"fn\">Op</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ty_eq : <span class=\"fn\"><span class=\"fn\">ty</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.outTy\">OpSignature.outTy</a> <span class=\"fn\">op</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.sig\">OpSignature.sig</a> <span class=\"fn\">op</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(regArgs : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\">fun <span class=\"fn\">t</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\"><span class=\"fn\">t</span>.fst</span> <span class=\"fn\"><span class=\"fn\">t</span>.snd</span></span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.regSig\">OpSignature.regSig</a> <span class=\"fn\">op</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.args\">IExpr.args</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.mk\">IExpr.mk</a> <span class=\"fn\">op</span> <span class=\"fn\">ty_eq</span> <span class=\"fn\">args</span> <span class=\"fn\">regArgs</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">args</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L113-L115","name":"IExpr.op_mk","line":113,"kind":"theorem","docLink":"./SSA/Core/Framework.html#IExpr.op_mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.op_mk\"><span class=\"name\">IExpr</span>.<span class=\"name\">op_mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(op : <span class=\"fn\">Op</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ty_eq : <span class=\"fn\"><span class=\"fn\">ty</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.outTy\">OpSignature.outTy</a> <span class=\"fn\">op</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.sig\">OpSignature.sig</a> <span class=\"fn\">op</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(regArgs : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\">fun <span class=\"fn\">t</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\"><span class=\"fn\">t</span>.fst</span> <span class=\"fn\"><span class=\"fn\">t</span>.snd</span></span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.regSig\">OpSignature.regSig</a> <span class=\"fn\">op</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.op\">IExpr.op</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.mk\">IExpr.mk</a> <span class=\"fn\">op</span> <span class=\"fn\">ty_eq</span> <span class=\"fn\">args</span> <span class=\"fn\">regArgs</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">op</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L107-L109","name":"IExpr.regArgs","line":107,"kind":"def","docLink":"./SSA/Core/Framework.html#IExpr.regArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.regArgs\"><span class=\"name\">IExpr</span>.<span class=\"name\">regArgs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\">fun <span class=\"fn\">t</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\"><span class=\"fn\">t</span>.fst</span> <span class=\"fn\"><span class=\"fn\">t</span>.snd</span></span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.regSig\">OpSignature.regSig</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.op\">IExpr.op</a> <span class=\"fn\">e</span></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L103-L105","name":"IExpr.args","line":103,"kind":"def","docLink":"./SSA/Core/Framework.html#IExpr.args","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.args\"><span class=\"name\">IExpr</span>.<span class=\"name\">args</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.sig\">OpSignature.sig</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.op\">IExpr.op</a> <span class=\"fn\">e</span></span>)</span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L99-L101","name":"IExpr.ty_eq","line":99,"kind":"theorem","docLink":"./SSA/Core/Framework.html#IExpr.ty_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.ty_eq\"><span class=\"name\">IExpr</span>.<span class=\"name\">ty_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ty</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.outTy\">OpSignature.outTy</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr.op\">IExpr.op</a> <span class=\"fn\">e</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L96-L97","name":"IExpr.op","line":96,"kind":"def","docLink":"./SSA/Core/Framework.html#IExpr.op","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.op\"><span class=\"name\">IExpr</span>.<span class=\"name\">op</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">Op</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L85-L94","name":"ICom.rec'","line":85,"kind":"def","docLink":"./SSA/Core/Framework.html#ICom.rec'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.rec'\"><span class=\"name\">ICom</span>.<span class=\"name\">rec'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{motive : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>) → <span class=\"fn\">(<span class=\"fn\">a_1</span> : <span class=\"fn\">Ty</span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span> → <a href=\"./foundational_types.html\">Sort</a> u</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ret : <span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>} → <span class=\"fn\">{<span class=\"fn\">t</span> : <span class=\"fn\">Ty</span>} → <span class=\"fn\">(<span class=\"fn\">v</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>) → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.ret\">ICom.ret</a> <span class=\"fn\">v</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lete : <span class=\"fn\">{<span class=\"fn\">Γ</span> : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>} →\n  <span class=\"fn\">{<span class=\"fn\">α </span>β : <span class=\"fn\">Ty</span>} →\n    <span class=\"fn\">(<span class=\"fn\">e</span> : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">α</span></span>) →\n      <span class=\"fn\">(<span class=\"fn\">body</span> : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.snoc\">Ctxt.snoc</a> <span class=\"fn\">Γ</span> <span class=\"fn\">α</span></span>) <span class=\"fn\">β</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">motive</span> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.snoc\">Ctxt.snoc</a> <span class=\"fn\">Γ</span> <span class=\"fn\">α</span></span>) <span class=\"fn\">β</span> <span class=\"fn\">body</span></span> → <span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">Γ</span> <span class=\"fn\">β</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom.lete\">ICom.lete</a> <span class=\"fn\">e</span> <span class=\"fn\">body</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a_1 : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">motive</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L76-L76","name":"instReprLets","line":76,"kind":"instance","docLink":"./SSA/Core/Framework.html#instReprLets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#instReprLets\"><span class=\"name\">instReprLets</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">{<span class=\"fn\">Op </span>Ty : <a href=\"./foundational_types.html\">Type</a>} →\n  <span class=\"fn\">{<span class=\"fn\">inst</span> : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>} → <span class=\"fn\">{<span class=\"fn\">a </span>a_1 : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>} → <span class=\"fn\">[<span class=\"fn\">inst_1</span> : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">Op</span></span>] → <span class=\"fn\">[<span class=\"fn\">inst_2</span> : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">Ty</span></span>] → <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">a</span> <span class=\"fn\">a_1</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L75-L75","name":"Lets.lete","line":75,"kind":"ctor","docLink":"./SSA/Core/Framework.html#Lets.lete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.lete\"><span class=\"name\">Lets</span>.<span class=\"name\">lete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₁ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ₂ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(body : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> <span class=\"fn\">Γ₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ₁</span> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.snoc\">Ctxt.snoc</a> <span class=\"fn\">Γ₂</span> <span class=\"fn\">t</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L74-L74","name":"Lets.nil","line":74,"kind":"ctor","docLink":"./SSA/Core/Framework.html#Lets.nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets.nil\"><span class=\"name\">Lets</span>.<span class=\"name\">nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#Lets\">Lets</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">Γ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L73-L76","name":"Lets","line":73,"kind":"inductive","docLink":"./SSA/Core/Framework.html#Lets","doc":"`Lets Op Γ₁ Γ₂` is a sequence of lets which are well-formed under context `Γ₂` and result in\ncontext `Γ₁`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#Lets\"><span class=\"name\">Lets</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Op : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L65-L65","name":"instReprICom","line":65,"kind":"instance","docLink":"./SSA/Core/Framework.html#instReprICom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#instReprICom\"><span class=\"name\">instReprICom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L64-L64","name":"instReprIExpr","line":64,"kind":"instance","docLink":"./SSA/Core/Framework.html#instReprIExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#instReprIExpr\"><span class=\"name\">instReprIExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L59-L61","name":"ICom.repr","line":59,"kind":"def","docLink":"./SSA/Core/Framework.html#ICom.repr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.repr\"><span class=\"name\">ICom</span>.<span class=\"name\">repr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L56-L57","name":"IExpr.repr","line":56,"kind":"def","docLink":"./SSA/Core/Framework.html#IExpr.repr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.repr\"><span class=\"name\">IExpr</span>.<span class=\"name\">repr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <span class=\"fn\">Op</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(prec : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L47-L47","name":"ICom.lete","line":47,"kind":"ctor","docLink":"./SSA/Core/Framework.html#ICom.lete","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.lete\"><span class=\"name\">ICom</span>.<span class=\"name\">lete</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(body : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.snoc\">Ctxt.snoc</a> <span class=\"fn\">Γ</span> <span class=\"fn\">α</span></span>) <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L46-L46","name":"ICom.ret","line":46,"kind":"ctor","docLink":"./SSA/Core/Framework.html#ICom.ret","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom.ret\"><span class=\"name\">ICom</span>.<span class=\"name\">ret</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">t</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L45-L47","name":"ICom","line":45,"kind":"inductive","docLink":"./SSA/Core/Framework.html#ICom","doc":"A very simple intrinsically typed program: a sequence of let bindings. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#ICom\"><span class=\"name\">ICom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Op : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span> → <span class=\"fn\"><span class=\"fn\">Ty</span> → <a href=\"./foundational_types.html\">Type</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L38-L42","name":"IExpr.mk","line":38,"kind":"ctor","docLink":"./SSA/Core/Framework.html#IExpr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr.mk\"><span class=\"name\">IExpr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ty : <span class=\"fn\">Ty</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(op : <span class=\"fn\">Op</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ty_eq : <span class=\"fn\"><span class=\"fn\">ty</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.outTy\">OpSignature.outTy</a> <span class=\"fn\">op</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Var\">Ctxt.Var</a> <span class=\"fn\">Γ</span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.sig\">OpSignature.sig</a> <span class=\"fn\">op</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(regArgs : <span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\">fun <span class=\"fn\">t</span> =&gt <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#ICom\">ICom</a> <span class=\"fn\">Op</span> <span class=\"fn\"><span class=\"fn\">t</span>.fst</span> <span class=\"fn\"><span class=\"fn\">t</span>.snd</span></span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.regSig\">OpSignature.regSig</a> <span class=\"fn\">op</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#IExpr\">IExpr</a> <span class=\"fn\">Op</span> <span class=\"fn\">Γ</span> <span class=\"fn\">ty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L37-L42","name":"IExpr","line":37,"kind":"inductive","docLink":"./SSA/Core/Framework.html#IExpr","doc":"A very simple intrinsically typed expression. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#IExpr\"><span class=\"name\">IExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Op : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Γ : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ty : <span class=\"fn\">Ty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L24-L24","name":"OpDenote.denote","line":24,"kind":"def","docLink":"./SSA/Core/Framework.html#OpDenote.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#OpDenote.denote\"><span class=\"name\">OpDenote</span>.<span class=\"name\">denote</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(op : <span class=\"fn\">Op</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> <span class=\"fn\">Goedel.toType</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.sig\">OpSignature.sig</a> <span class=\"fn\">op</span></span>)</span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\">fun <span class=\"fn\">t</span> =&gt <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\"><span class=\"fn\">t</span>.fst</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\"><span class=\"fn\">t</span>.snd</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.regSig\">OpSignature.regSig</a> <span class=\"fn\">op</span></span>)</span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.outTy\">OpSignature.outTy</a> <span class=\"fn\">op</span></span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L23-L23","name":"OpDenote.mk","line":23,"kind":"ctor","docLink":"./SSA/Core/Framework.html#OpDenote.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#OpDenote.mk\"><span class=\"name\">OpDenote</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(denote : <span class=\"fn\">(<span class=\"fn\">op</span> : <span class=\"fn\">Op</span>) →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> <span class=\"fn\">Goedel.toType</span> (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.sig\">OpSignature.sig</a> <span class=\"fn\">op</span></span>)</span> →\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/HVector.html#HVector\">HVector</a> (<span class=\"fn\">fun <span class=\"fn\">t</span> =&gt <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt.Valuation\">Ctxt.Valuation</a> <span class=\"fn\"><span class=\"fn\">t</span>.fst</span></span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\"><span class=\"fn\">t</span>.snd</span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span>) (<span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.regSig\">OpSignature.regSig</a> <span class=\"fn\">op</span></span>)</span> → <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟦</a><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature.outTy\">OpSignature.outTy</a> <span class=\"fn\">op</span></span><a href=\"./SSA/Core/ErasedContext.html#Goedel.toType\">⟧</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpDenote\">OpDenote</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L23-L26","name":"OpDenote","line":23,"kind":"class","docLink":"./SSA/Core/Framework.html#OpDenote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#OpDenote\"><span class=\"name\">OpDenote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Op : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Ty : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Goedel\">Goedel</a> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L21-L21","name":"OpSignature.outTy","line":21,"kind":"def","docLink":"./SSA/Core/Framework.html#OpSignature.outTy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#OpSignature.outTy\"><span class=\"name\">OpSignature</span>.<span class=\"name\">outTy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Op</span> → <span class=\"fn\">Ty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L20-L20","name":"OpSignature.regSig","line":20,"kind":"def","docLink":"./SSA/Core/Framework.html#OpSignature.regSig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#OpSignature.regSig\"><span class=\"name\">OpSignature</span>.<span class=\"name\">regSig</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Op</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ty</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L19-L19","name":"OpSignature.sig","line":19,"kind":"def","docLink":"./SSA/Core/Framework.html#OpSignature.sig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#OpSignature.sig\"><span class=\"name\">OpSignature</span>.<span class=\"name\">sig</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Op</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L18-L18","name":"OpSignature.mk","line":18,"kind":"ctor","docLink":"./SSA/Core/Framework.html#OpSignature.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#OpSignature.mk\"><span class=\"name\">OpSignature</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Op : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Ty : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(sig : <span class=\"fn\"><span class=\"fn\">Op</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">Ty</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(regSig : <span class=\"fn\"><span class=\"fn\">Op</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Core/ErasedContext.html#Ctxt\">Ctxt</a> <span class=\"fn\">Ty</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">Ty</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(outTy : <span class=\"fn\"><span class=\"fn\">Op</span> → <span class=\"fn\">Ty</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./SSA/Core/Framework.html#OpSignature\">OpSignature</a> <span class=\"fn\">Op</span> <span class=\"fn\">Ty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/1ad07144283f45e290add0bafe10ed0bb40f67ae/SSA/Core/Framework.lean#L18-L21","name":"OpSignature","line":18,"kind":"class","docLink":"./SSA/Core/Framework.html#OpSignature","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Core/Framework.html#OpSignature\"><span class=\"name\">OpSignature</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Op : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Ty : <span class=\"fn\"><a href=\"./Init/Prelude.html#outParam\">outParam</a> <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}
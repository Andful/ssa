{"name":"Lean.Parser.Extra","instances":[],"imports":["Init","Lean.Parser.Extension","Lean.PrettyPrinter.Parenthesizer","Lean.PrettyPrinter.Formatter"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L183-L183","name":"Lean.Parser.«termRegister_parser_alias(Kind:=_)______»","line":183,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.«termRegister_parser_alias(Kind:=_)______»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.«termRegister_parser_alias(Kind:=_)______»\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">«termRegister_parser_alias(Kind:=_)______»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L168-L172","name":"Lean.ppHardLineUnlessUngrouped.formatter","line":168,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppHardLineUnlessUngrouped.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppHardLineUnlessUngrouped.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppHardLineUnlessUngrouped</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L163-L167","name":"Lean.ppDedentIfGrouped.formatter","line":163,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppDedentIfGrouped.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppDedentIfGrouped.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppDedentIfGrouped</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L161-L162","name":"Lean.ppAllowUngrouped.formatter","line":161,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppAllowUngrouped.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppAllowUngrouped.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppAllowUngrouped</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L157-L159","name":"Lean.ppDedent.formatter","line":157,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppDedent.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppDedent.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppDedent</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L156-L156","name":"Lean.ppIndent.formatter","line":156,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppIndent.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppIndent.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppIndent</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L155-L155","name":"Lean.ppRealGroup.formatter","line":155,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppRealGroup.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppRealGroup.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppRealGroup</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L154-L154","name":"Lean.ppRealFill.formatter","line":154,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppRealFill.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppRealFill.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppRealFill</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L153-L153","name":"Lean.ppLine.formatter","line":153,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppLine.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppLine.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppLine</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L152-L152","name":"Lean.ppSpace.formatter","line":152,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppSpace.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppSpace.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppSpace</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L151-L151","name":"Lean.ppHardSpace.formatter","line":151,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.ppHardSpace.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.ppHardSpace.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">ppHardSpace</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L144-L144","name":"Lean.Parser.ppHardLineUnlessUngrouped","line":144,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppHardLineUnlessUngrouped","doc":"No-op parser combinator that prints a line break.\nThe line break is soft if the combinator is followed\nby an ungrouped parser (see ppAllowUngrouped), otherwise hard. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppHardLineUnlessUngrouped\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppHardLineUnlessUngrouped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L138-L138","name":"Lean.Parser.ppDedentIfGrouped","line":138,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppDedentIfGrouped","doc":"No-op parser combinator that advises the pretty printer to dedent the given syntax,\nif it was grouped by the category parser.\nDedenting can in particular be used to counteract automatic indentation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppDedentIfGrouped\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppDedentIfGrouped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L132-L132","name":"Lean.Parser.ppAllowUngrouped","line":132,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppAllowUngrouped","doc":"No-op parser combinator that allows the pretty printer to omit the group and\nindent operation in the enclosing category parser.\n```\nsyntax ppAllowUngrouped \"by \" tacticSeq : term\n-- allows a `by` after `:=` without linebreak in between:\ntheorem foo : True := by\n  trivial\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppAllowUngrouped\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppAllowUngrouped</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L120-L120","name":"Lean.Parser.ppDedent","line":120,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppDedent","doc":"No-op parser combinator that advises the pretty printer to dedent the given syntax.\nDedenting can in particular be used to counteract automatic indentation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppDedent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppDedent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L116-L116","name":"Lean.Parser.ppGroup","line":116,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppGroup","doc":"No-op parser combinator that advises the pretty printer to group and indent the given syntax.\nBy default, only syntax categories are grouped. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppGroup\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppGroup</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L112-L112","name":"Lean.Parser.ppIndent","line":112,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppIndent","doc":"No-op parser combinator that advises the pretty printer to indent the given syntax without grouping it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppIndent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppIndent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L110-L110","name":"Lean.Parser.ppRealGroup","line":110,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppRealGroup","doc":"No-op parser combinator that advises the pretty printer to emit a `Format.group` node. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppRealGroup\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppRealGroup</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L108-L108","name":"Lean.Parser.ppRealFill","line":108,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppRealFill","doc":"No-op parser combinator that advises the pretty printer to emit a `Format.fill` node. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppRealFill\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppRealFill</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L106-L106","name":"Lean.Parser.ppLine","line":106,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppLine","doc":"No-op parser that advises the pretty printer to emit a hard line break. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppLine\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppLine</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L104-L104","name":"Lean.Parser.ppSpace","line":104,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppSpace","doc":"No-op parser that advises the pretty printer to emit a space/soft line break. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppSpace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppSpace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L102-L102","name":"Lean.Parser.ppHardSpace","line":102,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ppHardSpace","doc":"No-op parser that advises the pretty printer to emit a non-breaking space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ppHardSpace\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ppHardSpace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L99-L99","name":"Lean.Parser.patternIgnore","line":99,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.patternIgnore","doc":"No-op parser combinator that annotates subtrees to be ignored in syntax patterns. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.patternIgnore\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">patternIgnore</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L95-L96","name":"Lean.Parser.notSymbol","line":95,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.notSymbol","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.notSymbol\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">notSymbol</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L91-L91","name":"Lean.Parser.sepBy1Indent.formatter","line":91,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepBy1Indent</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_sep : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pSep : <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L77-L89","name":"Lean.Parser.sepByIndent.formatter","line":77,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent.formatter\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepByIndent</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(_sep : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pSep : <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L71-L73","name":"Lean.Parser.sepBy1Indent","line":71,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.sepBy1Indent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepBy1Indent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(psep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.symbol\">Lean.Parser.symbol</a> <span class=\"fn\">sep</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingSep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L67-L69","name":"Lean.Parser.sepByIndent","line":67,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.sepByIndent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">sepByIndent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(psep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> (<span class=\"fn\"><a href=\"./Lean/Parser/Basic.html#Lean.Parser.symbol\">Lean.Parser.symbol</a> <span class=\"fn\">sep</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingSep : <span class=\"fn\"><a href=\"./Init/Prelude.html#optParam\">optParam</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L64-L65","name":"Lean.Parser.manyIndent","line":64,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.manyIndent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.manyIndent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">manyIndent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L61-L62","name":"Lean.Parser.many1Indent","line":61,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many1Indent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.many1Indent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">many1Indent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L58-L59","name":"Lean.Parser.group","line":58,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.group","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.group\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">group</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L55-L56","name":"Lean.Parser.nameLit","line":55,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.nameLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.nameLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">nameLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L52-L53","name":"Lean.Parser.charLit","line":52,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.charLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.charLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">charLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L49-L50","name":"Lean.Parser.strLit","line":49,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.strLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.strLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">strLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L46-L47","name":"Lean.Parser.scientificLit","line":46,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.scientificLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.scientificLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">scientificLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L43-L44","name":"Lean.Parser.numLit","line":43,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.numLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.numLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">numLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L40-L41","name":"Lean.Parser.hygieneInfo","line":40,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.hygieneInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.hygieneInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">hygieneInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L37-L38","name":"Lean.Parser.rawIdent","line":37,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.rawIdent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.rawIdent\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">rawIdent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L33-L34","name":"Lean.Parser.ident","line":33,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.ident","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.ident\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">ident</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L30-L31","name":"Lean.Parser.many1","line":30,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.many1\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">many1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L27-L28","name":"Lean.Parser.many","line":27,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.many","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.many\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">many</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/216d2460e0adec8317fdeeb6f2543cb7442564fd/src/Lean/Parser/Extra.lean#L24-L25","name":"Lean.Parser.optional","line":24,"kind":"def","docLink":"./Lean/Parser/Extra.html#Lean.Parser.optional","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Parser/Extra.html#Lean.Parser.optional\"><span class=\"name\">Lean</span>.<span class=\"name\">Parser</span>.<span class=\"name\">optional</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"}]}
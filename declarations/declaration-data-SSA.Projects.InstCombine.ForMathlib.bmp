{"name":"SSA.Projects.InstCombine.ForMathlib","instances":[{"typeNames":["Vector","Fin","Vector","Fin","True"],"name":"Vector.instGetElemVectorFinTrue","className":"GetElem"},{"typeNames":["Bitvec","Fin","Bool","Bitvec","Fin","True"],"name":"Bitvec.instGetElemBitvecFinBoolTrue","className":"GetElem"},{"typeNames":["Bitvec"],"name":"Bitvec.instInhabitedBitvec","className":"Inhabited"},{"typeNames":["Bitvec.Fun","Bitvec"],"name":"Bitvec.instCoeFunBitvec","className":"Coe"},{"typeNames":["Bitvec","Bitvec.Fun"],"name":"Bitvec.instCoeBitvecFun","className":"Coe"},{"typeNames":["Nat","Bitvec"],"name":"Bitvec.instSMulNatBitvec","className":"SMul"},{"typeNames":["Nat","LinearOrderedCommMonoidWithZero.toZero","Nat","Nat.linearOrderedCommMonoidWithZero","HPow.hPow","Nat","instHPow","instPowNat","OfNat.ofNat","instOfNatNat"],"name":"Bitvec.instNeZeroNatToZeroLinearOrderedCommMonoidWithZeroHPowInstHPowInstPowNatOfNat","className":"NeZero"},{"typeNames":["Int","Bitvec"],"name":"Bitvec.instSMulIntBitvec","className":"SMul"},{"typeNames":["Bitvec"],"name":"Bitvec.instAddCommGroupBitvec","className":"AddCommGroup"},{"typeNames":["Bitvec.Refinement"],"name":"Bitvec.Refinement.instDecidableRelOptionRefinement","className":"Decidable"},{"typeNames":["Eq","Bitvec"],"name":"Bitvec.instDecidableEqBitvec","className":"Decidable"},{"typeNames":["Bool","Bitvec","OfNat.ofNat","Nat","instOfNatNat"],"name":"Bitvec.instCoeBoolBitvecOfNatNatInstOfNatNat","className":"Coe"},{"typeNames":["Bitvec","OfNat.ofNat","Nat","instOfNatNat","Bool"],"name":"Bitvec.instCoeBitvecOfNatNatInstOfNatNatBool","className":"Coe"},{"typeNames":["_builtin_prop","Bitvec","OfNat.ofNat","Nat","instOfNatNat"],"name":"Bitvec.decPropToBitvec1","className":"CoeDep"},{"typeNames":["Bitvec.ult"],"name":"Bitvec.instDecidableUlt","className":"Decidable"},{"typeNames":["Bitvec.ule"],"name":"Bitvec.instDecidableUle","className":"Decidable"},{"typeNames":["Bitvec.ugt"],"name":"Bitvec.instDecidableUgt","className":"Decidable"},{"typeNames":["Bitvec.uge"],"name":"Bitvec.instDecidableUge","className":"Decidable"},{"typeNames":["Bitvec.slt"],"name":"Bitvec.instDecidableSlt","className":"Decidable"},{"typeNames":["Bitvec.sle"],"name":"Bitvec.instDecidableSle","className":"Decidable"},{"typeNames":["Bitvec.sgt"],"name":"Bitvec.instDecidableSgt","className":"Decidable"},{"typeNames":["Bitvec.sge"],"name":"Bitvec.instDecidableSge","className":"Decidable"}],"imports":["Init","Mathlib.Data.Vector","Mathlib.Data.Bitvec.Defs","Mathlib.Data.Bitvec.Lemmas","Mathlib.Algebra.Group.InjSurj","Mathlib.Tactic.Ring","Mathlib.Data.Int.Cast.Lemmas","Mathlib.Data.ZMod.Basic","Mathlib.Order.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L605-L605","name":"Bitvec.«term_>ₛ_»","line":605,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_>ₛ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_>ₛ_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_>ₛ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L604-L604","name":"Bitvec.«term_≥ₛ_»","line":604,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_≥ₛ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_≥ₛ_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_≥ₛ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L603-L603","name":"Bitvec.«term_<ₛ_»","line":603,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_<ₛ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_<ₛ_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_<ₛ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L602-L602","name":"Bitvec.«term_≤ₛ_»","line":602,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_≤ₛ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_≤ₛ_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_≤ₛ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L600-L600","name":"Bitvec.«term_>ᵤ_»","line":600,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_>ᵤ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_>ᵤ_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_>ᵤ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L599-L599","name":"Bitvec.«term_≥ᵤ_»","line":599,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_≥ᵤ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_≥ᵤ_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_≥ᵤ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L598-L598","name":"Bitvec.«term_<ᵤ_»","line":598,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_<ᵤ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_<ᵤ_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_<ᵤ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L597-L597","name":"Bitvec.«term_≤ᵤ_»","line":597,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_≤ᵤ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_≤ᵤ_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_≤ᵤ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L595-L595","name":"Bitvec.instDecidableSge","line":595,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableSge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableSge\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instDecidableSge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sge\">Bitvec.sge</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L594-L594","name":"Bitvec.instDecidableSgt","line":594,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableSgt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableSgt\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instDecidableSgt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sgt\">Bitvec.sgt</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L593-L593","name":"Bitvec.instDecidableSle","line":593,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableSle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableSle\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instDecidableSle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sle\">Bitvec.sle</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L592-L592","name":"Bitvec.instDecidableSlt","line":592,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableSlt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableSlt\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instDecidableSlt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.slt\">Bitvec.slt</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L590-L590","name":"Bitvec.sge","line":590,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sge\"><span class=\"name\">Bitvec</span>.<span class=\"name\">sge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L589-L589","name":"Bitvec.sgt","line":589,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sgt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sgt\"><span class=\"name\">Bitvec</span>.<span class=\"name\">sgt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L588-L588","name":"Bitvec.sle","line":588,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sle\"><span class=\"name\">Bitvec</span>.<span class=\"name\">sle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L587-L587","name":"Bitvec.slt","line":587,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.slt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.slt\"><span class=\"name\">Bitvec</span>.<span class=\"name\">slt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L585-L585","name":"Bitvec.instDecidableUge","line":585,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableUge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableUge\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instDecidableUge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.uge\">Bitvec.uge</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L584-L584","name":"Bitvec.instDecidableUgt","line":584,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableUgt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableUgt\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instDecidableUgt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ugt\">Bitvec.ugt</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L583-L583","name":"Bitvec.instDecidableUle","line":583,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableUle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableUle\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instDecidableUle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ule\">Bitvec.ule</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L582-L582","name":"Bitvec.instDecidableUlt","line":582,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableUlt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableUlt\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instDecidableUlt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ult\">Bitvec.ult</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L580-L580","name":"Bitvec.uge","line":580,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.uge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.uge\"><span class=\"name\">Bitvec</span>.<span class=\"name\">uge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L579-L579","name":"Bitvec.ugt","line":579,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ugt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ugt\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ugt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L578-L578","name":"Bitvec.ule","line":578,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ule\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L577-L577","name":"Bitvec.ult","line":577,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ult\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ult</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L575-L575","name":"Bitvec.«term_>>>ₛ_»","line":575,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_>>>ₛ_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_>>>ₛ_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_>>>ₛ_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L571-L572","name":"Bitvec.decPropToBitvec1","line":571,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.decPropToBitvec1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.decPropToBitvec1\"><span class=\"name\">Bitvec</span>.<span class=\"name\">decPropToBitvec1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./foundational_types.html\">Prop</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable\">Decidable</a> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeDep\">CoeDep</a> <a href=\"./foundational_types.html\">Prop</a> <span class=\"fn\">p</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L569-L569","name":"Bitvec.instCoeBitvecOfNatNatInstOfNatNatBool","line":569,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instCoeBitvecOfNatNatInstOfNatNatBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instCoeBitvecOfNatNatInstOfNatNatBool\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instCoeBitvecOfNatNatInstOfNatNatBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>) <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L566-L566","name":"Bitvec.instCoeBoolBitvecOfNatNatInstOfNatNat","line":566,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instCoeBoolBitvecOfNatNatInstOfNatNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instCoeBoolBitvecOfNatNatInstOfNatNat\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instCoeBoolBitvecOfNatNatInstOfNatNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L564-L564","name":"Bitvec.toBool_ofBool","line":564,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toBool_ofBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toBool_ofBool\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toBool_ofBool</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toBool\">Bitvec.toBool</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L563-L563","name":"Bitvec.ofBool_toBool","line":563,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool_toBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool_toBool\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofBool_toBool</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toBool\">Bitvec.toBool</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L560-L561","name":"Bitvec.toBool","line":560,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toBool\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L558-L558","name":"Bitvec.ofBool","line":558,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> → <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L556-L556","name":"Bitvec.beq","line":556,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.beq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.beq\"><span class=\"name\">Bitvec</span>.<span class=\"name\">beq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L551-L554","name":"Bitvec.one_sdiv_ref_add_cmp_select","line":551,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.one_sdiv_ref_add_cmp_select","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.one_sdiv_ref_add_cmp_select\"><span class=\"name\">Bitvec</span>.<span class=\"name\">one_sdiv_ref_add_cmp_select</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sdiv?\">Bitvec.sdiv?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ofInt\">Bitvec.ofInt</a> <span class=\"fn\">w</span> <span class=\"fn\">1</span></span>) <span class=\"fn\">x</span></span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a>\n    (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a>\n      (<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Basic.html#Nat.blt\">Nat.blt</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.add\">Bitvec.add</a> <span class=\"fn\">x</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ofNat\">Bitvec.ofNat</a> <span class=\"fn\">w</span> <span class=\"fn\">1</span></span>)</span>)</span>) (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ofNat\">Bitvec.ofNat</a> <span class=\"fn\">w</span> <span class=\"fn\">3</span></span>)</span>)</span> <a href=\"./Mathlib/Data/Vector.html#Vector.cons\">::ᵥ</a> <span class=\"fn\">Vector.nil</span></span>) <span class=\"fn\">x</span>\n      (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ofNat\">Bitvec.ofNat</a> <span class=\"fn\">w</span> <span class=\"fn\">0</span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L542-L549","name":"Bitvec.one_sdiv_eq_add_cmp_select_some","line":542,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.one_sdiv_eq_add_cmp_select_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.one_sdiv_eq_add_cmp_select_some\"><span class=\"name\">Bitvec</span>.<span class=\"name\">one_sdiv_eq_add_cmp_select_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\"><span class=\"fn\">w</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sdiv?\">Bitvec.sdiv?</a> <span class=\"fn\">1</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> (<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">3</span></span>)</span> <a href=\"./Mathlib/Data/Vector.html#Vector.cons\">::ᵥ</a> <span class=\"fn\">Vector.nil</span></span>) <span class=\"fn\">x</span> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L535-L539","name":"Bitvec.toInt_one","line":535,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_one\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toInt_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_hw : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toInt\">Bitvec.toInt</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L532-L533","name":"Bitvec.toInt_eq_zero","line":532,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_eq_zero\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toInt_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toInt\">Bitvec.toInt</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L523-L529","name":"Bitvec.toInt_zero","line":523,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_zero\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toInt_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toInt\">Bitvec.toInt</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L507-L521","name":"Bitvec.toInt_injective","line":507,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_injective\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toInt_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">Bitvec.toInt</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L505-L505","name":"Bitvec.instDecidableEqBitvec","line":505,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableEqBitvec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instDecidableEqBitvec\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instDecidableEqBitvec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L503-L503","name":"Bitvec.«term_⊑_»","line":503,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_⊑_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term_⊑_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term_⊑_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.TrailingParserDescr\">Lean.TrailingParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L489-L499","name":"Bitvec.Refinement.instDecidableRelOptionRefinement","line":489,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.instDecidableRelOptionRefinement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.instDecidableRelOptionRefinement\"><span class=\"name\">Bitvec</span>.<span class=\"name\">Refinement</span>.<span class=\"name\">instDecidableRelOptionRefinement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[inst : <span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableRel\">DecidableRel</a> <span class=\"fn\">Bitvec.Refinement</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L483-L487","name":"Bitvec.Refinement.Refinement.trans","line":483,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.Refinement.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.Refinement.trans\"><span class=\"name\">Bitvec</span>.<span class=\"name\">Refinement</span>.<span class=\"name\">Refinement</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(z : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L478-L481","name":"Bitvec.Refinement.Refinement.refl","line":478,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.Refinement.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.Refinement.refl\"><span class=\"name\">Bitvec</span>.<span class=\"name\">Refinement</span>.<span class=\"name\">Refinement</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L472-L474","name":"Bitvec.Refinement.some_some","line":472,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.some_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.some_some\"><span class=\"name\">Bitvec</span>.<span class=\"name\">Refinement</span>.<span class=\"name\">some_some</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">x</span></span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">y</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L470-L470","name":"Bitvec.Refinement.noneAny","line":470,"kind":"ctor","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.noneAny","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.noneAny\"><span class=\"name\">Bitvec</span>.<span class=\"name\">Refinement</span>.<span class=\"name\">noneAny</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">none</span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\">x?</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L469-L469","name":"Bitvec.Refinement.bothSome","line":469,"kind":"ctor","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.bothSome","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement.bothSome\"><span class=\"name\">Bitvec</span>.<span class=\"name\">Refinement</span>.<span class=\"name\">bothSome</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">x</span></span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L468-L470","name":"Bitvec.Refinement","line":468,"kind":"inductive","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\"><span class=\"name\">Bitvec</span>.<span class=\"name\">Refinement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L454-L465","name":"Bitvec.shl_ushr_eq_and_shl","line":454,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.shl_ushr_eq_and_shl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.shl_ushr_eq_and_shl\"><span class=\"name\">Bitvec</span>.<span class=\"name\">shl_ushr_eq_and_shl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.shl\">Bitvec.shl</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ushr\">Bitvec.ushr</a> <span class=\"fn\">x</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">C</span></span>)</span>) (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">C</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.and\">Bitvec.and</a> <span class=\"fn\">x</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.shl\">Bitvec.shl</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ofInt\">Bitvec.ofInt</a> <span class=\"fn\">w</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>)</span>) (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">C</span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L445-L451","name":"Bitvec.get?_ofInt_neg_one","line":445,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.get?_ofInt_neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.get?_ofInt_neg_one\"><span class=\"name\">Bitvec</span>.<span class=\"name\">get?_ofInt_neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ofInt\">Bitvec.ofInt</a> <span class=\"fn\">w</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>)</span>)</span>) <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">w</span></span> then <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> else <span class=\"fn\">none</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L439-L443","name":"Bitvec.match_does_not_fold_away","line":439,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.match_does_not_fold_away","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.match_does_not_fold_away\"><span class=\"name\">Bitvec</span>.<span class=\"name\">match_does_not_fold_away</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ofInt\">Bitvec.ofInt</a> <span class=\"fn\">w</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>)</span>)</span>)</span>)</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.get\">List.get</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ofInt\">Bitvec.ofInt</a> <span class=\"fn\">w</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>)</span>)</span>) <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L432-L437","name":"Bitvec.get?_and","line":432,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.get?_and","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.get?_and\"><span class=\"name\">Bitvec</span>.<span class=\"name\">get?_and</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.and\">Bitvec.and</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span>) <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">do\n  let __do_lift ← <span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> <span class=\"fn\">x</span></span>) <span class=\"fn\">i</span></span>\n  let __do_lift_1 ← <span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> <span class=\"fn\">y</span></span>) <span class=\"fn\">i</span></span>\n  <span class=\"fn\"><a href=\"./Init/Prelude.html#Pure.pure\">pure</a> (<span class=\"fn\"><span class=\"fn\">__do_lift</span> <a href=\"./Init/Prelude.html#and\">&amp&amp</a> <span class=\"fn\">__do_lift_1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L405-L430","name":"Bitvec.get?_ushr","line":405,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.get?_ushr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.get?_ushr\"><span class=\"name\">Bitvec</span>.<span class=\"name\">get?_ushr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ushr\">Bitvec.ushr</a> <span class=\"fn\">x</span> <span class=\"fn\">i</span></span>)</span>) <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.length\">Vector.length</a> <span class=\"fn\">x</span></span></span> then <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">i</span></span> then <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span> else <span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> <span class=\"fn\">x</span></span>) (<span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">i</span></span>)</span></span> else <span class=\"fn\">none</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L385-L403","name":"Bitvec.get?_shl","line":385,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.get?_shl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.get?_shl\"><span class=\"name\">Bitvec</span>.<span class=\"name\">get?_shl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.shl\">Bitvec.shl</a> <span class=\"fn\">x</span> <span class=\"fn\">i</span></span>)</span>) <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">n</span></span> then <span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> <span class=\"fn\">x</span></span>) (<span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">j</span></span>)</span> else <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">n</span></span> then <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span> else <span class=\"fn\">none</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L382-L383","name":"Bitvec.toList_cong","line":382,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toList_cong","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toList_cong\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toList_cong</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w₁ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w₂ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">w₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">w₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w₁</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.cong\">Bitvec.cong</a> <span class=\"fn\">h</span> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L376-L379","name":"Bitvec.ext_get?","line":376,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ext_get?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ext_get?\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ext_get?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> <span class=\"fn\">x</span></span>) <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/BasicAux.html#List.get?\">List.get?</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> <span class=\"fn\">y</span></span>) <span class=\"fn\">i</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L372-L374","name":"Bitvec.bitwise_eq_eq","line":372,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.bitwise_eq_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.bitwise_eq_eq\"><span class=\"name\">Bitvec</span>.<span class=\"name\">bitwise_eq_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">w</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>[<span class=\"fn\">i</span>]</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span>[<span class=\"fn\">i</span>]</span></span></span>) <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L369-L370","name":"Bitvec.select","line":369,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select","doc":"If the condition is an i1 and it evaluates to 1, the instruction returns the first value argument; otherwise, it returns the second value argument.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\"><span class=\"name\">Bitvec</span>.<span class=\"name\">select</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L357-L364","name":"Bitvec.srem?","line":357,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.srem?","doc":"This instruction returns the remainder of a division (where the result is either zero or has the same sign as the dividend, op1), \nnot the modulo operator (where the result is either zero or has the same sign as the divisor, op2) of a value.\nFor more information about the difference, see The Math Forum.\nFor a table of how this is implemented in various languages, please see Wikipedia: modulo operation.\nNote that signed integer remainder and unsigned integer remainder are distinct operations; for unsigned integer remainder, use ‘urem’.\nTaking the remainder of a division by zero is undefined behavior.\nFor vectors, if any element of the divisor is zero, the operation has undefined behavior.\nOverflow also leads to undefined behavior; this is a rare case, but can occur, for example,\nby taking the remainder of a 32-bit division of -2147483648 by -1.\n(The remainder doesn’t actually overflow, but this rule lets srem be implemented using instructions that return both the result\nof the division and the remainder.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.srem?\"><span class=\"name\">Bitvec</span>.<span class=\"name\">srem?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L341-L342","name":"Int.rem_sign_dividend","line":341,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Int.rem_sign_dividend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Int.rem_sign_dividend\"><span class=\"name\">Int</span>.<span class=\"name\">rem_sign_dividend</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Int.rem\">Int.rem</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L337-L338","name":"Int.rem","line":337,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Int.rem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Int.rem\"><span class=\"name\">Int</span>.<span class=\"name\">rem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L332-L335","name":"Bitvec.urem?","line":332,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.urem?","doc":"This instruction returns the unsigned integer remainder of a division. This instruction always performs an unsigned division to get the remainder.\nNote that unsigned integer remainder and signed integer remainder are distinct operations; for signed integer remainder, use ‘srem’.\nTaking the remainder of a division by zero is undefined behavior. \n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.urem?\"><span class=\"name\">Bitvec</span>.<span class=\"name\">urem?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L318-L325","name":"Bitvec.sdiv?","line":318,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sdiv?","doc":"The value produced is the signed integer quotient of the two operands rounded towards zero.\nNote that signed integer division and unsigned integer division are distinct operations; for unsigned integer division, use ‘udiv’.\nDivision by zero is undefined behavior.\nOverflow also leads to undefined behavior; this is a rare case, but can occur, for example, by doing a 32-bit division of -2147483648 by -1.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sdiv?\"><span class=\"name\">Bitvec</span>.<span class=\"name\">sdiv?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L307-L310","name":"Bitvec.udiv?","line":307,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.udiv?","doc":"The value produced is the unsigned integer quotient of the two operands.\nNote that unsigned integer division and signed integer division are distinct operations; for signed integer division, use ‘sdiv’.\nDivision by zero is undefined behavior.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.udiv?\"><span class=\"name\">Bitvec</span>.<span class=\"name\">udiv?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L300-L300","name":"Bitvec.mul?_some_eq_mul","line":300,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.mul?_some_eq_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.mul?_some_eq_mul\"><span class=\"name\">Bitvec</span>.<span class=\"name\">mul?_some_eq_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.mul?\">Bitvec.mul?</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">z</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L289-L294","name":"Bitvec.mul?","line":289,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.mul?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.mul?\"><span class=\"name\">Bitvec</span>.<span class=\"name\">mul?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L283-L283","name":"Bitvec.some_add?_eq_add","line":283,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.some_add?_eq_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.some_add?_eq_add\"><span class=\"name\">Bitvec</span>.<span class=\"name\">some_add?_eq_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.add?\">Bitvec.add?</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">z</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L279-L281","name":"Bitvec.add?","line":279,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.add?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.add?\"><span class=\"name\">Bitvec</span>.<span class=\"name\">add?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L273-L276","name":"Bitvec.instAddCommGroupBitvec","line":273,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instAddCommGroupBitvec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instAddCommGroupBitvec\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instAddCommGroupBitvec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommGroup\">AddCommGroup</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L268-L271","name":"Bitvec.toZMod_zsmul","line":268,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_zsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_zsmul\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_zsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> (<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L265-L265","name":"Bitvec.zsmul_def","line":265,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.zsmul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.zsmul_def\"><span class=\"name\">Bitvec</span>.<span class=\"name\">zsmul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#zsmulRec\">zsmulRec</a> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L263-L263","name":"Bitvec.instSMulIntBitvec","line":263,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instSMulIntBitvec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instSMulIntBitvec\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instSMulIntBitvec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L253-L261","name":"Bitvec.toZMod_neg","line":253,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_neg\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L240-L251","name":"Bitvec.toInt_neg_aux","line":240,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_neg_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_neg_aux\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toInt_neg_aux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Data/List/Lemmas.html#List.mapAccumr\">List.mapAccumr</a> (<span class=\"fn\">fun <span class=\"fn\">y</span> <span class=\"fn\">c</span> =&gt <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#or\">||</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Init/Data/Bool/Basic.html#xor\">xor</a> <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>)</span></span>) <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>).snd</span></span>)</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">bif <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Data/List/Lemmas.html#List.mapAccumr\">List.mapAccumr</a> (<span class=\"fn\">fun <span class=\"fn\">y</span> <span class=\"fn\">c</span> =&gt <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#or\">||</a> <span class=\"fn\">c</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Init/Data/Bool/Basic.html#xor\">xor</a> <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>)</span></span>) <span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>).fst</span> then <span class=\"fn\">1</span> else <span class=\"fn\">0</span></span></span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L237-L238","name":"Bitvec.toZMod_sub","line":237,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_sub\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_sub</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> (<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L228-L235","name":"Bitvec.toZMod_sbb","line":228,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_sbb","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_sbb\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_sbb</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.sbb\">Bitvec.sbb</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>).snd</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L226-L226","name":"Bitvec.instNeZeroNatToZeroLinearOrderedCommMonoidWithZeroHPowInstHPowInstPowNatOfNat","line":226,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instNeZeroNatToZeroLinearOrderedCommMonoidWithZeroHPowInstHPowInstPowNatOfNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instNeZeroNatToZeroLinearOrderedCommMonoidWithZeroHPowInstHPowInstPowNatOfNat\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instNeZeroNatToZeroLinearOrderedCommMonoidWithZeroHPowInstHPowInstPowNatOfNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/NeZero.html#NeZero\">NeZero</a> (<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L205-L224","name":"Bitvec.toInt_sub_aux","line":205,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_sub_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toInt_sub_aux\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toInt_sub_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_hx : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Data/List/Lemmas.html#List.mapAccumr₂\">List.mapAccumr₂</a> (<span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span> =&gt <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Bool/Basic.html#Bool.carry\">Bool.carry</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#not\">!</a><span class=\"fn\">x</span></span>) <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Bool/Basic.html#Bool.xor3\">Bool.xor3</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>)</span></span>) <span class=\"fn\">x</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>).snd</span></span>)</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a>       <span class=\"fn\">bif <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Data/List/Lemmas.html#List.mapAccumr₂\">List.mapAccumr₂</a> (<span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span> =&gt <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Bool/Basic.html#Bool.carry\">Bool.carry</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#not\">!</a><span class=\"fn\">x</span></span>) <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Bool/Basic.html#Bool.xor3\">Bool.xor3</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>)</span></span>) <span class=\"fn\">x</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>).fst</span> then <span class=\"fn\">1</span> else <span class=\"fn\">0</span></span></span></span>) <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">↑(<span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">y</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L200-L203","name":"Bitvec.toZMod_nsmul","line":200,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_nsmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_nsmul\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_nsmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> (<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L197-L197","name":"Bitvec.nsmul_def","line":197,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.nsmul_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.nsmul_def\"><span class=\"name\">Bitvec</span>.<span class=\"name\">nsmul_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#nsmulRec\">nsmulRec</a> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L195-L195","name":"Bitvec.instSMulNatBitvec","line":195,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instSMulNatBitvec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instSMulNatBitvec\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instSMulNatBitvec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L192-L193","name":"Bitvec.ofZMod_one","line":192,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod_one\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofZMod_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod\">Bitvec.ofZMod</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L188-L189","name":"Bitvec.toZMod_one","line":188,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_one\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L176-L185","name":"Bitvec.toNat_one","line":176,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_one\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toNat_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> then <span class=\"fn\">0</span> else <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L174-L174","name":"Bitvec.toList_one","line":174,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toList_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toList_one\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toList_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">[<a href=\"./Init/Prelude.html#Bool.true\">true</a>]</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L171-L172","name":"Bitvec.ofZMod_zero","line":171,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod_zero\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofZMod_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod\">Bitvec.ofZMod</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L167-L168","name":"Bitvec.toZMod_zero","line":167,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_zero\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L163-L164","name":"Bitvec.ofNat_zero","line":163,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofNat_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofNat_zero\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofNat_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.ofNat\">Bitvec.ofNat</a> <span class=\"fn\">w</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L159-L161","name":"Bitvec.toNat_zero","line":159,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_zero\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toNat_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L156-L156","name":"Bitvec.toList_zero","line":156,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toList_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toList_zero\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toList_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.toList\">Vector.toList</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L154-L154","name":"Bitvec.zero_def","line":154,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.zero_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.zero_def\"><span class=\"name\">Bitvec</span>.<span class=\"name\">zero_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">↑<span class=\"fn\">0</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span>)</span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L150-L152","name":"Bitvec.ofZMod_add","line":150,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod_add\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofZMod_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> (<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> (<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod\">Bitvec.ofZMod</a> (<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod\">Bitvec.ofZMod</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod\">Bitvec.ofZMod</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L146-L148","name":"Bitvec.toZMod_add","line":146,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_add\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> (<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L141-L143","name":"Bitvec.toNat_add","line":141,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_add\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toNat_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> (<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">y</span></span></span>) <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L130-L138","name":"Bitvec.toNat_tail","line":130,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_tail","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_tail\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toNat_tail</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.tail\">Vector.tail</a> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMod.hMod\">%</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> (<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L123-L128","name":"Bitvec.toNat_adc","line":123,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_adc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_adc\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toNat_adc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.adc\">Bitvec.adc</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L104-L121","name":"Bitvec.toNat_adc_aux","line":104,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_adc_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toNat_adc_aux\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toNat_adc_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{y : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(_h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">y</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a>\n    (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Data/List/Lemmas.html#List.mapAccumr₂\">List.mapAccumr₂</a> (<span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span> =&gt <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Bool/Basic.html#Bool.carry\">Bool.carry</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Bool/Basic.html#Bool.xor3\">Bool.xor3</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>)</span></span>) <span class=\"fn\">x</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>).fst</span></span>)\n    <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Data/List/Lemmas.html#List.mapAccumr₂\">List.mapAccumr₂</a> (<span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span> =&gt <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Bool/Basic.html#Bool.carry\">Bool.carry</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Data/Bool/Basic.html#Bool.xor3\">Bool.xor3</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span> <span class=\"fn\">c</span></span>)</span></span>) <span class=\"fn\">x</span> <span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>).snd</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">y</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L98-L102","name":"Bitvec.foldl_addLsb_cons_zero","line":98,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.foldl_addLsb_cons_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.foldl_addLsb_cons_zero\"><span class=\"name\">Bitvec</span>.<span class=\"name\">foldl_addLsb_cons_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">x</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">bif <span class=\"fn\">a</span> then <span class=\"fn\">1</span> else <span class=\"fn\">0</span></span></span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L94-L96","name":"Bitvec.foldl_addLsb_eq_add_foldl_addLsb_zero","line":94,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.foldl_addLsb_eq_add_foldl_addLsb_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.foldl_addLsb_eq_add_foldl_addLsb_zero\"><span class=\"name\">Bitvec</span>.<span class=\"name\">foldl_addLsb_eq_add_foldl_addLsb_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">k</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">0</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L84-L92","name":"Bitvec.foldl_addLsb_add","line":84,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.foldl_addLsb_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.foldl_addLsb_add\"><span class=\"name\">Bitvec</span>.<span class=\"name\">foldl_addLsb_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> (<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span>) <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.length\">List.length</a> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a> <a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.addLsb\">Bitvec.addLsb</a> <span class=\"fn\">n</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L80-L82","name":"Bitvec.ofZMod_toZMod","line":80,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod_toZMod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod_toZMod\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofZMod_toZMod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod\">Bitvec.ofZMod</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">v</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L76-L78","name":"Bitvec.toZMod_ofZMod","line":76,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_ofZMod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_ofZMod\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_ofZMod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> (<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod\">Bitvec.ofZMod</a> <span class=\"fn\">i</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">i</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L73-L74","name":"Bitvec.ofZMod","line":73,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofZMod\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofZMod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> (<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L69-L71","name":"Bitvec.toZMod_val","line":69,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod_val\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Basic.html#ZMod.val\">ZMod.val</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\">Bitvec.toZMod</a> <span class=\"fn\">v</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">v</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L66-L67","name":"Bitvec.toZMod","line":66,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toZMod\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toZMod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> (<span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L51-L51","name":"Bitvec.«term𝟷»","line":51,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term𝟷»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term𝟷»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term𝟷»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L50-L50","name":"Bitvec.«term𝟶»","line":50,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term𝟶»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term𝟶»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term𝟶»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L49-L49","name":"Bitvec.«term𝟷_»","line":49,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term𝟷_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term𝟷_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term𝟷_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L48-L48","name":"Bitvec.«term𝟶_»","line":48,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term𝟶_»","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.«term𝟶_»\"><span class=\"name\">Bitvec</span>.<span class=\"name\">«term𝟶_»</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L44-L44","name":"Bitvec.ofVector","line":44,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofVector","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofVector\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofVector</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector\">Vector</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L42-L42","name":"Bitvec.instCoeBitvecFun","line":42,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instCoeBitvecFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instCoeBitvecFun\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instCoeBitvecFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{width : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">width</span></span>) (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Fun\">Bitvec.Fun</a> <span class=\"fn\">width</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L41-L41","name":"Bitvec.instCoeFunBitvec","line":41,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instCoeFunBitvec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instCoeFunBitvec\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instCoeFunBitvec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{width : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Fun\">Bitvec.Fun</a> <span class=\"fn\">width</span></span>) (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">width</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L38-L39","name":"Bitvec.toFun","line":38,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toFun","doc":"convert `Fin n → Bool` to `Bitvec n` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.toFun\"><span class=\"name\">Bitvec</span>.<span class=\"name\">toFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{width : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">width</span></span> → <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Fun\">Bitvec.Fun</a> <span class=\"fn\">width</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L34-L35","name":"Bitvec.ofFun","line":34,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofFun","doc":"convert `Bitvec n` to `Fin n → Bool` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofFun\"><span class=\"name\">Bitvec</span>.<span class=\"name\">ofFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{width : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Fun\">Bitvec.Fun</a> <span class=\"fn\">width</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">width</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L31-L31","name":"Bitvec.Fun","line":31,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Fun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Fun\"><span class=\"name\">Bitvec</span>.<span class=\"name\">Fun</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(width : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L28-L29","name":"Bitvec.instInhabitedBitvec","line":28,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instInhabitedBitvec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instInhabitedBitvec\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instInhabitedBitvec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L25-L26","name":"Bitvec.instGetElemBitvecFinBoolTrue","line":25,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instGetElemBitvecFinBoolTrue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.instGetElemBitvecFinBoolTrue\"><span class=\"name\">Bitvec</span>.<span class=\"name\">instGetElemBitvecFinBoolTrue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#GetElem\">GetElem</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span>) (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>) <a href=\"./Init/Prelude.html#Bool\">Bool</a> <span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">x</span> =&gt <a href=\"./Init/Prelude.html#True\">True</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L22-L22","name":"Bitvec.width","line":22,"kind":"def","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.width","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.width\"><span class=\"name\">Bitvec</span>.<span class=\"name\">width</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">n</span></span> → <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L16-L16","name":"Vector.getElem_eq_get","line":16,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Vector.getElem_eq_get","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Vector.getElem_eq_get\"><span class=\"name\">Vector</span>.<span class=\"name\">getElem_eq_get</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(v : <span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector\">Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">v</span>[<span class=\"fn\">i</span>]</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector.get\">Vector.get</a> <span class=\"fn\">v</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/bollu/ssa/blob/7adf4b210b3a00710db39d5364e4d58426965664/SSA/Projects/InstCombine/ForMathlib.lean#L12-L13","name":"Vector.instGetElemVectorFinTrue","line":12,"kind":"instance","docLink":"./SSA/Projects/InstCombine/ForMathlib.html#Vector.instGetElemVectorFinTrue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/ForMathlib.html#Vector.instGetElemVectorFinTrue\"><span class=\"name\">Vector</span>.<span class=\"name\">instGetElemVectorFinTrue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#GetElem\">GetElem</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Vector.html#Vector\">Vector</a> <span class=\"fn\">α</span> <span class=\"fn\">n</span></span>) (<span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span></span>) <span class=\"fn\">α</span> <span class=\"fn\">fun <span class=\"fn\">x</span> <span class=\"fn\">x</span> =&gt <a href=\"./Init/Prelude.html#True\">True</a></span></span></div></div>"}]}
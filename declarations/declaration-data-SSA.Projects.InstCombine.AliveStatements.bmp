{"name":"SSA.Projects.InstCombine.AliveStatements","instances":[],"imports":["Init","SSA.Projects.InstCombine.Base","SSA.Projects.InstCombine.Tactic"],"declarations":[{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L526-L529","name":"bitvec_InstCombineShift__724","line":526,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__724","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__724\"><span class=\"name\">bitvec_InstCombineShift__724</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C1</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C1</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C2</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L521-L524","name":"bitvec_InstCombineShift__582","line":521,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__582","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__582\"><span class=\"name\">bitvec_InstCombineShift__582</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L516-L519","name":"bitvec_InstCombineShift__497'''","line":516,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__497'''","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__497'''\"><span class=\"name\">bitvec_InstCombineShift__497'''</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">C2</span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">C2</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L511-L514","name":"bitvec_InstCombineShift__497","line":511,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__497","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__497\"><span class=\"name\">bitvec_InstCombineShift__497</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">C2</span></span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">C2</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L506-L509","name":"bitvec_InstCombineShift__476","line":506,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__476","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__476\"><span class=\"name\">bitvec_InstCombineShift__476</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C2</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">Y</span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\"><span class=\"fn\">C2</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L501-L504","name":"bitvec_InstCombineShift__458","line":501,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__458","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__458\"><span class=\"name\">bitvec_InstCombineShift__458</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.sshr\">Bitvec.sshr</a> <span class=\"fn\">X</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">C</span></span>)</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">Y</span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L496-L499","name":"bitvec_InstCombineShift__440","line":496,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__440","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__440\"><span class=\"name\">bitvec_InstCombineShift__440</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C2</span></span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\"><span class=\"fn\">C2</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L491-L494","name":"bitvec_InstCombineShift__422_2","line":491,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__422_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__422_2\"><span class=\"name\">bitvec_InstCombineShift__422_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.sshr\">Bitvec.sshr</a> <span class=\"fn\">X</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">C</span></span>)</span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L486-L489","name":"bitvec_InstCombineShift__422_1","line":486,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__422_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__422_1\"><span class=\"name\">bitvec_InstCombineShift__422_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">31</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Y</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L481-L484","name":"bitvec_InstCombineShift__351","line":481,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__351","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__351\"><span class=\"name\">bitvec_InstCombineShift__351</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">7</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">7</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">7</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">C1</span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">C1</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L476-L479","name":"bitvec_InstCombineShift__279","line":476,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__279","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__279\"><span class=\"name\">bitvec_InstCombineShift__279</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>) <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L471-L474","name":"bitvec_InstCombineShift__239","line":471,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__239","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_InstCombineShift__239\"><span class=\"name\">bitvec_InstCombineShift__239</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>) <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L466-L469","name":"bitvec_Select_1105","line":466,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_1105","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_1105\"><span class=\"name\">bitvec_Select_1105</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>) <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L461-L464","name":"bitvec_Select_1100","line":461,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_1100","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_1100\"><span class=\"name\">bitvec_Select_1100</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>) <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L456-L459","name":"bitvec_Select_852","line":456,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_852","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_852\"><span class=\"name\">bitvec_Select_852</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a> <span class=\"fn\">a</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L451-L454","name":"bitvec_Select_851","line":451,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_851","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_851\"><span class=\"name\">bitvec_Select_851</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L446-L449","name":"bitvec_Select_859","line":446,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_859","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_859\"><span class=\"name\">bitvec_Select_859</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a> <span class=\"fn\">B</span> <span class=\"fn\">C</span> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L441-L444","name":"bitvec_Select_855","line":441,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_855","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_855\"><span class=\"name\">bitvec_Select_855</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a> <span class=\"fn\">B</span> <span class=\"fn\">C</span> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L436-L439","name":"bitvec_Select_850","line":436,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_850","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_850\"><span class=\"name\">bitvec_Select_850</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a> <span class=\"fn\">B</span> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>) <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L431-L434","name":"bitvec_Select_846","line":431,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_846","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_Select_846\"><span class=\"name\">bitvec_Select_846</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.select\">Bitvec.select</a> <span class=\"fn\">B</span> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>) <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L426-L429","name":"bitvec_1030","line":426,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_1030","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_1030\"><span class=\"name\">bitvec_1030</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sdiv?\">Bitvec.sdiv?</a> <span class=\"fn\">X</span> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span>)</span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">X</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L421-L424","name":"bitvec_891","line":421,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_891","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_891\"><span class=\"name\">bitvec_891</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">13</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(N : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">13</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.udiv?\">Bitvec.udiv?</a> <span class=\"fn\">x</span> (<span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">N</span></span>)</span> <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt&gt&gt</a> <span class=\"fn\">N</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L415-L419","name":"bitvec_820'","line":415,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_820'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_820'\"><span class=\"name\">bitvec_820'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">9</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Op1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">9</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.urem?\">Bitvec.urem?</a> <span class=\"fn\">X</span> <span class=\"fn\">Op1</span></span>) <span class=\"fn\">fun <span class=\"fn\">snd</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">snd</span></span>)</span></span></span>) <span class=\"fn\">fun <span class=\"fn\">fst</span> =&gt <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.udiv?\">Bitvec.udiv?</a> <span class=\"fn\">fst</span> <span class=\"fn\">Op1</span></span></span></span>) <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a>   <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.udiv?\">Bitvec.udiv?</a> <span class=\"fn\">X</span> <span class=\"fn\">Op1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L409-L413","name":"bitvec_820","line":409,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_820","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_820\"><span class=\"name\">bitvec_820</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">9</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Op1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">9</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.urem?\">Bitvec.urem?</a> <span class=\"fn\">X</span> <span class=\"fn\">Op1</span></span>) <span class=\"fn\">fun <span class=\"fn\">snd</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">snd</span></span>)</span></span></span>) <span class=\"fn\">fun <span class=\"fn\">fst</span> =&gt <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sdiv?\">Bitvec.sdiv?</a> <span class=\"fn\">fst</span> <span class=\"fn\">Op1</span></span></span></span>) <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a>   <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sdiv?\">Bitvec.sdiv?</a> <span class=\"fn\">X</span> <span class=\"fn\">Op1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L404-L407","name":"bitvec_290__292","line":404,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_290__292","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_290__292\"><span class=\"name\">bitvec_290__292</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Op1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">Op1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Op1</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L399-L402","name":"bitvec_283","line":399,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_283","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_283\"><span class=\"name\">bitvec_283</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L393-L397","name":"bitvec_276_2","line":393,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_276_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_276_2\"><span class=\"name\">bitvec_276_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.udiv?\">Bitvec.udiv?</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>) <span class=\"fn\">fun <span class=\"fn\">fst</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">fst</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">Y</span></span>)</span>)</span></span></span>) <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a>   <span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.urem?\">Bitvec.urem?</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>) <span class=\"fn\">fun <span class=\"fn\">fst</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">fst</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">X</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L387-L391","name":"bitvec_276","line":387,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_276","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_276\"><span class=\"name\">bitvec_276</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sdiv?\">Bitvec.sdiv?</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>) <span class=\"fn\">fun <span class=\"fn\">fst</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">fst</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">Y</span></span>)</span>)</span></span></span>) <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a>   <span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.urem?\">Bitvec.urem?</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>) <span class=\"fn\">fun <span class=\"fn\">fst</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">fst</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">X</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L381-L385","name":"bitvec_275_2","line":381,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_275_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_275_2\"><span class=\"name\">bitvec_275_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sdiv?\">Bitvec.sdiv?</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>) <span class=\"fn\">fun <span class=\"fn\">fst</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">fst</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">Y</span></span>)</span></span></span>) <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.urem?\">Bitvec.urem?</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>) <span class=\"fn\">fun <span class=\"fn\">snd</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">snd</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L375-L379","name":"bitvec_275","line":375,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_275","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_275\"><span class=\"name\">bitvec_275</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">5</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.udiv?\">Bitvec.udiv?</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>) <span class=\"fn\">fun <span class=\"fn\">fst</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">fst</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">Y</span></span>)</span></span></span>) <a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.Refinement\">⊑</a> <span class=\"fn\"><a href=\"./Init/Data/Option/Basic.html#Option.bind\">Option.bind</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.urem?\">Bitvec.urem?</a> <span class=\"fn\">X</span> <span class=\"fn\">Y</span></span>) <span class=\"fn\">fun <span class=\"fn\">snd</span> =&gt <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> (<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">snd</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L370-L373","name":"bitvec_239","line":370,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_239","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_239\"><span class=\"name\">bitvec_239</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">X</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> (<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">Y</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L365-L368","name":"bitvec_229","line":365,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_229","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_229\"><span class=\"name\">bitvec_229</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Op1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">C1</span></span>) <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">Op1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">Op1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">C1</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">Op1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L360-L363","name":"bitvec_160","line":360,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_160","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_160\"><span class=\"name\">bitvec_160</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">7</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">7</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">7</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C2</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">C1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">C1</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">C2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L355-L358","name":"bitvec_152","line":355,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_152","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_152\"><span class=\"name\">bitvec_152</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L350-L353","name":"bitvec_AndOrXor_2663","line":350,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2663","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2663\"><span class=\"name\">bitvec_AndOrXor_2663</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ult\">Bitvec.ult</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#bne\">!=</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.uge\">Bitvec.uge</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L345-L348","name":"bitvec_AndOrXor_2658","line":345,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2658","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2658\"><span class=\"name\">bitvec_AndOrXor_2658</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L340-L343","name":"bitvec_AndOrXor_2647","line":340,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2647","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2647\"><span class=\"name\">bitvec_AndOrXor_2647</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L335-L338","name":"bitvec_AndOrXor_2627","line":335,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2627","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2627\"><span class=\"name\">bitvec_AndOrXor_2627</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L330-L333","name":"bitvec_AndOrXor_2617","line":330,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2617","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2617\"><span class=\"name\">bitvec_AndOrXor_2617</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L325-L328","name":"bitvec_AndOrXor_2607","line":325,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2607","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2607\"><span class=\"name\">bitvec_AndOrXor_2607</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span>) <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L320-L323","name":"bitvec_AndOrXor_2595","line":320,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2595","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2595\"><span class=\"name\">bitvec_AndOrXor_2595</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L315-L318","name":"bitvec_AndOrXor_2587__BAA___B__A","line":315,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2587__BAA___B__A","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2587__BAA___B__A\"><span class=\"name\">bitvec_AndOrXor_2587__BAA___B__A</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(op1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">op1</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">op1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">op1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L310-L313","name":"bitvec_AndOrXor_2581__BAB___A__B","line":310,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2581__BAB___A__B","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2581__BAB___A__B\"><span class=\"name\">bitvec_AndOrXor_2581__BAB___A__B</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(op1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">op1</span></span>) <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">op1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">op1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L305-L308","name":"bitvec_AndOrXor_2486","line":305,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2486","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2486\"><span class=\"name\">bitvec_AndOrXor_2486</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L300-L303","name":"bitvec_AndOrXor_2475","line":300,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2475","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2475\"><span class=\"name\">bitvec_AndOrXor_2475</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">C</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L295-L298","name":"bitvec_AndOrXor_2453","line":295,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2453","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2453\"><span class=\"name\">bitvec_AndOrXor_2453</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sle\">Bitvec.sle</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sge\">Bitvec.sge</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L290-L293","name":"bitvec_AndOrXor_2443","line":290,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2443","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2443\"><span class=\"name\">bitvec_AndOrXor_2443</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.sshr\">Bitvec.sshr</a> (<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">y</span></span>)</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.sshr\">Bitvec.sshr</a> <span class=\"fn\">x</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec.toNat\">Bitvec.toNat</a> <span class=\"fn\">y</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L285-L288","name":"bitvec_AndOrXor_2430","line":285,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2430","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2430\"><span class=\"name\">bitvec_AndOrXor_2430</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">y</span></span>) <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L280-L283","name":"bitvec_AndOrXor_2429","line":280,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2429","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2429\"><span class=\"name\">bitvec_AndOrXor_2429</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L275-L278","name":"bitvec_AndOrXor_2417","line":275,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2417","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2417\"><span class=\"name\">bitvec_AndOrXor_2417</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nx : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">nx</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">y</span></span>) <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">nx</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L270-L273","name":"bitvec_AndOrXor_2416","line":270,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2416","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2416\"><span class=\"name\">bitvec_AndOrXor_2416</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nx : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">nx</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">nx</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L265-L268","name":"bitvec_AndOrXor_2367","line":265,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2367","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2367\"><span class=\"name\">bitvec_AndOrXor_2367</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(op1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">C1</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">op1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">op1</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">C1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L260-L263","name":"bitvec_AndOrXor_2297","line":260,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2297","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2297\"><span class=\"name\">bitvec_AndOrXor_2297</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L255-L258","name":"bitvec_AndOrXor_2285","line":255,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2285","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2285\"><span class=\"name\">bitvec_AndOrXor_2285</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L250-L253","name":"bitvec_AndOrXor_2284","line":250,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2284","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2284\"><span class=\"name\">bitvec_AndOrXor_2284</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span>) <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L245-L248","name":"bitvec_AndOrXor_2265","line":245,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2265","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2265\"><span class=\"name\">bitvec_AndOrXor_2265</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L240-L243","name":"bitvec_AndOrXor_2264","line":240,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2264","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2264\"><span class=\"name\">bitvec_AndOrXor_2264</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L235-L238","name":"bitvec_AndOrXor_2263","line":235,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2263","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2263\"><span class=\"name\">bitvec_AndOrXor_2263</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(op0 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">op0</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">op0</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">op0</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L230-L233","name":"bitvec_AndOrXor_2247__A__B__A__B","line":230,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2247__A__B__A__B","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2247__A__B__A__B\"><span class=\"name\">bitvec_AndOrXor_2247__A__B__A__B</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L225-L228","name":"bitvec_AndOrXor_2243__B__C__A__B___B__A__C","line":225,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2243__B__C__A__B___B__A__C","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2243__B__C__A__B___B__A__C\"><span class=\"name\">bitvec_AndOrXor_2243__B__C__A__B___B__A__C</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">C</span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L220-L223","name":"bitvec_AndOrXor_2231__A__B__B__C__A___A__B__C","line":220,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2231__A__B__B__C__A___A__B__C","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2231__A__B__B__C__A___A__B__C\"><span class=\"name\">bitvec_AndOrXor_2231__A__B__B__C__A___A__B__C</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">A</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">C</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L215-L218","name":"bitvec_AndOrXor_2188","line":215,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2188","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2188\"><span class=\"name\">bitvec_AndOrXor_2188</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(D : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">D</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">D</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">D</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L210-L213","name":"bitvec_AndOrXor_2123___A__B__A__B___A__B","line":210,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2123___A__B__A__B___A__B","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2123___A__B__A__B___A__B\"><span class=\"name\">bitvec_AndOrXor_2123___A__B__A__B___A__B</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L205-L208","name":"bitvec_AndOrXor_2118___A__B__A___A__B","line":205,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2118___A__B__A___A__B","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2118___A__B__A___A__B\"><span class=\"name\">bitvec_AndOrXor_2118___A__B__A___A__B</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L200-L203","name":"bitvec_AndOrXor_2113___A__B__A___A__B","line":200,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2113___A__B__A___A__B","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2113___A__B__A___A__B\"><span class=\"name\">bitvec_AndOrXor_2113___A__B__A___A__B</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L195-L198","name":"bitvec_AndOrXor_2063__X__C1__C2____X__C2__C1__C2","line":195,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2063__X__C1__C2____X__C2__C1__C2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_2063__X__C1__C2____X__C2__C1__C2\"><span class=\"name\">bitvec_AndOrXor_2063__X__C1__C2____X__C2__C1__C2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">C1</span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">C</span></span>) <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">C1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">C</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L190-L193","name":"bitvec_AndOrXor_1733","line":190,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1733","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1733\"><span class=\"name\">bitvec_AndOrXor_1733</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Core.html#bne\">!=</a> <span class=\"fn\">0</span></span>)</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Core.html#bne\">!=</a> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Core.html#bne\">!=</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L185-L188","name":"bitvec_AndOrXor_1705","line":185,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1705","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1705\"><span class=\"name\">bitvec_AndOrXor_1705</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">0</span></span>)</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ugt\">Bitvec.ugt</a> <span class=\"fn\">B</span> <span class=\"fn\">A</span></span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.uge\">Bitvec.uge</a> (<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <span class=\"fn\">A</span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L180-L183","name":"bitvec_AndOrXor_1704","line":180,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1704","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1704\"><span class=\"name\">bitvec_AndOrXor_1704</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">0</span></span>)</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ule\">Bitvec.ule</a> <span class=\"fn\">A</span> <span class=\"fn\">B</span></span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.uge\">Bitvec.uge</a> (<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <span class=\"fn\">A</span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L175-L178","name":"bitvec_AndOrXor_1683_2","line":175,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1683_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1683_2\"><span class=\"name\">bitvec_AndOrXor_1683_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.uge\">Bitvec.uge</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#bne\">!=</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L170-L173","name":"bitvec_AndOrXor_1683_1","line":170,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1683_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1683_1\"><span class=\"name\">bitvec_AndOrXor_1683_1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ugt\">Bitvec.ugt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.uge\">Bitvec.uge</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L165-L168","name":"bitvec_AndOrXor_1294_A__B__A__B___A__B","line":165,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1294_A__B__A__B___A__B","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1294_A__B__A__B___A__B\"><span class=\"name\">bitvec_AndOrXor_1294_A__B__A__B___A__B</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L160-L163","name":"bitvec_AndOrXor_1288_A__B__B__C__A___A__B__C","line":160,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1288_A__B__B__C__A___A__B__C","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1288_A__B__B__C__A___A__B__C\"><span class=\"name\">bitvec_AndOrXor_1288_A__B__B__C__A___A__B__C</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">A</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L155-L158","name":"bitvec_AndOrXor_1280_ABA___AB","line":155,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1280_ABA___AB","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1280_ABA___AB\"><span class=\"name\">bitvec_AndOrXor_1280_ABA___AB</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L150-L153","name":"bitvec_AndOrXor_1253_A__AB___A__B","line":150,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1253_A__AB___A__B","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1253_A__AB___A__B\"><span class=\"name\">bitvec_AndOrXor_1253_A__AB___A__B</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">A</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L145-L148","name":"bitvec_AndOrXor_1247_AB__AB__AB","line":145,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1247_AB__AB__AB","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1247_AB__AB__AB\"><span class=\"name\">bitvec_AndOrXor_1247_AB__AB__AB</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L140-L143","name":"bitvec_AndOrXor_1241_AB__AB__AB","line":140,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1241_AB__AB__AB","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1241_AB__AB__AB\"><span class=\"name\">bitvec_AndOrXor_1241_AB__AB__AB</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L135-L138","name":"bitvec_AndOrXor_1230__A__B___A__B","line":135,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1230__A__B___A__B","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_1230__A__B___A__B\"><span class=\"name\">bitvec_AndOrXor_1230__A__B___A__B</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(notOp0 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(notOp1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">notOp0</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">notOp1</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">notOp0</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">notOp1</span></span>) <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L130-L133","name":"bitvec_AndOrXor_887_2","line":130,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_887_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_887_2\"><span class=\"name\">bitvec_AndOrXor_887_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">C1</span></span>)</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#bne\">!=</a> <span class=\"fn\">C1</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L125-L128","name":"bitvec_AndOrXor_827","line":125,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_827","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_827\"><span class=\"name\">bitvec_AndOrXor_827</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">0</span></span>)</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L120-L123","name":"bitvec_AndOrXor_794","line":120,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_794","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_794\"><span class=\"name\">bitvec_AndOrXor_794</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sgt\">Bitvec.sgt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>)</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#bne\">!=</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><a href=\"./Init/Prelude.html#Decidable.decide\">decide</a> (<span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.sgt\">Bitvec.sgt</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L115-L118","name":"bitvec_AndOrXor_716","line":115,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_716","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_716\"><span class=\"name\">bitvec_AndOrXor_716</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">d</span></span>)</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">a</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L110-L113","name":"bitvec_AndOrXor_709","line":110,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_709","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_709\"><span class=\"name\">bitvec_AndOrXor_709</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">d</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">d</span></span>)</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">d</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L105-L108","name":"bitvec_AndOrXor_698","line":105,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_698","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_698\"><span class=\"name\">bitvec_AndOrXor_698</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">0</span></span>)</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">d</span></span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">0</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./SSA/Projects/InstCombine/ForMathlib.html#Bitvec.ofBool\">Bitvec.ofBool</a> (<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> (<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">d</span></span>)</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\">0</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L100-L103","name":"bitvec_AndOrXor_144","line":100,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_144","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_144\"><span class=\"name\">bitvec_AndOrXor_144</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">C1</span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><span class=\"fn\">C1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C2</span></span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L95-L98","name":"bitvec_AndOrXor_135","line":95,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_135","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AndOrXor_135\"><span class=\"name\">bitvec_AndOrXor_135</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">C1</span></span>) <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C2</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><span class=\"fn\">C1</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L90-L93","name":"bitvec_AddSub_1624","line":90,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1624","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1624\"><span class=\"name\">bitvec_AddSub_1624</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(A : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(B : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">B</span></span>) <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">B</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">A</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L85-L88","name":"bitvec_AddSub_1619","line":85,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1619","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1619\"><span class=\"name\">bitvec_AddSub_1619</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">Y</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">X</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L80-L83","name":"bitvec_AddSub_1614","line":80,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1614","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1614\"><span class=\"name\">bitvec_AddSub_1614</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">Y</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">Y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L75-L78","name":"bitvec_AddSub_1574","line":75,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1574","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1574\"><span class=\"name\">bitvec_AddSub_1574</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(X : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C2 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">C2</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">C2</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">X</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L70-L73","name":"bitvec_AddSub_1564","line":70,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1564","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1564\"><span class=\"name\">bitvec_AddSub_1564</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L65-L68","name":"bitvec_AddSub_1560","line":65,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1560","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1560\"><span class=\"name\">bitvec_AddSub_1560</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L60-L63","name":"bitvec_AddSub_1556","line":60,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1556","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1556\"><span class=\"name\">bitvec_AddSub_1556</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L55-L58","name":"bitvec_AddSub_1539_2","line":55,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1539_2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1539_2\"><span class=\"name\">bitvec_AddSub_1539_2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">C</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L50-L53","name":"bitvec_AddSub_1539","line":50,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1539","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1539\"><span class=\"name\">bitvec_AddSub_1539</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L45-L48","name":"bitvec_AddSub_1309","line":45,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1309","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1309\"><span class=\"name\">bitvec_AddSub_1309</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L40-L43","name":"bitvec_AddSub_1295","line":40,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1295","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1295\"><span class=\"name\">bitvec_AddSub_1295</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">b</span></span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L35-L38","name":"bitvec_AddSub_1202","line":35,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1202","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1202\"><span class=\"name\">bitvec_AddSub_1202</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">1</span></span></span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">C</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">C</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L30-L33","name":"bitvec_AddSub_1176","line":30,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1176","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1176\"><span class=\"name\">bitvec_AddSub_1176</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L25-L28","name":"bitvec_AddSub_1165","line":25,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1165","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1165\"><span class=\"name\">bitvec_AddSub_1165</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> (<span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L20-L23","name":"bitvec_AddSub_1164","line":20,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1164","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1164\"><span class=\"name\">bitvec_AddSub_1164</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L15-L18","name":"bitvec_AddSub_1156","line":15,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1156","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1156\"><span class=\"name\">bitvec_AddSub_1156</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt&lt&lt</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L10-L13","name":"bitvec_AddSub_1152","line":10,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1152","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1152\"><span class=\"name\">bitvec_AddSub_1152</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(y : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/opencompl/ssa/blob/d26e1a5f4dd1a1ef5b4342115e006b8bf6e901de/SSA/Projects/InstCombine/AliveStatements.lean#L5-L8","name":"bitvec_AddSub_1043","line":5,"kind":"theorem","docLink":"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1043","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./SSA/Projects/InstCombine/AliveStatements.html#bitvec_AddSub_1043\"><span class=\"name\">bitvec_AddSub_1043</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(w : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(C1 : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Z : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(RHS : <span class=\"fn\"><a href=\"./Mathlib/Data/Bitvec/Defs.html#Bitvec\">Bitvec</a> <span class=\"fn\">w</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#HAnd.hAnd\">&amp&amp&amp</a> <span class=\"fn\">C1</span></span> <a href=\"./Init/Prelude.html#HXor.hXor\">^^^</a> <span class=\"fn\">C1</span></span>) <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">RHS</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">RHS</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> (<span class=\"fn\"><span class=\"fn\">Z</span> <a href=\"./Init/Prelude.html#HOr.hOr\">|||</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Complement.complement\">~~~</a><span class=\"fn\">C1</span></span></span>)</span></span></div></div>"}]}
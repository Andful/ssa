{"name":"Lean.Syntax","instances":[{"typeNames":["String.Range"],"name":"String.instInhabitedRange","className":"Inhabited"},{"typeNames":["String.Range"],"name":"String.instReprRange","className":"Repr"},{"typeNames":["String.Range"],"name":"String.instBEqRange","className":"BEq"},{"typeNames":["String.Range"],"name":"String.instHashableRange","className":"Hashable"},{"typeNames":["Lean.Syntax.TopDown","Lean.Syntax"],"name":"Lean.Syntax.instForInTopDownSyntax","className":"ForIn"}],"imports":["Init","Lean.Data.Name","Lean.Data.Format"],"declarations":[{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L526-L530","name":"Lean.Syntax.Stack.matches","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Stack.matches","doc":"Compare the `SyntaxNodeKind`s in `pattern` to those of the `Syntax`\nelements in `stack`. Return `false` if `stack` is shorter than `pattern`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L515-L522","name":"Lean.Syntax.findStack?.go","kind":"opaque","docLink":"./Lean/Syntax.html#Lean.Syntax.findStack?.go","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L512-L522","name":"Lean.Syntax.findStack?","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.findStack?","doc":"Return stack of syntax nodes satisfying `visit`, starting with such a node that also fulfills `accept` (default \"is leaf\"), and ending with the root. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L509-L509","name":"Lean.Syntax.Stack","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Stack","doc":"List of `Syntax` nodes in which each succeeding element is the parent of\nthe current. The associated index is the index of the preceding element in the\nlist of children of the current element. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L503-L504","name":"Lean.Syntax.isAnyAntiquot","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.isAnyAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L500-L501","name":"Lean.Syntax.isTokenAntiquot","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.isTokenAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L497-L498","name":"Lean.Syntax.mkAntiquotSuffixSpliceNode","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.mkAntiquotSuffixSpliceNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L494-L495","name":"Lean.Syntax.getAntiquotSuffixSpliceInner","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.getAntiquotSuffixSpliceInner","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L490-L491","name":"Lean.Syntax.isAntiquotSuffixSplice","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.isAntiquotSuffixSplice","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L486-L488","name":"Lean.Syntax.antiquotSuffixSplice?","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.antiquotSuffixSplice?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L481-L483","name":"Lean.Syntax.mkAntiquotSpliceNode","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.mkAntiquotSpliceNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L475-L479","name":"Lean.Syntax.getAntiquotSpliceSuffix","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.getAntiquotSpliceSuffix","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L471-L472","name":"Lean.Syntax.getAntiquotSpliceContents","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.getAntiquotSpliceContents","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L468-L469","name":"Lean.Syntax.isAntiquotSplice","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.isAntiquotSplice","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L464-L466","name":"Lean.Syntax.antiquotSpliceKind?","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.antiquotSpliceKind?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L455-L461","name":"Lean.Syntax.antiquotKinds","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.antiquotKinds","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L450-L453","name":"Lean.Syntax.antiquotKind?","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.antiquotKind?","doc":"Return kind of parser expected at this antiquotation, and whether it is a \"pseudo\" kind (see `mkAntiquot`). "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L441-L447","name":"Lean.Syntax.getAntiquotTerm","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.getAntiquotTerm","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L434-L438","name":"Lean.Syntax.unescapeAntiquot","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.unescapeAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L430-L431","name":"Lean.Syntax.isEscapedAntiquot","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.isEscapedAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L418-L427","name":"Lean.Syntax.mkAntiquotNode","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.mkAntiquotNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L412-L416","name":"Lean.Syntax.getCanonicalAntiquot","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.getCanonicalAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L409-L410","name":"Lean.Syntax.isAntiquots","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.isAntiquots","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L405-L407","name":"Lean.Syntax.isAntiquot","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.isAntiquot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L397-L402","name":"Lean.Syntax.getQuotContent","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.getQuotContent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L392-L395","name":"Lean.Syntax.isQuot","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.isQuot","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L386-L387","name":"Lean.mkListNode","kind":"def","docLink":"./Lean/Syntax.html#Lean.mkListNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L381-L382","name":"Lean.SyntaxNode.getIdAt","kind":"def","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getIdAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L372-L374","name":"Lean.Syntax.MonadTraverser.getIdx","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.getIdx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L370-L370","name":"Lean.Syntax.MonadTraverser.goRight","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.goRight","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L369-L369","name":"Lean.Syntax.MonadTraverser.goLeft","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.goLeft","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L368-L368","name":"Lean.Syntax.MonadTraverser.goUp","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.goUp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L367-L367","name":"Lean.Syntax.MonadTraverser.goDown","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.goDown","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L366-L366","name":"Lean.Syntax.MonadTraverser.setCur","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.setCur","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L365-L365","name":"Lean.Syntax.MonadTraverser.getCur","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.getCur","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L359-L359","name":"Lean.Syntax.MonadTraverser.st","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.st","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L358-L358","name":"Lean.Syntax.MonadTraverser.mk","kind":"ctor","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L358-L359","name":"Lean.Syntax.MonadTraverser","kind":"class","docLink":"./Lean/Syntax.html#Lean.Syntax.MonadTraverser","doc":"Monad class that gives read/write access to a `Traverser`. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L349-L353","name":"Lean.Syntax.Traverser.right","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.right","doc":"Advance to the right sibling of the current node, if any. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L342-L346","name":"Lean.Syntax.Traverser.left","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.left","doc":"Advance to the left sibling of the current node, if any. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L334-L339","name":"Lean.Syntax.Traverser.up","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.up","doc":"Advance to the parent of the current node, if any. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L327-L331","name":"Lean.Syntax.Traverser.down","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.down","doc":"Advance to the `idx`-th child of the current node. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L323-L324","name":"Lean.Syntax.Traverser.setCur","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.setCur","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L320-L321","name":"Lean.Syntax.Traverser.fromSyntax","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.fromSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L316-L316","name":"Lean.Syntax.Traverser.idxs","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.idxs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L315-L315","name":"Lean.Syntax.Traverser.parents","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.parents","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L314-L314","name":"Lean.Syntax.Traverser.cur","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.cur","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L313-L316","name":"Lean.Syntax.Traverser","kind":"structure","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser","doc":"Represents a cursor into a syntax tree that can be read, written, and advanced down/up/left/right.\nIndices are allowed to be out-of-bound, in which case `cur` is `Syntax.missing`.\nIf the `Traverser` is used linearly, updates are linear in the `Syntax` object as well.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L303-L306","name":"Lean.Syntax.getRange?","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.getRange?","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L297-L301","name":"Lean.Syntax.hasMissing","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.hasMissing","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L288-L295","name":"Lean.Syntax.reprint.reprintLeaf","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.reprint.reprintLeaf","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L271-L295","name":"Lean.Syntax.reprint","kind":"opaque","docLink":"./Lean/Syntax.html#Lean.Syntax.reprint","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L253-L266","name":"Lean.Syntax.instForInTopDownSyntax.loop","kind":"opaque","docLink":"./Lean/Syntax.html#Lean.Syntax.instForInTopDownSyntax.loop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L251-L269","name":"Lean.Syntax.instForInTopDownSyntax","kind":"instance","docLink":"./Lean/Syntax.html#Lean.Syntax.instForInTopDownSyntax","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L249-L249","name":"Lean.Syntax.topDown","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.topDown","doc":"`for _ in stx.topDown` iterates through each node and leaf in `stx` top-down, left-to-right.\nIf `firstChoiceOnly` is `true`, only visit the first argument of each choice node.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L243-L243","name":"Lean.Syntax.TopDown.stx","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.TopDown.stx","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L242-L242","name":"Lean.Syntax.TopDown.firstChoiceOnly","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.TopDown.firstChoiceOnly","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L241-L243","name":"Lean.Syntax.TopDown","kind":"structure","docLink":"./Lean/Syntax.html#Lean.Syntax.TopDown","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L232-L239","name":"Lean.Syntax.identComponents.nameComps","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.identComponents.nameComps","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L199-L239","name":"Lean.Syntax.identComponents","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.identComponents","doc":"Split an `ident` into its dot-separated components while preserving source info.\nMacro scopes are first erased.  For example, `` `foo.bla.boo._@._hyg.4 `` ↦ `` [`foo, `bla, `boo] ``.\nIf `nFields` is set, we take that many fields from the end and keep the remaining components\nas one name. For example, `` `foo.bla.boo `` with `(nFields := 1)` ↦ `` [`foo.bla, `boo] ``. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L187-L192","name":"Lean.Syntax.getTailWithPos","kind":"opaque","docLink":"./Lean/Syntax.html#Lean.Syntax.getTailWithPos","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L175-L185","name":"Lean.Syntax.updateTrailing","kind":"opaque","docLink":"./Lean/Syntax.html#Lean.Syntax.updateTrailing","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L172-L173","name":"Lean.Syntax.updateLeading","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.updateLeading","doc":"Set `SourceInfo.leading` according to the trailing stop of the preceding token.\nThe result is a round-tripping syntax tree IF, in the input syntax tree,\n* all leading stops, atom contents, and trailing starts are correct\n* trailing stops are between the trailing start and the next leading stop.\n\nRemark: after parsing, all `SourceInfo.leading` fields are empty.\nThe `Syntax` argument is the output produced by the parser for `source`.\nThis function \"fixes\" the `source.leading` field.\n\nAdditionally, we try to choose \"nicer\" splits between leading and trailing stops\naccording to some heuristics so that e.g. comments are associated to the (intuitively)\ncorrect token.\n\nNote that the `SourceInfo.trailing` fields must be correct.\nThe implementation of this Function relies on this property. "},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L130-L131","name":"Lean.Syntax.rewriteBottomUp","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.rewriteBottomUp","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L124-L128","name":"Lean.Syntax.rewriteBottomUpM","kind":"opaque","docLink":"./Lean/Syntax.html#Lean.Syntax.rewriteBottomUpM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L115-L122","name":"Lean.Syntax.replaceM","kind":"opaque","docLink":"./Lean/Syntax.html#Lean.Syntax.replaceM","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L110-L113","name":"Lean.Syntax.modifyArg","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.modifyArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L105-L108","name":"Lean.Syntax.modifyArgs","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.modifyArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L102-L103","name":"Lean.Syntax.getIdAt","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.getIdAt","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L98-L100","name":"Lean.Syntax.asNode","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.asNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L93-L96","name":"Lean.Syntax.ifNodeKind","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.ifNodeKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L88-L91","name":"Lean.Syntax.ifNode","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.ifNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L84-L86","name":"Lean.Syntax.setAtomVal","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.setAtomVal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L80-L82","name":"Lean.Syntax.getAtomVal","kind":"def","docLink":"./Lean/Syntax.html#Lean.Syntax.getAtomVal","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L69-L74","name":"Lean.SyntaxNode.modifyArgs","kind":"def","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.modifyArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L66-L67","name":"Lean.SyntaxNode.getArgs","kind":"def","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L63-L64","name":"Lean.SyntaxNode.getArg","kind":"def","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getArg","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L60-L61","name":"Lean.SyntaxNode.getNumArgs","kind":"def","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getNumArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L53-L58","name":"Lean.SyntaxNode.withArgs","kind":"def","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.withArgs","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L46-L51","name":"Lean.SyntaxNode.getKind","kind":"def","docLink":"./Lean/Syntax.html#Lean.SyntaxNode.getKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L41-L42","name":"Lean.isLitKind","kind":"def","docLink":"./Lean/Syntax.html#Lean.isLitKind","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L39-L39","name":"Lean.unreachIsNodeIdent","kind":"def","docLink":"./Lean/Syntax.html#Lean.unreachIsNodeIdent","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L38-L38","name":"Lean.unreachIsNodeAtom","kind":"def","docLink":"./Lean/Syntax.html#Lean.unreachIsNodeAtom","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L37-L37","name":"Lean.unreachIsNodeMissing","kind":"def","docLink":"./Lean/Syntax.html#Lean.unreachIsNodeMissing","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L35-L35","name":"Lean.SyntaxNode","kind":"def","docLink":"./Lean/Syntax.html#Lean.SyntaxNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L33-L33","name":"Lean.IsNode.mk","kind":"ctor","docLink":"./Lean/Syntax.html#Lean.IsNode.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L32-L33","name":"Lean.IsNode","kind":"inductive","docLink":"./Lean/Syntax.html#Lean.IsNode","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L26-L28","name":"Lean.SourceInfo.updateTrailing","kind":"def","docLink":"./Lean/Syntax.html#Lean.SourceInfo.updateTrailing","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L21-L22","name":"String.Range.includes","kind":"def","docLink":"./Lean/Syntax.html#String.Range.includes","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L18-L19","name":"String.Range.contains","kind":"def","docLink":"./Lean/Syntax.html#String.Range.contains","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L16-L16","name":"String.instHashableRange","kind":"instance","docLink":"./Lean/Syntax.html#String.instHashableRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L16-L16","name":"String.instBEqRange","kind":"instance","docLink":"./Lean/Syntax.html#String.instBEqRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L16-L16","name":"String.instReprRange","kind":"instance","docLink":"./Lean/Syntax.html#String.instReprRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L16-L16","name":"String.instInhabitedRange","kind":"instance","docLink":"./Lean/Syntax.html#String.instInhabitedRange","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L15-L15","name":"String.Range.stop","kind":"def","docLink":"./Lean/Syntax.html#String.Range.stop","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L14-L14","name":"String.Range.start","kind":"def","docLink":"./Lean/Syntax.html#String.Range.start","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L13-L16","name":"String.Range","kind":"structure","docLink":"./Lean/Syntax.html#String.Range","doc":"A position range inside a string. This type is mostly in combination with syntax trees,\nas there might not be a single underlying string in this case that could be used for a `Substring`.\n"},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L1-L1","name":"String.Range.mk","kind":"ctor","docLink":"./Lean/Syntax.html#String.Range.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L1-L1","name":"Lean.Syntax.Traverser.mk","kind":"ctor","docLink":"./Lean/Syntax.html#Lean.Syntax.Traverser.mk","doc":""},{"sourceLink":"https://github.com/leanprover/lean4/blob/6e904421304c362a146883baa360f451376dd9b1/src/Lean/Syntax.lean#L1-L1","name":"Lean.Syntax.TopDown.mk","kind":"ctor","docLink":"./Lean/Syntax.html#Lean.Syntax.TopDown.mk","doc":""}]}